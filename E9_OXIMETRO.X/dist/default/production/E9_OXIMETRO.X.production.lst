

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Mar 30 16:39:05 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    64                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    65                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    68  0000                     
    69                           ; Version 2.40
    70                           ; Generated 17/11/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4550 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     _ADRESL	set	4035
   105  0000                     _ADRESH	set	4036
   106  0000                     _TRISBbits	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _ADCON0	set	4034
   109  0000                     _SSPCON2bits	set	4037
   110  0000                     _PORTAbits	set	3968
   111  0000                     _LATBbits	set	3978
   112  0000                     _LATCbits	set	3979
   113  0000                     _TRISAbits	set	3986
   114  0000                     _PIE1bits	set	3997
   115  0000                     _PIR1bits	set	3998
   116  0000                     _SSPCON2	set	4037
   117  0000                     _SSPCON1bits	set	4038
   118  0000                     _SSPSTATbits	set	4039
   119  0000                     _T1CONbits	set	4045
   120  0000                     _TMR1L	set	4046
   121  0000                     _TMR1H	set	4047
   122  0000                     _RCONbits	set	4048
   123  0000                     _T0CONbits	set	4053
   124  0000                     _TMR0L	set	4054
   125  0000                     _TMR0H	set	4055
   126  0000                     _INTCONbits	set	4082
   127  0000                     _SSPBUF	set	4041
   128  0000                     _SSPADD	set	4040
   129  0000                     _IPR1bits	set	3999
   130  0000                     _ADCON2bits	set	4032
   131  0000                     _ADCON1bits	set	4033
   132  0000                     _ADCON0bits	set	4034
   133  0000                     _INTCON2bits	set	4081
   134                           
   135                           	psect	smallconst
   136  000800                     __psmallconst:
   137                           	callstack 0
   138  000800  00                 	db	0
   139  000801                     STR_5:
   140  000801  53                 	db	83	;'S'
   141  000802  41                 	db	65	;'A'
   142  000803  54                 	db	84	;'T'
   143  000804  2E                 	db	46
   144  000805  20                 	db	32
   145  000806  4D                 	db	77	;'M'
   146  000807  4F                 	db	79	;'O'
   147  000808  44                 	db	68	;'D'
   148  000809  45                 	db	69	;'E'
   149  00080A  52                 	db	82	;'R'
   150  00080B  41                 	db	65	;'A'
   151  00080C  44                 	db	68	;'D'
   152  00080D  41                 	db	65	;'A'
   153  00080E  20                 	db	32
   154  00080F  00                 	db	0
   155  000810                     STR_4:
   156  000810  53                 	db	83	;'S'
   157  000811  41                 	db	65	;'A'
   158  000812  54                 	db	84	;'T'
   159  000813  2E                 	db	46
   160  000814  20                 	db	32
   161  000815  4F                 	db	79	;'O'
   162  000816  50                 	db	80	;'P'
   163  000817  54                 	db	84	;'T'
   164  000818  49                 	db	73	;'I'
   165  000819  4D                 	db	77	;'M'
   166  00081A  41                 	db	65	;'A'
   167  00081B  20                 	db	32
   168  00081C  00                 	db	0
   169  00081D                     STR_6:
   170  00081D  53                 	db	83	;'S'
   171  00081E  41                 	db	65	;'A'
   172  00081F  54                 	db	84	;'T'
   173  000820  2E                 	db	46
   174  000821  20                 	db	32
   175  000822  53                 	db	83	;'S'
   176  000823  45                 	db	69	;'E'
   177  000824  56                 	db	86	;'V'
   178  000825  45                 	db	69	;'E'
   179  000826  52                 	db	82	;'R'
   180  000827  41                 	db	65	;'A'
   181  000828  20                 	db	32
   182  000829  00                 	db	0
   183  00082A                     STR_1:
   184  00082A  53                 	db	83	;'S'
   185  00082B  50                 	db	80	;'P'
   186  00082C  30                 	db	48	;'0'
   187  00082D  32                 	db	50	;'2'
   188  00082E  3A                 	db	58	;':'
   189  00082F  00                 	db	0
   190  000830                     STR_2:
   191  000830  25                 	db	37
   192  000831  2E                 	db	46
   193  000832  30                 	db	48	;'0'
   194  000833  32                 	db	50	;'2'
   195  000834  66                 	db	102	;'f'
   196  000835  00                 	db	0
   197  000836                     STR_7:
   198  000836  49                 	db	73	;'I'
   199  000837  4E                 	db	78	;'N'
   200  000838  46                 	db	70	;'F'
   201  000839  00                 	db	0
   202  00083A                     STR_11:
   203  00083A  4E                 	db	78	;'N'
   204  00083B  41                 	db	65	;'A'
   205  00083C  4E                 	db	78	;'N'
   206  00083D  00                 	db	0
   207  00083E                     STR_8:
   208  00083E  69                 	db	105	;'i'
   209  00083F  6E                 	db	110	;'n'
   210  000840  66                 	db	102	;'f'
   211  000841  00                 	db	0
   212  000842                     STR_12:
   213  000842  6E                 	db	110	;'n'
   214  000843  61                 	db	97	;'a'
   215  000844  6E                 	db	110	;'n'
   216  000845  00                 	db	0
   217  000846                     STR_15:
   218  000846  6C                 	db	108	;'l'
   219  000847  66                 	db	102	;'f'
   220  000848  00                 	db	0
   221  000849                     STR_3:
   222  000849  25                 	db	37
   223  00084A  00                 	db	0
   224  00084B  00                 	db	0	; dummy byte at the end
   225  0000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229  003BCC                     __pcinit:
   230                           	callstack 0
   231  003BCC                     start_initialization:
   232                           	callstack 0
   233  003BCC                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Clear objects allocated to BANK1 (100 bytes)
   237  003BCC  EE01  F000         	lfsr	0,__pbssBANK1
   238  003BD0  0E64               	movlw	100
   239  003BD2                     clear_0:
   240  003BD2  6AEE               	clrf	postinc0,c
   241  003BD4  06E8               	decf	wreg,f,c
   242  003BD6  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to BANK0 (34 bytes)
   245  003BD8  EE00  F0DB         	lfsr	0,__pbssBANK0
   246  003BDC  0E22               	movlw	34
   247  003BDE                     clear_1:
   248  003BDE  6AEE               	clrf	postinc0,c
   249  003BE0  06E8               	decf	wreg,f,c
   250  003BE2  E1FD               	bnz	clear_1
   251                           
   252                           ; Clear objects allocated to COMRAM (2 bytes)
   253  003BE4  6A59               	clrf	(__pbssCOMRAM+1)& (0+255),c
   254  003BE6  6A58               	clrf	__pbssCOMRAM& (0+255),c
   255  003BE8                     end_of_initialization:
   256                           	callstack 0
   257  003BE8                     __end_of__initialization:
   258                           	callstack 0
   259  003BE8  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   260  003BEA  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   261  003BEC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   262  003BEE  6EF8               	movwf	tblptru,c
   263  003BF0  0100               	movlb	0
   264  003BF2  EF8B  F012         	goto	_main	;jump to C main() function
   265                           
   266                           	psect	bssCOMRAM
   267  000058                     __pbssCOMRAM:
   268                           	callstack 0
   269  000058                     _flags:
   270                           	callstack 0
   271  000058                     	ds	2
   272                           
   273                           	psect	bssBANK0
   274  0000DB                     __pbssBANK0:
   275                           	callstack 0
   276  0000DB                     floorf@F526:
   277                           	callstack 0
   278  0000DB                     	ds	4
   279  0000DF                     ___fpclassifyf@F465:
   280                           	callstack 0
   281  0000DF                     	ds	4
   282  0000E3                     _Saturacion:
   283                           	callstack 0
   284  0000E3                     	ds	4
   285  0000E7                     _nout:
   286                           	callstack 0
   287  0000E7                     	ds	2
   288  0000E9                     _width:
   289                           	callstack 0
   290  0000E9                     	ds	2
   291  0000EB                     _prec:
   292                           	callstack 0
   293  0000EB                     	ds	2
   294  0000ED                     _C1:
   295                           	callstack 0
   296  0000ED                     	ds	2
   297  0000EF                     _sensor:
   298                           	callstack 0
   299  0000EF                     	ds	2
   300  0000F1                     _cont1:
   301                           	callstack 0
   302  0000F1                     	ds	2
   303  0000F3                     _cont:
   304                           	callstack 0
   305  0000F3                     	ds	2
   306  0000F5                     _s2_Actual:
   307                           	callstack 0
   308  0000F5                     	ds	1
   309  0000F6                     _s2_Anterior:
   310                           	callstack 0
   311  0000F6                     	ds	1
   312  0000F7                     _s1_Actual:
   313                           	callstack 0
   314  0000F7                     	ds	1
   315  0000F8                     _s1_Anterior:
   316                           	callstack 0
   317  0000F8                     	ds	1
   318  0000F9                     _Referencia:
   319                           	callstack 0
   320  0000F9                     	ds	4
   321                           
   322                           	psect	bssBANK1
   323  000100                     __pbssBANK1:
   324                           	callstack 0
   325  000100                     _dbuf:
   326                           	callstack 0
   327  000100                     	ds	80
   328  000150                     _bufferTx:
   329                           	callstack 0
   330  000150                     	ds	20
   331                           
   332                           	psect	cstackBANK0
   333  000060                     __pcstackBANK0:
   334                           	callstack 0
   335  000060                     ?___flsub:
   336                           	callstack 0
   337  000060                     ___flsub@b:
   338                           	callstack 0
   339  000060                     floorf@m:
   340                           	callstack 0
   341                           
   342                           ; 4 bytes @ 0x0
   343  000060                     	ds	4
   344  000064                     floorf@e:
   345                           	callstack 0
   346  000064                     ___flsub@a:
   347                           	callstack 0
   348                           
   349                           ; 4 bytes @ 0x4
   350  000064                     	ds	2
   351  000066                     floorf@u:
   352                           	callstack 0
   353                           
   354                           ; 4 bytes @ 0x6
   355  000066                     	ds	4
   356  00006A                     ?_efgtoa:
   357                           	callstack 0
   358  00006A                     efgtoa@fp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0xA
   362  00006A                     	ds	2
   363  00006C                     efgtoa@f:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0xC
   367  00006C                     	ds	4
   368  000070                     efgtoa@c:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0x10
   372  000070                     	ds	1
   373  000071                     ??_efgtoa:
   374                           
   375                           ; 1 bytes @ 0x11
   376  000071                     	ds	5
   377  000076                     _efgtoa$1891:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x16
   381  000076                     	ds	2
   382  000078                     _efgtoa$1899:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x18
   386  000078                     	ds	2
   387  00007A                     _efgtoa$1900:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x1A
   391  00007A                     	ds	2
   392  00007C                     efgtoa@t:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x1C
   396  00007C                     	ds	2
   397  00007E                     efgtoa@pp:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x1E
   401  00007E                     	ds	2
   402  000080                     efgtoa@ne:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x20
   406  000080                     	ds	2
   407  000082                     efgtoa@m:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x22
   411  000082                     	ds	2
   412  000084                     efgtoa@ou:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x24
   416  000084                     	ds	4
   417  000088                     efgtoa@d:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x28
   421  000088                     	ds	2
   422  00008A                     efgtoa@sign:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x2A
   426  00008A                     	ds	2
   427  00008C                     efgtoa@p:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x2C
   431  00008C                     	ds	2
   432  00008E                     efgtoa@w:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x2E
   436  00008E                     	ds	2
   437  000090                     efgtoa@nmode:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x30
   441  000090                     	ds	1
   442  000091                     efgtoa@mode:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x31
   446  000091                     	ds	1
   447  000092                     efgtoa@h:
   448                           	callstack 0
   449                           
   450                           ; 4 bytes @ 0x32
   451  000092                     	ds	4
   452  000096                     efgtoa@l:
   453                           	callstack 0
   454                           
   455                           ; 4 bytes @ 0x36
   456  000096                     	ds	4
   457  00009A                     efgtoa@i:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x3A
   461  00009A                     	ds	2
   462  00009C                     efgtoa@g:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x3C
   466  00009C                     	ds	4
   467  0000A0                     efgtoa@e:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x40
   471  0000A0                     	ds	2
   472  0000A2                     efgtoa@n:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x42
   476  0000A2                     	ds	2
   477  0000A4                     efgtoa@u:
   478                           	callstack 0
   479                           
   480                           ; 4 bytes @ 0x44
   481  0000A4                     	ds	4
   482  0000A8                     ?_vfpfcnvrt:
   483                           	callstack 0
   484  0000A8                     vfpfcnvrt@fp:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x48
   488  0000A8                     	ds	2
   489  0000AA                     vfpfcnvrt@fmt:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x4A
   493  0000AA                     	ds	2
   494  0000AC                     vfpfcnvrt@ap:
   495                           	callstack 0
   496                           
   497                           ; 2 bytes @ 0x4C
   498  0000AC                     	ds	2
   499  0000AE                     ??_vfpfcnvrt:
   500                           
   501                           ; 1 bytes @ 0x4E
   502  0000AE                     	ds	4
   503  0000B2                     vfpfcnvrt@f:
   504                           	callstack 0
   505                           
   506                           ; 4 bytes @ 0x52
   507  0000B2                     	ds	4
   508  0000B6                     vfpfcnvrt@ct:
   509                           	callstack 0
   510                           
   511                           ; 3 bytes @ 0x56
   512  0000B6                     	ds	3
   513  0000B9                     vfpfcnvrt@c:
   514                           	callstack 0
   515                           
   516                           ; 1 bytes @ 0x59
   517  0000B9                     	ds	1
   518  0000BA                     ?_vfprintf:
   519                           	callstack 0
   520  0000BA                     vfprintf@fp:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x5A
   524  0000BA                     	ds	2
   525  0000BC                     vfprintf@fmt:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x5C
   529  0000BC                     	ds	2
   530  0000BE                     vfprintf@ap:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x5E
   534  0000BE                     	ds	2
   535  0000C0                     ?_sprintf:
   536                           	callstack 0
   537  0000C0                     sprintf@s:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x60
   541  0000C0                     	ds	2
   542  0000C2                     sprintf@fmt:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x62
   546  0000C2                     	ds	6
   547  0000C8                     sprintf@ap:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x68
   551  0000C8                     	ds	2
   552  0000CA                     sprintf@f:
   553                           	callstack 0
   554                           
   555                           ; 11 bytes @ 0x6A
   556  0000CA                     	ds	11
   557  0000D5                     
   558                           ; 2 bytes @ 0x75
   559  0000D5                     	ds	2
   560  0000D7                     
   561                           ; 3 bytes @ 0x77
   562  0000D7                     	ds	3
   563  0000DA                     ??_main:
   564                           
   565                           ; 1 bytes @ 0x7A
   566  0000DA                     	ds	1
   567                           
   568                           	psect	cstackCOMRAM
   569  000001                     __pcstackCOMRAM:
   570                           	callstack 0
   571  000001                     ??_HighISR:
   572  000001                     
   573                           ; 1 bytes @ 0x0
   574  000001                     	ds	1
   575  000002                     ??_LowISR:
   576                           
   577                           ; 1 bytes @ 0x1
   578  000002                     	ds	4
   579  000006                     ?_ADC_Read:
   580                           	callstack 0
   581  000006                     ?_strlen:
   582                           	callstack 0
   583  000006                     ?___fpclassifyf:
   584                           	callstack 0
   585  000006                     ?_isupper:
   586                           	callstack 0
   587  000006                     ?_isdigit:
   588                           	callstack 0
   589  000006                     ?_strncmp:
   590                           	callstack 0
   591  000006                     ?_isspace:
   592                           	callstack 0
   593  000006                     ?___wmul:
   594                           	callstack 0
   595  000006                     ?___awdiv:
   596                           	callstack 0
   597  000006                     ?___awmod:
   598                           	callstack 0
   599  000006                     ?___flneg:
   600                           	callstack 0
   601  000006                     ?___fltol:
   602                           	callstack 0
   603  000006                     ?___xxtofl:
   604                           	callstack 0
   605  000006                     I2C_ADDRESS_SLAVE@modo:
   606                           	callstack 0
   607  000006                     I2C_Write_Data@data:
   608                           	callstack 0
   609  000006                     ___wmul@multiplier:
   610                           	callstack 0
   611  000006                     ___awdiv@dividend:
   612                           	callstack 0
   613  000006                     ___awmod@dividend:
   614                           	callstack 0
   615  000006                     isdigit@c:
   616                           	callstack 0
   617  000006                     isspace@c:
   618                           	callstack 0
   619  000006                     isupper@c:
   620                           	callstack 0
   621  000006                     fputc@c:
   622                           	callstack 0
   623  000006                     strcpy@dest:
   624                           	callstack 0
   625  000006                     strlen@s:
   626                           	callstack 0
   627  000006                     strncmp@_l:
   628                           	callstack 0
   629  000006                     ___fleq@ff1:
   630                           	callstack 0
   631  000006                     ___flneg@f1:
   632                           	callstack 0
   633  000006                     ___fltol@f1:
   634                           	callstack 0
   635  000006                     ___xxtofl@val:
   636                           	callstack 0
   637  000006                     ___fpclassifyf@x:
   638                           	callstack 0
   639                           
   640                           ; 4 bytes @ 0x5
   641  000006                     	ds	1
   642  000007                     ??_I2C_ADDRESS_SLAVE:
   643                           
   644                           ; 1 bytes @ 0x6
   645  000007                     	ds	1
   646  000008                     ??_ADC_Read:
   647  000008                     ??_isupper:
   648  000008                     ??_isdigit:
   649  000008                     ??_isspace:
   650  000008                     I2C_ADDRESS_SLAVE@address:
   651                           	callstack 0
   652  000008                     ___wmul@multiplicand:
   653                           	callstack 0
   654  000008                     ___awdiv@divisor:
   655                           	callstack 0
   656  000008                     ___awmod@divisor:
   657                           	callstack 0
   658  000008                     fputc@fp:
   659                           	callstack 0
   660  000008                     strcpy@src:
   661                           	callstack 0
   662  000008                     strlen@a:
   663                           	callstack 0
   664  000008                     strncmp@_r:
   665                           	callstack 0
   666                           
   667                           ; 2 bytes @ 0x7
   668  000008                     	ds	1
   669  000009                     I2C_ADDRESS_SLAVE@data:
   670                           	callstack 0
   671                           
   672                           ; 1 bytes @ 0x8
   673  000009                     	ds	1
   674  00000A                     ??_fputc:
   675  00000A                     ??___fpclassifyf:
   676  00000A                     ??_strcpy:
   677  00000A                     ??___fltol:
   678  00000A                     ??___xxtofl:
   679  00000A                     PCF8574_Write@byte:
   680                           	callstack 0
   681  00000A                     ADC_Read@CHx:
   682                           	callstack 0
   683  00000A                     ___awdiv@counter:
   684                           	callstack 0
   685  00000A                     ___awmod@counter:
   686                           	callstack 0
   687  00000A                     ___wmul@product:
   688                           	callstack 0
   689  00000A                     strncmp@n:
   690                           	callstack 0
   691  00000A                     ___fleq@ff2:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x9
   695  00000A                     	ds	1
   696  00000B                     LCD_I2C_Databus@cmd:
   697                           	callstack 0
   698  00000B                     ___awdiv@sign:
   699                           	callstack 0
   700  00000B                     ___awmod@sign:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0xA
   704  00000B                     	ds	1
   705  00000C                     ??_strncmp:
   706  00000C                     ?_tolower:
   707                           	callstack 0
   708  00000C                     LCD_I2C_Databus@ctrl:
   709                           	callstack 0
   710  00000C                     _isspace$1978:
   711                           	callstack 0
   712  00000C                     ___awdiv@quotient:
   713                           	callstack 0
   714  00000C                     strcpy@s:
   715                           	callstack 0
   716  00000C                     tolower@c:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0xB
   720  00000C                     	ds	1
   721  00000D                     ?_atoi:
   722                           	callstack 0
   723  00000D                     LCD_I2C_Databus@data:
   724                           	callstack 0
   725  00000D                     atoi@s:
   726                           	callstack 0
   727  00000D                     strncmp@l:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0xC
   731  00000D                     	ds	1
   732  00000E                     ??_tolower:
   733  00000E                     ??___fleq:
   734  00000E                     LCD_I2C_nibble@cmd:
   735                           	callstack 0
   736  00000E                     ___fltol@sign1:
   737                           	callstack 0
   738  00000E                     ___xxtofl@sign:
   739                           	callstack 0
   740  00000E                     ___fpclassifyf@e:
   741                           	callstack 0
   742  00000E                     strcpy@d:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0xD
   746  00000E                     	ds	1
   747  00000F                     ??_atoi:
   748  00000F                     LCD_I2C_nibble@ctrl:
   749                           	callstack 0
   750  00000F                     ___fltol@exp1:
   751                           	callstack 0
   752  00000F                     ___xxtofl@exp:
   753                           	callstack 0
   754  00000F                     fputs@s:
   755                           	callstack 0
   756  00000F                     strncmp@r:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0xE
   760  00000F                     	ds	1
   761  000010                     ??_LCD_I2C_Init:
   762  000010                     LCD_I2C_WriteText@col:
   763                           	callstack 0
   764  000010                     ___xxtofl@arg:
   765                           	callstack 0
   766  000010                     ___fpclassifyf@u:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0xF
   770  000010                     	ds	1
   771  000011                     LCD_I2C_WriteText@string:
   772                           	callstack 0
   773  000011                     fputs@fp:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x10
   777  000011                     	ds	2
   778  000013                     ??_LCD_I2C_WriteText:
   779  000013                     fputs@c:
   780                           	callstack 0
   781  000013                     atoi@neg:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x12
   785  000013                     	ds	1
   786  000014                     ?___flmul:
   787                           	callstack 0
   788  000014                     fputs@i:
   789                           	callstack 0
   790  000014                     ___flmul@b:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x13
   794  000014                     	ds	1
   795  000015                     LCD_I2C_WriteText@row:
   796                           	callstack 0
   797  000015                     atoi@n:
   798                           	callstack 0
   799                           
   800                           ; 2 bytes @ 0x14
   801  000015                     	ds	1
   802  000016                     ?_pad:
   803                           	callstack 0
   804  000016                     pad@fp:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x15
   808  000016                     	ds	2
   809  000018                     pad@buf:
   810                           	callstack 0
   811  000018                     ___flmul@a:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x17
   815  000018                     	ds	2
   816  00001A                     pad@p:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x19
   820  00001A                     	ds	2
   821  00001C                     ??___flmul:
   822  00001C                     ??_pad:
   823                           
   824                           ; 1 bytes @ 0x1B
   825  00001C                     	ds	1
   826  00001D                     pad@i:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x1C
   830  00001D                     	ds	2
   831  00001F                     pad@w:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x1E
   835  00001F                     	ds	1
   836  000020                     ___flmul@sign:
   837                           	callstack 0
   838                           
   839                           ; 1 bytes @ 0x1F
   840  000020                     	ds	1
   841  000021                     ___flmul@aexp:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x20
   845  000021                     	ds	1
   846  000022                     ___flmul@grs:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x21
   850  000022                     	ds	4
   851  000026                     ___flmul@bexp:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x25
   855  000026                     	ds	1
   856  000027                     ___flmul@prod:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x26
   860  000027                     	ds	4
   861  00002B                     ___flmul@temp:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x2A
   865  00002B                     	ds	2
   866  00002D                     ?___fldiv:
   867                           	callstack 0
   868  00002D                     ___flge@ff1:
   869                           	callstack 0
   870  00002D                     ___fldiv@b:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x2C
   874  00002D                     	ds	4
   875  000031                     ___flge@ff2:
   876                           	callstack 0
   877  000031                     ___fldiv@a:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x30
   881  000031                     	ds	4
   882  000035                     ??___fldiv:
   883  000035                     ??___flge:
   884                           
   885                           ; 1 bytes @ 0x34
   886  000035                     	ds	4
   887  000039                     ___fldiv@rem:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x38
   891  000039                     	ds	4
   892  00003D                     ___fldiv@sign:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x3C
   896  00003D                     	ds	1
   897  00003E                     ___fldiv@new_exp:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x3D
   901  00003E                     	ds	2
   902  000040                     ___fldiv@grs:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0x3F
   906  000040                     	ds	4
   907  000044                     ___fldiv@bexp:
   908                           	callstack 0
   909                           
   910                           ; 1 bytes @ 0x43
   911  000044                     	ds	1
   912  000045                     ___fldiv@aexp:
   913                           	callstack 0
   914                           
   915                           ; 1 bytes @ 0x44
   916  000045                     	ds	1
   917  000046                     ?___fladd:
   918                           	callstack 0
   919  000046                     ?_floorf:
   920                           	callstack 0
   921  000046                     ___fladd@b:
   922                           	callstack 0
   923  000046                     floorf@x:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x45
   927  000046                     	ds	4
   928  00004A                     ??_floorf:
   929  00004A                     ___fladd@a:
   930                           	callstack 0
   931                           
   932                           ; 4 bytes @ 0x49
   933  00004A                     	ds	4
   934  00004E                     ??___fladd:
   935                           
   936                           ; 1 bytes @ 0x4D
   937  00004E                     	ds	4
   938  000052                     ___fladd@signs:
   939                           	callstack 0
   940                           
   941                           ; 1 bytes @ 0x51
   942  000052                     	ds	1
   943  000053                     ___fladd@aexp:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x52
   947  000053                     	ds	1
   948  000054                     ___fladd@bexp:
   949                           	callstack 0
   950                           
   951                           ; 1 bytes @ 0x53
   952  000054                     	ds	1
   953  000055                     ___fladd@grs:
   954                           	callstack 0
   955                           
   956                           ; 1 bytes @ 0x54
   957  000055                     	ds	1
   958  000056                     vfprintf@cfmt:
   959                           	callstack 0
   960                           
   961                           ; 2 bytes @ 0x55
   962  000056                     	ds	2
   963  000058                     
   964                           ; 1 bytes @ 0x57
   965 ;;
   966 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   967 ;;
   968 ;; *************** function _main *****************
   969 ;; Defined at:
   970 ;;		line 43 in file "Main_Oximetro.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;  argc            2  117[BANK0 ] int 
   973 ;;  argv            3  119[BANK0 ] PTR PTR unsigned char 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  2  117[BANK0 ] int 
   978 ;; Registers used:
   979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         0       5       0       0       0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0       0       0       0       0
   987 ;;      Temps:          0       1       0       0       0       0       0       0       0
   988 ;;      Totals:         0       6       0       0       0       0       0       0       0
   989 ;;Total ram usage:        6 bytes
   990 ;; Hardware stack levels required when called: 10
   991 ;; This function calls:
   992 ;;		_ADC_Conversion
   993 ;;		_ADC_Read
   994 ;;		_Interrupt_TIMER0
   995 ;;		_Interrupt_TIMER1
   996 ;;		_Interrupt_global
   997 ;;		_LCD_I2C_Init
   998 ;;		_LCD_I2C_WriteText
   999 ;;		_Master_Mode
  1000 ;;		_Timer0_enable
  1001 ;;		_Timer1_enable
  1002 ;;		___fladd
  1003 ;;		___fldiv
  1004 ;;		___flge
  1005 ;;		___flmul
  1006 ;;		___xxtofl
  1007 ;;		_sprintf
  1008 ;; This function is called by:
  1009 ;;		Startup code after reset
  1010 ;; This function uses a non-reentrant model
  1011 ;;
  1012                           
  1013                           	psect	text0
  1014  002516                     __ptext0:
  1015                           	callstack 0
  1016  002516                     _main:
  1017                           	callstack 21
  1018  002516                     
  1019                           ;Main_Oximetro.c: 49:     TRISAbits.RA1 = 1;
  1020  002516  8292               	bsf	146,1,c	;volatile
  1021                           
  1022                           ;Main_Oximetro.c: 50:     TRISAbits.RA2 = 1;
  1023  002518  8492               	bsf	146,2,c	;volatile
  1024                           
  1025                           ;Main_Oximetro.c: 53:     TRISCbits.TRISC0 = 0;
  1026  00251A  9094               	bcf	148,0,c	;volatile
  1027                           
  1028                           ;Main_Oximetro.c: 55:     LATCbits.LATC0 = 0;
  1029  00251C  908B               	bcf	139,0,c	;volatile
  1030                           
  1031                           ;Main_Oximetro.c: 57:     TRISBbits.TRISB2 = 0;
  1032  00251E  9493               	bcf	147,2,c	;volatile
  1033                           
  1034                           ;Main_Oximetro.c: 59:     LATBbits.LATB2 = 0;
  1035  002520  948A               	bcf	138,2,c	;volatile
  1036                           
  1037                           ;Main_Oximetro.c: 63:     TRISCbits.TRISC1 = 0;
  1038  002522  9294               	bcf	148,1,c	;volatile
  1039                           
  1040                           ;Main_Oximetro.c: 65:     LATCbits.LATC1 = 0;
  1041  002524  928B               	bcf	139,1,c	;volatile
  1042                           
  1043                           ;Main_Oximetro.c: 67:     TRISBbits.TRISB3 = 0;
  1044  002526  9693               	bcf	147,3,c	;volatile
  1045                           
  1046                           ;Main_Oximetro.c: 69:     LATBbits.LATB3 = 0;
  1047  002528  968A               	bcf	138,3,c	;volatile
  1048  00252A                     
  1049                           ;Main_Oximetro.c: 72:     Interrupt_global();
  1050  00252A  EC82  F01E         	call	_Interrupt_global	;wreg free
  1051                           
  1052                           ;Main_Oximetro.c: 74:     Interrupt_TIMER0();
  1053  00252E  EC8B  F01E         	call	_Interrupt_TIMER0	;wreg free
  1054  002532                     
  1055                           ;Main_Oximetro.c: 75:     Timer0_enable();
  1056  002532  EC2D  F01E         	call	_Timer0_enable	;wreg free
  1057  002536                     
  1058                           ;Main_Oximetro.c: 77:     Interrupt_TIMER1();
  1059  002536  EC88  F01E         	call	_Interrupt_TIMER1	;wreg free
  1060                           
  1061                           ;Main_Oximetro.c: 78:     Timer1_enable();
  1062  00253A  EC64  F01E         	call	_Timer1_enable	;wreg free
  1063                           
  1064                           ;Main_Oximetro.c: 80:     Master_Mode();
  1065  00253E  EC57  F01E         	call	_Master_Mode	;wreg free
  1066  002542                     
  1067                           ;Main_Oximetro.c: 81:     LCD_I2C_Init();
  1068  002542  ECCC  F016         	call	_LCD_I2C_Init	;wreg free
  1069  002546                     
  1070                           ;Main_Oximetro.c: 82:     ADC_Conversion();
  1071  002546  EC0E  F01E         	call	_ADC_Conversion	;wreg free
  1072  00254A                     
  1073                           ;Main_Oximetro.c: 83:     LCD_I2C_WriteText(0,0,"SP02:");
  1074  00254A  0E00               	movlw	0
  1075  00254C  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  1076  00254E  0E2A               	movlw	low STR_1
  1077  002550  6E11               	movwf	LCD_I2C_WriteText@string^0,c
  1078  002552  0E08               	movlw	high STR_1
  1079  002554  6E12               	movwf	(LCD_I2C_WriteText@string+1)^0,c
  1080  002556  0E00               	movlw	0
  1081  002558  EC5A  F018         	call	_LCD_I2C_WriteText
  1082  00255C                     l5734:
  1083                           
  1084                           ;Main_Oximetro.c: 97:         sensor = ADC_Read(0);
  1085  00255C  0E00               	movlw	0
  1086  00255E  ECD2  F01C         	call	_ADC_Read
  1087  002562  C006  F0EF         	movff	?_ADC_Read,_sensor
  1088  002566  C007  F0F0         	movff	?_ADC_Read+1,_sensor+1
  1089  00256A                     
  1090                           ;Main_Oximetro.c: 98:         Referencia = sensor * -0.32/1024+0.93;
  1091  00256A  0E00               	movlw	0
  1092  00256C  6E31               	movwf	___fldiv@a^0,c
  1093  00256E  0E00               	movlw	0
  1094  002570  6E32               	movwf	(___fldiv@a+1)^0,c
  1095  002572  0E80               	movlw	128
  1096  002574  6E33               	movwf	(___fldiv@a+2)^0,c
  1097  002576  0E44               	movlw	68
  1098  002578  6E34               	movwf	(___fldiv@a+3)^0,c
  1099  00257A  0E0A               	movlw	10
  1100  00257C  6E18               	movwf	___flmul@a^0,c
  1101  00257E  0ED7               	movlw	215
  1102  002580  6E19               	movwf	(___flmul@a+1)^0,c
  1103  002582  0EA3               	movlw	163
  1104  002584  6E1A               	movwf	(___flmul@a+2)^0,c
  1105  002586  0EBE               	movlw	190
  1106  002588  6E1B               	movwf	(___flmul@a+3)^0,c
  1107  00258A  C0EF  F006         	movff	_sensor,___xxtofl@val
  1108  00258E  C0F0  F007         	movff	_sensor+1,___xxtofl@val+1
  1109  002592  6A08               	clrf	(___xxtofl@val+2)^0,c
  1110  002594  6A09               	clrf	(___xxtofl@val+3)^0,c
  1111  002596  0E00               	movlw	0
  1112  002598  EC47  F015         	call	___xxtofl
  1113  00259C  C006  F014         	movff	?___xxtofl,___flmul@b
  1114  0025A0  C007  F015         	movff	?___xxtofl+1,___flmul@b+1
  1115  0025A4  C008  F016         	movff	?___xxtofl+2,___flmul@b+2
  1116  0025A8  C009  F017         	movff	?___xxtofl+3,___flmul@b+3
  1117  0025AC  ECA9  F00E         	call	___flmul	;wreg free
  1118  0025B0  C014  F02D         	movff	?___flmul,___fldiv@b
  1119  0025B4  C015  F02E         	movff	?___flmul+1,___fldiv@b+1
  1120  0025B8  C016  F02F         	movff	?___flmul+2,___fldiv@b+2
  1121  0025BC  C017  F030         	movff	?___flmul+3,___fldiv@b+3
  1122  0025C0  ECBE  F010         	call	___fldiv	;wreg free
  1123  0025C4  C02D  F046         	movff	?___fldiv,___fladd@b
  1124  0025C8  C02E  F047         	movff	?___fldiv+1,___fladd@b+1
  1125  0025CC  C02F  F048         	movff	?___fldiv+2,___fladd@b+2
  1126  0025D0  C030  F049         	movff	?___fldiv+3,___fladd@b+3
  1127  0025D4  0E7B               	movlw	123
  1128  0025D6  6E4A               	movwf	___fladd@a^0,c
  1129  0025D8  0E14               	movlw	20
  1130  0025DA  6E4B               	movwf	(___fladd@a+1)^0,c
  1131  0025DC  0E6E               	movlw	110
  1132  0025DE  6E4C               	movwf	(___fladd@a+2)^0,c
  1133  0025E0  0E3F               	movlw	63
  1134  0025E2  6E4D               	movwf	(___fladd@a+3)^0,c
  1135  0025E4  EC2C  F00A         	call	___fladd	;wreg free
  1136  0025E8  C046  F0F9         	movff	?___fladd,_Referencia
  1137  0025EC  C047  F0FA         	movff	?___fladd+1,_Referencia+1
  1138  0025F0  C048  F0FB         	movff	?___fladd+2,_Referencia+2
  1139  0025F4  C049  F0FC         	movff	?___fladd+3,_Referencia+3
  1140  0025F8                     
  1141                           ;Main_Oximetro.c: 99:         Saturacion = -46.208*Referencia+127.89;
  1142  0025F8  0EFE               	movlw	254
  1143  0025FA  6E18               	movwf	___flmul@a^0,c
  1144  0025FC  0ED4               	movlw	212
  1145  0025FE  6E19               	movwf	(___flmul@a+1)^0,c
  1146  002600  0E38               	movlw	56
  1147  002602  6E1A               	movwf	(___flmul@a+2)^0,c
  1148  002604  0EC2               	movlw	194
  1149  002606  6E1B               	movwf	(___flmul@a+3)^0,c
  1150  002608  C0F9  F014         	movff	_Referencia,___flmul@b
  1151  00260C  C0FA  F015         	movff	_Referencia+1,___flmul@b+1
  1152  002610  C0FB  F016         	movff	_Referencia+2,___flmul@b+2
  1153  002614  C0FC  F017         	movff	_Referencia+3,___flmul@b+3
  1154  002618  ECA9  F00E         	call	___flmul	;wreg free
  1155  00261C  C014  F046         	movff	?___flmul,___fladd@b
  1156  002620  C015  F047         	movff	?___flmul+1,___fladd@b+1
  1157  002624  C016  F048         	movff	?___flmul+2,___fladd@b+2
  1158  002628  C017  F049         	movff	?___flmul+3,___fladd@b+3
  1159  00262C  0EAE               	movlw	174
  1160  00262E  6E4A               	movwf	___fladd@a^0,c
  1161  002630  0EC7               	movlw	199
  1162  002632  6E4B               	movwf	(___fladd@a+1)^0,c
  1163  002634  0EFF               	movlw	255
  1164  002636  6E4C               	movwf	(___fladd@a+2)^0,c
  1165  002638  0E42               	movlw	66
  1166  00263A  6E4D               	movwf	(___fladd@a+3)^0,c
  1167  00263C  EC2C  F00A         	call	___fladd	;wreg free
  1168  002640  C046  F0E3         	movff	?___fladd,_Saturacion
  1169  002644  C047  F0E4         	movff	?___fladd+1,_Saturacion+1
  1170  002648  C048  F0E5         	movff	?___fladd+2,_Saturacion+2
  1171  00264C  C049  F0E6         	movff	?___fladd+3,_Saturacion+3
  1172  002650                     
  1173                           ;Main_Oximetro.c: 100:         sprintf(bufferTx,"%.02f",Saturacion);
  1174  002650  0E50               	movlw	low _bufferTx
  1175  002652  0100               	movlb	0	; () banked
  1176  002654  6FC0               	movwf	sprintf@s& (0+255),b
  1177  002656  0E01               	movlw	high _bufferTx
  1178  002658  6FC1               	movwf	(sprintf@s+1)& (0+255),b
  1179  00265A  0E30               	movlw	low STR_2
  1180  00265C  6FC2               	movwf	sprintf@fmt& (0+255),b
  1181  00265E  0E08               	movlw	high STR_2
  1182  002660  6FC3               	movwf	(sprintf@fmt+1)& (0+255),b
  1183  002662  C0E3  F0C4         	movff	_Saturacion,?_sprintf+4
  1184  002666  C0E4  F0C5         	movff	_Saturacion+1,?_sprintf+5
  1185  00266A  C0E5  F0C6         	movff	_Saturacion+2,?_sprintf+6
  1186  00266E  C0E6  F0C7         	movff	_Saturacion+3,?_sprintf+7
  1187  002672  EC80  F01C         	call	_sprintf	;wreg free
  1188  002676                     
  1189                           ;Main_Oximetro.c: 104:         if(cont>=5){
  1190  002676  0100               	movlb	0	; () banked
  1191  002678  BFF4               	btfsc	(_cont+1)& (0+255),7,b
  1192  00267A  EF48  F013         	goto	u7201
  1193  00267E  51F4               	movf	(_cont+1)& (0+255),w,b
  1194  002680  E109               	bnz	u7200
  1195  002682  0E05               	movlw	5
  1196  002684  5DF3               	subwf	_cont& (0+255),w,b
  1197  002686  A0D8               	btfss	status,0,c
  1198  002688  EF48  F013         	goto	u7201
  1199  00268C  EF4A  F013         	goto	u7200
  1200  002690                     u7201:
  1201  002690  EFE0  F013         	goto	l5766
  1202  002694                     u7200:
  1203  002694                     
  1204                           ; BSR set to: 0
  1205                           ;Main_Oximetro.c: 105:             LATBbits.LATB2 = 1;
  1206  002694  848A               	bsf	138,2,c	;volatile
  1207  002696                     
  1208                           ; BSR set to: 0
  1209                           ;Main_Oximetro.c: 106:             cont = 0;
  1210  002696  0E00               	movlw	0
  1211  002698  6FF4               	movwf	(_cont+1)& (0+255),b
  1212  00269A  0E00               	movlw	0
  1213  00269C  6FF3               	movwf	_cont& (0+255),b
  1214  00269E                     
  1215                           ; BSR set to: 0
  1216                           ;Main_Oximetro.c: 107:             LCD_I2C_WriteText(0,6,bufferTx);
  1217  00269E  0E06               	movlw	6
  1218  0026A0  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  1219  0026A2  0E50               	movlw	low _bufferTx
  1220  0026A4  6E11               	movwf	LCD_I2C_WriteText@string^0,c
  1221  0026A6  0E01               	movlw	high _bufferTx
  1222  0026A8  6E12               	movwf	(LCD_I2C_WriteText@string+1)^0,c
  1223  0026AA  0E00               	movlw	0
  1224  0026AC  EC5A  F018         	call	_LCD_I2C_WriteText
  1225  0026B0                     
  1226                           ;Main_Oximetro.c: 108:             LCD_I2C_WriteText(0,11,"%");
  1227  0026B0  0E0B               	movlw	11
  1228  0026B2  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  1229  0026B4  0E49               	movlw	low STR_3
  1230  0026B6  6E11               	movwf	LCD_I2C_WriteText@string^0,c
  1231  0026B8  0E08               	movlw	high STR_3
  1232  0026BA  6E12               	movwf	(LCD_I2C_WriteText@string+1)^0,c
  1233  0026BC  0E00               	movlw	0
  1234  0026BE  EC5A  F018         	call	_LCD_I2C_WriteText
  1235  0026C2                     
  1236                           ;Main_Oximetro.c: 109:             if(Saturacion > 90.0) {
  1237  0026C2  0E00               	movlw	0
  1238  0026C4  6E2D               	movwf	___flge@ff1^0,c
  1239  0026C6  0E00               	movlw	0
  1240  0026C8  6E2E               	movwf	(___flge@ff1+1)^0,c
  1241  0026CA  0EB4               	movlw	180
  1242  0026CC  6E2F               	movwf	(___flge@ff1+2)^0,c
  1243  0026CE  0E42               	movlw	66
  1244  0026D0  6E30               	movwf	(___flge@ff1+3)^0,c
  1245  0026D2  C0E3  F031         	movff	_Saturacion,___flge@ff2
  1246  0026D6  C0E4  F032         	movff	_Saturacion+1,___flge@ff2+1
  1247  0026DA  C0E5  F033         	movff	_Saturacion+2,___flge@ff2+2
  1248  0026DE  C0E6  F034         	movff	_Saturacion+3,___flge@ff2+3
  1249  0026E2  ECD8  F017         	call	___flge	;wreg free
  1250  0026E6  B0D8               	btfsc	status,0,c
  1251  0026E8  EF78  F013         	goto	u7211
  1252  0026EC  EF7A  F013         	goto	u7210
  1253  0026F0                     u7211:
  1254  0026F0  EF83  F013         	goto	l5756
  1255  0026F4                     u7210:
  1256  0026F4                     
  1257                           ;Main_Oximetro.c: 110:                 LCD_I2C_WriteText(1,0,"SAT. OPTIMA ");
  1258  0026F4  0E00               	movlw	0
  1259  0026F6  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  1260  0026F8  0E10               	movlw	low STR_4
  1261  0026FA  6E11               	movwf	LCD_I2C_WriteText@string^0,c
  1262  0026FC  0E08               	movlw	high STR_4
  1263  0026FE  6E12               	movwf	(LCD_I2C_WriteText@string+1)^0,c
  1264  002700  0E01               	movlw	1
  1265  002702  EC5A  F018         	call	_LCD_I2C_WriteText
  1266  002706                     l5756:
  1267                           
  1268                           ;Main_Oximetro.c: 112:             if(Saturacion > 85.0 && Saturacion < 90.0) {
  1269  002706  0E00               	movlw	0
  1270  002708  6E2D               	movwf	___flge@ff1^0,c
  1271  00270A  0E00               	movlw	0
  1272  00270C  6E2E               	movwf	(___flge@ff1+1)^0,c
  1273  00270E  0EAA               	movlw	170
  1274  002710  6E2F               	movwf	(___flge@ff1+2)^0,c
  1275  002712  0E42               	movlw	66
  1276  002714  6E30               	movwf	(___flge@ff1+3)^0,c
  1277  002716  C0E3  F031         	movff	_Saturacion,___flge@ff2
  1278  00271A  C0E4  F032         	movff	_Saturacion+1,___flge@ff2+1
  1279  00271E  C0E5  F033         	movff	_Saturacion+2,___flge@ff2+2
  1280  002722  C0E6  F034         	movff	_Saturacion+3,___flge@ff2+3
  1281  002726  ECD8  F017         	call	___flge	;wreg free
  1282  00272A  B0D8               	btfsc	status,0,c
  1283  00272C  EF9A  F013         	goto	u7221
  1284  002730  EF9C  F013         	goto	u7220
  1285  002734                     u7221:
  1286  002734  EFBE  F013         	goto	l5762
  1287  002738                     u7220:
  1288  002738  C0E3  F02D         	movff	_Saturacion,___flge@ff1
  1289  00273C  C0E4  F02E         	movff	_Saturacion+1,___flge@ff1+1
  1290  002740  C0E5  F02F         	movff	_Saturacion+2,___flge@ff1+2
  1291  002744  C0E6  F030         	movff	_Saturacion+3,___flge@ff1+3
  1292  002748  0E00               	movlw	0
  1293  00274A  6E31               	movwf	___flge@ff2^0,c
  1294  00274C  0E00               	movlw	0
  1295  00274E  6E32               	movwf	(___flge@ff2+1)^0,c
  1296  002750  0EB4               	movlw	180
  1297  002752  6E33               	movwf	(___flge@ff2+2)^0,c
  1298  002754  0E42               	movlw	66
  1299  002756  6E34               	movwf	(___flge@ff2+3)^0,c
  1300  002758  ECD8  F017         	call	___flge	;wreg free
  1301  00275C  B0D8               	btfsc	status,0,c
  1302  00275E  EFB3  F013         	goto	u7231
  1303  002762  EFB5  F013         	goto	u7230
  1304  002766                     u7231:
  1305  002766  EFBE  F013         	goto	l5762
  1306  00276A                     u7230:
  1307  00276A                     
  1308                           ;Main_Oximetro.c: 113:                 LCD_I2C_WriteText(1,0,"SAT. MODERADA ");
  1309  00276A  0E00               	movlw	0
  1310  00276C  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  1311  00276E  0E01               	movlw	low STR_5
  1312  002770  6E11               	movwf	LCD_I2C_WriteText@string^0,c
  1313  002772  0E08               	movlw	high STR_5
  1314  002774  6E12               	movwf	(LCD_I2C_WriteText@string+1)^0,c
  1315  002776  0E01               	movlw	1
  1316  002778  EC5A  F018         	call	_LCD_I2C_WriteText
  1317  00277C                     l5762:
  1318                           
  1319                           ;Main_Oximetro.c: 115:             if(Saturacion < 85.0) {
  1320  00277C  C0E3  F02D         	movff	_Saturacion,___flge@ff1
  1321  002780  C0E4  F02E         	movff	_Saturacion+1,___flge@ff1+1
  1322  002784  C0E5  F02F         	movff	_Saturacion+2,___flge@ff1+2
  1323  002788  C0E6  F030         	movff	_Saturacion+3,___flge@ff1+3
  1324  00278C  0E00               	movlw	0
  1325  00278E  6E31               	movwf	___flge@ff2^0,c
  1326  002790  0E00               	movlw	0
  1327  002792  6E32               	movwf	(___flge@ff2+1)^0,c
  1328  002794  0EAA               	movlw	170
  1329  002796  6E33               	movwf	(___flge@ff2+2)^0,c
  1330  002798  0E42               	movlw	66
  1331  00279A  6E34               	movwf	(___flge@ff2+3)^0,c
  1332  00279C  ECD8  F017         	call	___flge	;wreg free
  1333  0027A0  B0D8               	btfsc	status,0,c
  1334  0027A2  EFD5  F013         	goto	u7241
  1335  0027A6  EFD7  F013         	goto	u7240
  1336  0027AA                     u7241:
  1337  0027AA  EFE0  F013         	goto	l5766
  1338  0027AE                     u7240:
  1339  0027AE                     
  1340                           ;Main_Oximetro.c: 116:                 LCD_I2C_WriteText(1,0,"SAT. SEVERA ");
  1341  0027AE  0E00               	movlw	0
  1342  0027B0  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  1343  0027B2  0E1D               	movlw	low STR_6
  1344  0027B4  6E11               	movwf	LCD_I2C_WriteText@string^0,c
  1345  0027B6  0E08               	movlw	high STR_6
  1346  0027B8  6E12               	movwf	(LCD_I2C_WriteText@string+1)^0,c
  1347  0027BA  0E01               	movlw	1
  1348  0027BC  EC5A  F018         	call	_LCD_I2C_WriteText
  1349  0027C0                     l5766:
  1350                           
  1351                           ;Main_Oximetro.c: 121:         s1_Actual = PORTAbits.RA1;
  1352  0027C0  0E00               	movlw	0
  1353  0027C2  B280               	btfsc	128,1,c	;volatile
  1354  0027C4  0E01               	movlw	1
  1355  0027C6  0100               	movlb	0	; () banked
  1356  0027C8  6FF7               	movwf	_s1_Actual& (0+255),b
  1357  0027CA                     
  1358                           ; BSR set to: 0
  1359                           ;Main_Oximetro.c: 122:         if(!s1_Anterior && s1_Actual){
  1360  0027CA  51F8               	movf	_s1_Anterior& (0+255),w,b
  1361  0027CC  A4D8               	btfss	status,2,c
  1362  0027CE  EFEB  F013         	goto	u7251
  1363  0027D2  EFED  F013         	goto	u7250
  1364  0027D6                     u7251:
  1365  0027D6  EFFA  F013         	goto	l5776
  1366  0027DA                     u7250:
  1367  0027DA                     
  1368                           ; BSR set to: 0
  1369  0027DA  51F7               	movf	_s1_Actual& (0+255),w,b
  1370  0027DC  B4D8               	btfsc	status,2,c
  1371  0027DE  EFF3  F013         	goto	u7261
  1372  0027E2  EFF5  F013         	goto	u7260
  1373  0027E6                     u7261:
  1374  0027E6  EFFA  F013         	goto	l5776
  1375  0027EA                     u7260:
  1376  0027EA                     
  1377                           ; BSR set to: 0
  1378                           ;Main_Oximetro.c: 123:             LATBbits.LATB3=1;
  1379  0027EA  868A               	bsf	138,3,c	;volatile
  1380  0027EC                     
  1381                           ; BSR set to: 0
  1382                           ;Main_Oximetro.c: 124:             C1=1;
  1383  0027EC  0E00               	movlw	0
  1384  0027EE  6FEE               	movwf	(_C1+1)& (0+255),b
  1385  0027F0  0E01               	movlw	1
  1386  0027F2  6FED               	movwf	_C1& (0+255),b
  1387  0027F4                     l5776:
  1388                           
  1389                           ; BSR set to: 0
  1390                           ;Main_Oximetro.c: 127:         s1_Anterior= s1_Actual;
  1391  0027F4  C0F7  F0F8         	movff	_s1_Actual,_s1_Anterior
  1392  0027F8                     
  1393                           ; BSR set to: 0
  1394                           ;Main_Oximetro.c: 129:         if(cont1>=2){
  1395  0027F8  BFF2               	btfsc	(_cont1+1)& (0+255),7,b
  1396  0027FA  EF08  F014         	goto	u7271
  1397  0027FE  51F2               	movf	(_cont1+1)& (0+255),w,b
  1398  002800  E109               	bnz	u7270
  1399  002802  0E02               	movlw	2
  1400  002804  5DF1               	subwf	_cont1& (0+255),w,b
  1401  002806  A0D8               	btfss	status,0,c
  1402  002808  EF08  F014         	goto	u7271
  1403  00280C  EF0A  F014         	goto	u7270
  1404  002810                     u7271:
  1405  002810  EF2A  F014         	goto	l5786
  1406  002814                     u7270:
  1407  002814                     
  1408                           ; BSR set to: 0
  1409                           ;Main_Oximetro.c: 130:             if(C1==1){
  1410  002814  05ED               	decf	_C1& (0+255),w,b
  1411  002816  11EE               	iorwf	(_C1+1)& (0+255),w,b
  1412  002818  A4D8               	btfss	status,2,c
  1413  00281A  EF11  F014         	goto	u7281
  1414  00281E  EF13  F014         	goto	u7280
  1415  002822                     u7281:
  1416  002822  EF2A  F014         	goto	l5786
  1417  002826                     u7280:
  1418  002826                     
  1419                           ; BSR set to: 0
  1420                           ;Main_Oximetro.c: 131:                 LATBbits.LATB3 = ~LATBbits.LATB3;
  1421  002826  B68A               	btfsc	138,3,c	;volatile
  1422  002828  EF18  F014         	goto	u7291
  1423  00282C  EF1B  F014         	goto	u7290
  1424  002830                     u7291:
  1425  002830  0E01               	movlw	1
  1426  002832  EF1C  F014         	goto	u7296
  1427  002836                     u7290:
  1428  002836  0E00               	movlw	0
  1429  002838                     u7296:
  1430  002838  0AFF               	xorlw	255
  1431  00283A  6FDA               	movwf	??_main& (0+255),b
  1432  00283C  47DA               	rlncf	??_main& (0+255),f,b
  1433  00283E  47DA               	rlncf	??_main& (0+255),f,b
  1434  002840  47DA               	rlncf	??_main& (0+255),f,b
  1435  002842  508A               	movf	138,w,c	;volatile
  1436  002844  19DA               	xorwf	??_main& (0+255),w,b
  1437  002846  0BF7               	andlw	-9
  1438  002848  19DA               	xorwf	??_main& (0+255),w,b
  1439  00284A  6E8A               	movwf	138,c	;volatile
  1440  00284C                     
  1441                           ; BSR set to: 0
  1442                           ;Main_Oximetro.c: 132:                 cont1 = 0;
  1443  00284C  0E00               	movlw	0
  1444  00284E  6FF2               	movwf	(_cont1+1)& (0+255),b
  1445  002850  0E00               	movlw	0
  1446  002852  6FF1               	movwf	_cont1& (0+255),b
  1447  002854                     l5786:
  1448                           
  1449                           ; BSR set to: 0
  1450                           ;Main_Oximetro.c: 137:         if(!s2_Anterior && s2_Actual){
  1451  002854  0E00               	movlw	0
  1452  002856  B480               	btfsc	128,2,c	;volatile
  1453  002858  0E01               	movlw	1
  1454  00285A  6FF5               	movwf	_s2_Actual& (0+255),b
  1455  00285C                     
  1456                           ; BSR set to: 0
  1457  00285C  51F5               	movf	_s2_Actual& (0+255),w,b
  1458  00285E  B4D8               	btfsc	status,2,c
  1459  002860  EF34  F014         	goto	u7301
  1460  002864  EF36  F014         	goto	u7300
  1461  002868                     u7301:
  1462  002868  EFAE  F012         	goto	l5734
  1463  00286C                     u7300:
  1464  00286C                     
  1465                           ; BSR set to: 0
  1466                           ;Main_Oximetro.c: 139:             LATBbits.LATB2=0; LATBbits.LATB3=0;
  1467  00286C  948A               	bcf	138,2,c	;volatile
  1468  00286E  968A               	bcf	138,3,c	;volatile
  1469  002870  EFAE  F012         	goto	l5734
  1470  002874  EF41  F000         	goto	start
  1471  002878                     __end_of_main:
  1472                           	callstack 0
  1473                           
  1474 ;; *************** function _sprintf *****************
  1475 ;; Defined at:
  1476 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_sprintf.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  s               2   96[BANK0 ] PTR unsigned char 
  1479 ;;		 -> bufferTx(20), 
  1480 ;;  fmt             2   98[BANK0 ] PTR const unsigned char 
  1481 ;;		 -> STR_2(6), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  f              11  106[BANK0 ] struct _IO_FILE
  1484 ;;  ap              2  104[BANK0 ] PTR void [1]
  1485 ;;		 -> ?_sprintf(2), 
  1486 ;;  ret             2    0        int 
  1487 ;; Return value:  Size  Location     Type
  1488 ;;                  2   96[BANK0 ] int 
  1489 ;; Registers used:
  1490 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1491 ;; Tracked objects:
  1492 ;;		On entry : 0/0
  1493 ;;		On exit  : 0/0
  1494 ;;		Unchanged: 0/0
  1495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1496 ;;      Params:         0       8       0       0       0       0       0       0       0
  1497 ;;      Locals:         0      13       0       0       0       0       0       0       0
  1498 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1499 ;;      Totals:         0      21       0       0       0       0       0       0       0
  1500 ;;Total ram usage:       21 bytes
  1501 ;; Hardware stack levels used: 1
  1502 ;; Hardware stack levels required when called: 9
  1503 ;; This function calls:
  1504 ;;		_vfprintf
  1505 ;; This function is called by:
  1506 ;;		_main
  1507 ;; This function uses a non-reentrant model
  1508 ;;
  1509                           
  1510                           	psect	text1
  1511  003900                     __ptext1:
  1512                           	callstack 0
  1513  003900                     _sprintf:
  1514                           	callstack 21
  1515  003900  0EC4               	movlw	low (?_sprintf+4)
  1516  003902  0100               	movlb	0	; () banked
  1517  003904  6FC8               	movwf	sprintf@ap& (0+255),b
  1518  003906  0E00               	movlw	high (?_sprintf+4)
  1519  003908  6FC9               	movwf	(sprintf@ap+1)& (0+255),b
  1520  00390A  C0C0  F0CA         	movff	sprintf@s,sprintf@f
  1521  00390E  C0C1  F0CB         	movff	sprintf@s+1,sprintf@f+1
  1522  003912                     
  1523                           ; BSR set to: 0
  1524  003912  0E00               	movlw	0
  1525  003914  6FCE               	movwf	(sprintf@f+4)& (0+255),b
  1526  003916  0E00               	movlw	0
  1527  003918  6FCD               	movwf	(sprintf@f+3)& (0+255),b
  1528  00391A                     
  1529                           ; BSR set to: 0
  1530  00391A  0E00               	movlw	0
  1531  00391C  6FD4               	movwf	(sprintf@f+10)& (0+255),b
  1532  00391E  0E00               	movlw	0
  1533  003920  6FD3               	movwf	(sprintf@f+9)& (0+255),b
  1534  003922                     
  1535                           ; BSR set to: 0
  1536  003922  0ECA               	movlw	low sprintf@f
  1537  003924  6FBA               	movwf	vfprintf@fp& (0+255),b
  1538  003926  0E00               	movlw	high sprintf@f
  1539  003928  6FBB               	movwf	(vfprintf@fp+1)& (0+255),b
  1540  00392A  C0C2  F0BC         	movff	sprintf@fmt,vfprintf@fmt
  1541  00392E  C0C3  F0BD         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1542  003932  0EC8               	movlw	low sprintf@ap
  1543  003934  6FBE               	movwf	vfprintf@ap& (0+255),b
  1544  003936  0E00               	movlw	high sprintf@ap
  1545  003938  6FBF               	movwf	(vfprintf@ap+1)& (0+255),b
  1546  00393A  ECF7  F01B         	call	_vfprintf	;wreg free
  1547  00393E  0100               	movlb	0	; () banked
  1548  003940  51CD               	movf	(sprintf@f+3)& (0+255),w,b
  1549  003942  25C0               	addwf	sprintf@s& (0+255),w,b
  1550  003944  6ED9               	movwf	fsr2l,c
  1551  003946  51CE               	movf	(sprintf@f+4)& (0+255),w,b
  1552  003948  21C1               	addwfc	(sprintf@s+1)& (0+255),w,b
  1553  00394A  6EDA               	movwf	fsr2h,c
  1554  00394C  0E00               	movlw	0
  1555  00394E  6EDF               	movwf	indf2,c
  1556  003950                     
  1557                           ; BSR set to: 0
  1558  003950  0012               	return		;funcret
  1559  003952                     __end_of_sprintf:
  1560                           	callstack 0
  1561                           
  1562 ;; *************** function _vfprintf *****************
  1563 ;; Defined at:
  1564 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;  fp              2   90[BANK0 ] PTR struct _IO_FILE
  1567 ;;		 -> sprintf@f(11), 
  1568 ;;  fmt             2   92[BANK0 ] PTR const unsigned char 
  1569 ;;		 -> STR_2(6), 
  1570 ;;  ap              2   94[BANK0 ] PTR PTR void 
  1571 ;;		 -> sprintf@ap(2), 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  1574 ;;		 -> STR_2(6), 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  2   90[BANK0 ] int 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1584 ;;      Params:         0       6       0       0       0       0       0       0       0
  1585 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1587 ;;      Totals:         2       6       0       0       0       0       0       0       0
  1588 ;;Total ram usage:        8 bytes
  1589 ;; Hardware stack levels used: 1
  1590 ;; Hardware stack levels required when called: 8
  1591 ;; This function calls:
  1592 ;;		_vfpfcnvrt
  1593 ;; This function is called by:
  1594 ;;		_sprintf
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text2
  1599  0037EE                     __ptext2:
  1600                           	callstack 0
  1601  0037EE                     _vfprintf:
  1602                           	callstack 21
  1603  0037EE                     
  1604                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1605  0037EE  C0BC  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  1606  0037F2  C0BD  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1607  0037F6                     
  1608                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1609  0037F6  0E00               	movlw	0
  1610  0037F8  0100               	movlb	0	; () banked
  1611  0037FA  6FE8               	movwf	(_nout+1)& (0+255),b
  1612  0037FC  0E00               	movlw	0
  1613  0037FE  6FE7               	movwf	_nout& (0+255),b
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1616  003800  EF15  F01C         	goto	l5706
  1617  003804                     l5704:
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1621  003804  C0BA  F0A8         	movff	vfprintf@fp,vfpfcnvrt@fp
  1622  003808  C0BB  F0A9         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1623  00380C  0E56               	movlw	low vfprintf@cfmt
  1624  00380E  6FAA               	movwf	vfpfcnvrt@fmt& (0+255),b
  1625  003810  0E00               	movlw	high vfprintf@cfmt
  1626  003812  6FAB               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  1627  003814  C0BE  F0AC         	movff	vfprintf@ap,vfpfcnvrt@ap
  1628  003818  C0BF  F0AD         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1629  00381C  EC8C  F00C         	call	_vfpfcnvrt	;wreg free
  1630  003820  0100               	movlb	0	; () banked
  1631  003822  51A8               	movf	?_vfpfcnvrt& (0+255),w,b
  1632  003824  27E7               	addwf	_nout& (0+255),f,b
  1633  003826  51A9               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  1634  003828  23E8               	addwfc	(_nout+1)& (0+255),f,b
  1635  00382A                     l5706:
  1636                           
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1639  00382A  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  1640  00382E  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1641  003832                     	if	0	;tblptru may be non-zero
  1642  003832                     	endif
  1643  003832                     	if	0	;tblptru may be non-zero
  1644  003832                     	endif
  1645  003832  0008               	tblrd		*
  1646  003834  50F5               	movf	tablat,w,c
  1647  003836  0900               	iorlw	0
  1648  003838  A4D8               	btfss	status,2,c
  1649  00383A  EF21  F01C         	goto	u7191
  1650  00383E  EF23  F01C         	goto	u7190
  1651  003842                     u7191:
  1652  003842  EF02  F01C         	goto	l5704
  1653  003846                     u7190:
  1654  003846                     
  1655                           ; BSR set to: 0
  1656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1657  003846  C0E7  F0BA         	movff	_nout,?_vfprintf
  1658  00384A  C0E8  F0BB         	movff	_nout+1,?_vfprintf+1
  1659  00384E                     
  1660                           ; BSR set to: 0
  1661  00384E  0012               	return		;funcret
  1662  003850                     __end_of_vfprintf:
  1663                           	callstack 0
  1664                           
  1665 ;; *************** function _vfpfcnvrt *****************
  1666 ;; Defined at:
  1667 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  fp              2   72[BANK0 ] PTR struct _IO_FILE
  1670 ;;		 -> sprintf@f(11), 
  1671 ;;  fmt             2   74[BANK0 ] PTR PTR unsigned char 
  1672 ;;		 -> vfprintf@cfmt(2), 
  1673 ;;  ap              2   76[BANK0 ] PTR PTR void 
  1674 ;;		 -> sprintf@ap(2), 
  1675 ;; Auto vars:     Size  Location     Type
  1676 ;;  llu             8    0        unsigned long long 
  1677 ;;  ll              8    0        long long 
  1678 ;;  f               4   82[BANK0 ] long long 
  1679 ;;  ct              3   86[BANK0 ] unsigned char [3]
  1680 ;;  vp              3    0        PTR void 
  1681 ;;  cp              3    0        PTR unsigned char 
  1682 ;;  i               2    0        int 
  1683 ;;  done            2    0        int 
  1684 ;;  c               1   89[BANK0 ] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;                  2   72[BANK0 ] int 
  1687 ;; Registers used:
  1688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1694 ;;      Params:         0       6       0       0       0       0       0       0       0
  1695 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1696 ;;      Temps:          0       4       0       0       0       0       0       0       0
  1697 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1698 ;;Total ram usage:       18 bytes
  1699 ;; Hardware stack levels used: 1
  1700 ;; Hardware stack levels required when called: 7
  1701 ;; This function calls:
  1702 ;;		_atoi
  1703 ;;		_efgtoa
  1704 ;;		_fputc
  1705 ;;		_isdigit
  1706 ;;		_isupper
  1707 ;;		_strncmp
  1708 ;;		_tolower
  1709 ;; This function is called by:
  1710 ;;		_vfprintf
  1711 ;; This function uses a non-reentrant model
  1712 ;;
  1713                           
  1714                           	psect	text3
  1715  001918                     __ptext3:
  1716                           	callstack 0
  1717  001918                     _vfpfcnvrt:
  1718                           	callstack 21
  1719  001918                     
  1720                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.36\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.36\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          6\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1721  001918  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1722  00191C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1723  001920  CFDE FFF6          	movff	postinc2,tblptrl
  1724  001924  CFDD FFF7          	movff	postdec2,tblptrh
  1725  001928                     	if	0	;tblptru may be non-zero
  1726  001928                     	endif
  1727  001928                     	if	0	;tblptru may be non-zero
  1728  001928                     	endif
  1729  001928  0008               	tblrd		*
  1730  00192A  50F5               	movf	tablat,w,c
  1731  00192C  0A25               	xorlw	37
  1732  00192E  A4D8               	btfss	status,2,c
  1733  001930  EF9C  F00C         	goto	u7091
  1734  001934  EF9E  F00C         	goto	u7090
  1735  001938                     u7091:
  1736  001938  EF8D  F00E         	goto	l5692
  1737  00193C                     u7090:
  1738  00193C                     
  1739                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1740  00193C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1741  001940  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1742  001944  2ADE               	incf	postinc2,f,c
  1743  001946  0E00               	movlw	0
  1744  001948  22DD               	addwfc	postdec2,f,c
  1745  00194A                     
  1746                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1747  00194A  0E00               	movlw	0
  1748  00194C  0100               	movlb	0	; () banked
  1749  00194E  6FEA               	movwf	(_width+1)& (0+255),b
  1750  001950  0E00               	movlw	0
  1751  001952  6FE9               	movwf	_width& (0+255),b
  1752  001954  C0E9  F058         	movff	_width,_flags
  1753  001958  C0EA  F059         	movff	_width+1,_flags+1
  1754  00195C                     
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1757  00195C  69EB               	setf	_prec& (0+255),b
  1758  00195E  69EC               	setf	(_prec+1)& (0+255),b
  1759  001960                     
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1762  001960  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1763  001964  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1764  001968  CFDE FFF6          	movff	postinc2,tblptrl
  1765  00196C  CFDD FFF7          	movff	postdec2,tblptrh
  1766  001970                     	if	0	;tblptru may be non-zero
  1767  001970                     	endif
  1768  001970                     	if	0	;tblptru may be non-zero
  1769  001970                     	endif
  1770  001970  0008               	tblrd		*
  1771  001972  50F5               	movf	tablat,w,c
  1772  001974  0A2E               	xorlw	46
  1773  001976  A4D8               	btfss	status,2,c
  1774  001978  EFC0  F00C         	goto	u7101
  1775  00197C  EFC2  F00C         	goto	u7100
  1776  001980                     u7101:
  1777  001980  EF33  F00D         	goto	l5638
  1778  001984                     u7100:
  1779  001984                     
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1782  001984  0E00               	movlw	0
  1783  001986  6FEC               	movwf	(_prec+1)& (0+255),b
  1784  001988  0E00               	movlw	0
  1785  00198A  6FEB               	movwf	_prec& (0+255),b
  1786  00198C                     
  1787                           ; BSR set to: 0
  1788                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1789  00198C  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1790  001990  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1791  001994  2ADE               	incf	postinc2,f,c
  1792  001996  0E00               	movlw	0
  1793  001998  22DD               	addwfc	postdec2,f,c
  1794  00199A                     
  1795                           ; BSR set to: 0
  1796                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1797  00199A  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1798  00199E  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1799  0019A2  CFDE FFF6          	movff	postinc2,tblptrl
  1800  0019A6  CFDD FFF7          	movff	postdec2,tblptrh
  1801  0019AA                     	if	0	;tblptru may be non-zero
  1802  0019AA                     	endif
  1803  0019AA                     	if	0	;tblptru may be non-zero
  1804  0019AA                     	endif
  1805  0019AA  0008               	tblrd		*
  1806  0019AC  50F5               	movf	tablat,w,c
  1807  0019AE  0A2A               	xorlw	42
  1808  0019B0  A4D8               	btfss	status,2,c
  1809  0019B2  EFDD  F00C         	goto	u7111
  1810  0019B6  EFDF  F00C         	goto	u7110
  1811  0019BA                     u7111:
  1812  0019BA  EFFC  F00C         	goto	l5630
  1813  0019BE                     u7110:
  1814  0019BE                     
  1815                           ; BSR set to: 0
  1816                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1817  0019BE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1818  0019C2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1819  0019C6  2ADE               	incf	postinc2,f,c
  1820  0019C8  0E00               	movlw	0
  1821  0019CA  22DD               	addwfc	postdec2,f,c
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1824  0019CC  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1825  0019D0  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1826  0019D4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  1827  0019D8  0E02               	movlw	2
  1828  0019DA  26DE               	addwf	postinc2,f,c
  1829  0019DC  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  1830  0019E0  0E00               	movlw	0
  1831  0019E2  22DD               	addwfc	postdec2,f,c
  1832  0019E4  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1833  0019E8  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1834  0019EC  CFDE F0EB          	movff	postinc2,_prec
  1835  0019F0  CFDD F0EC          	movff	postdec2,_prec+1
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1838  0019F4  EF33  F00D         	goto	l5638
  1839  0019F8                     l5630:
  1840                           
  1841                           ; BSR set to: 0
  1842                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1843  0019F8  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1844  0019FC  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1845  001A00  CFDE F00D          	movff	postinc2,atoi@s
  1846  001A04  CFDD F00E          	movff	postdec2,atoi@s+1
  1847  001A08  EC21  F016         	call	_atoi	;wreg free
  1848  001A0C  C00D  F0EB         	movff	?_atoi,_prec
  1849  001A10  C00E  F0EC         	movff	?_atoi+1,_prec+1
  1850                           
  1851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 && isdigit((*fmt)[0]), ((unsigned)((*fmt)[0])-'0') < 10)) {
  1852  001A14  EF13  F00D         	goto	l5636
  1853  001A18                     l5632:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1857  001A18  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1858  001A1C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1859  001A20  2ADE               	incf	postinc2,f,c
  1860  001A22  0E00               	movlw	0
  1861  001A24  22DD               	addwfc	postdec2,f,c
  1862  001A26                     l5636:
  1863  001A26  0ED0               	movlw	208
  1864  001A28  0100               	movlb	0	; () banked
  1865  001A2A  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  1866  001A2C  0EFF               	movlw	255
  1867  001A2E  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1868  001A30  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1869  001A34  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1870  001A38  CFDE FFF6          	movff	postinc2,tblptrl
  1871  001A3C  CFDD FFF7          	movff	postdec2,tblptrh
  1872  001A40                     	if	0	;tblptru may be non-zero
  1873  001A40                     	endif
  1874  001A40                     	if	0	;tblptru may be non-zero
  1875  001A40                     	endif
  1876  001A40  0008               	tblrd		*
  1877  001A42  50F5               	movf	tablat,w,c
  1878  001A44  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1879  001A46  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1880  001A48  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  1881  001A4A  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1882  001A4C  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1883  001A4E  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1884  001A50  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1885  001A52  E109               	bnz	u7120
  1886  001A54  0E0A               	movlw	10
  1887  001A56  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1888  001A58  A0D8               	btfss	status,0,c
  1889  001A5A  EF31  F00D         	goto	u7121
  1890  001A5E  EF33  F00D         	goto	u7120
  1891  001A62                     u7121:
  1892  001A62  EF0C  F00D         	goto	l5632
  1893  001A66                     u7120:
  1894  001A66                     l5638:
  1895                           
  1896                           ; BSR set to: 0
  1897                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1898  001A66  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1899  001A6A  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1900  001A6E  CFDE FFF6          	movff	postinc2,tblptrl
  1901  001A72  CFDD FFF7          	movff	postdec2,tblptrh
  1902  001A76                     	if	0	;tblptru may be non-zero
  1903  001A76                     	endif
  1904  001A76                     	if	0	;tblptru may be non-zero
  1905  001A76                     	endif
  1906  001A76  0008               	tblrd		*
  1907  001A78  50F5               	movf	tablat,w,c
  1908  001A7A  6E0C               	movwf	tolower@c^0,c
  1909  001A7C  6A0D               	clrf	(tolower@c+1)^0,c
  1910  001A7E  EC1C  F01D         	call	_tolower	;wreg free
  1911  001A82  500C               	movf	?_tolower^0,w,c
  1912  001A84  0100               	movlb	0	; () banked
  1913  001A86  6FB6               	movwf	vfpfcnvrt@ct& (0+255),b
  1914  001A88                     
  1915                           ; BSR set to: 0
  1916                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1917  001A88  51B6               	movf	vfpfcnvrt@ct& (0+255),w,b
  1918  001A8A  B4D8               	btfsc	status,2,c
  1919  001A8C  EF4A  F00D         	goto	u7131
  1920  001A90  EF4C  F00D         	goto	u7130
  1921  001A94                     u7131:
  1922  001A94  EF86  F00D         	goto	l5648
  1923  001A98                     u7130:
  1924  001A98                     
  1925                           ; BSR set to: 0
  1926                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1927  001A98  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1928  001A9C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1929  001AA0  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  1930  001AA4  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  1931  001AA8  0E01               	movlw	1
  1932  001AAA  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  1933  001AAC  0E00               	movlw	0
  1934  001AAE  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1935  001AB0  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1936  001AB4  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1937  001AB8                     	if	0	;tblptru may be non-zero
  1938  001AB8                     	endif
  1939  001AB8                     	if	0	;tblptru may be non-zero
  1940  001AB8                     	endif
  1941  001AB8  0008               	tblrd		*
  1942  001ABA  50F5               	movf	tablat,w,c
  1943  001ABC  6E0C               	movwf	tolower@c^0,c
  1944  001ABE  6A0D               	clrf	(tolower@c+1)^0,c
  1945  001AC0  EC1C  F01D         	call	_tolower	;wreg free
  1946  001AC4  500C               	movf	?_tolower^0,w,c
  1947  001AC6  0100               	movlb	0	; () banked
  1948  001AC8  6FB7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1949  001ACA                     
  1950                           ; BSR set to: 0
  1951                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1952  001ACA  51B7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1953  001ACC  B4D8               	btfsc	status,2,c
  1954  001ACE  EF6B  F00D         	goto	u7141
  1955  001AD2  EF6D  F00D         	goto	u7140
  1956  001AD6                     u7141:
  1957  001AD6  EF86  F00D         	goto	l5648
  1958  001ADA                     u7140:
  1959  001ADA                     
  1960                           ; BSR set to: 0
  1961                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  1962  001ADA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1963  001ADE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1964  001AE2  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  1965  001AE6  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  1966  001AEA  0E02               	movlw	2
  1967  001AEC  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  1968  001AEE  0E00               	movlw	0
  1969  001AF0  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1970  001AF2  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1971  001AF6  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1972  001AFA                     	if	0	;tblptru may be non-zero
  1973  001AFA                     	endif
  1974  001AFA                     	if	0	;tblptru may be non-zero
  1975  001AFA                     	endif
  1976  001AFA  0008               	tblrd		*
  1977  001AFC  50F5               	movf	tablat,w,c
  1978  001AFE  6E0C               	movwf	tolower@c^0,c
  1979  001B00  6A0D               	clrf	(tolower@c+1)^0,c
  1980  001B02  EC1C  F01D         	call	_tolower	;wreg free
  1981  001B06  500C               	movf	?_tolower^0,w,c
  1982  001B08  0100               	movlb	0	; () banked
  1983  001B0A  6FB8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  1984  001B0C                     l5648:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  1988  001B0C  0E66               	movlw	102
  1989  001B0E  19B6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  1990  001B10  A4D8               	btfss	status,2,c
  1991  001B12  EF8D  F00D         	goto	u7151
  1992  001B16  EF8F  F00D         	goto	u7150
  1993  001B1A                     u7151:
  1994  001B1A  EFCF  F00D         	goto	l5660
  1995  001B1E                     u7150:
  1996  001B1E                     
  1997                           ; BSR set to: 0
  1998                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  1999  001B1E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2000  001B22  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2001  001B26  CFDE FFF6          	movff	postinc2,tblptrl
  2002  001B2A  CFDD FFF7          	movff	postdec2,tblptrh
  2003  001B2E                     	if	0	;tblptru may be non-zero
  2004  001B2E                     	endif
  2005  001B2E                     	if	0	;tblptru may be non-zero
  2006  001B2E                     	endif
  2007  001B2E  0008               	tblrd		*
  2008  001B30  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  2009  001B34                     
  2010                           ; BSR set to: 0
  2011                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2012  001B34  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2013  001B38  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2014  001B3C  2ADE               	incf	postinc2,f,c
  2015  001B3E  0E00               	movlw	0
  2016  001B40  22DD               	addwfc	postdec2,f,c
  2017  001B42                     
  2018                           ; BSR set to: 0
  2019                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2020  001B42  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2021  001B46  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2022  001B4A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2023  001B4E  0E04               	movlw	4
  2024  001B50  26DE               	addwf	postinc2,f,c
  2025  001B52  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2026  001B56  0E00               	movlw	0
  2027  001B58  22DD               	addwfc	postdec2,f,c
  2028  001B5A  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2029  001B5E  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2030  001B62  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2031  001B66  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2032  001B6A  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2033  001B6E  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2034  001B72                     l5656:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2038  001B72  C0A8  F06A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2039  001B76  C0A9  F06B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2040  001B7A  C0B2  F06C         	movff	vfpfcnvrt@f,efgtoa@f
  2041  001B7E  C0B3  F06D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2042  001B82  C0B4  F06E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2043  001B86  C0B5  F06F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2044  001B8A  C0B9  F070         	movff	vfpfcnvrt@c,efgtoa@c
  2045  001B8E  EC26  F004         	call	_efgtoa	;wreg free
  2046  001B92  C06A  F0A8         	movff	?_efgtoa,?_vfpfcnvrt
  2047  001B96  C06B  F0A9         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2048  001B9A  EFA8  F00E         	goto	l1070
  2049  001B9E                     l5660:
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2053  001B9E  0EB6               	movlw	low vfpfcnvrt@ct
  2054  001BA0  6E06               	movwf	strncmp@_l^0,c
  2055  001BA2  0E00               	movlw	high vfpfcnvrt@ct
  2056  001BA4  6E07               	movwf	(strncmp@_l+1)^0,c
  2057  001BA6  0E46               	movlw	low STR_15
  2058  001BA8  6E08               	movwf	strncmp@_r^0,c
  2059  001BAA  0E08               	movlw	high STR_15
  2060  001BAC  6E09               	movwf	(strncmp@_r+1)^0,c
  2061  001BAE  0E00               	movlw	0
  2062  001BB0  6E0B               	movwf	(strncmp@n+1)^0,c
  2063  001BB2  0E02               	movlw	2
  2064  001BB4  6E0A               	movwf	strncmp@n^0,c
  2065  001BB6  EC5A  F019         	call	_strncmp	;wreg free
  2066  001BBA  5006               	movf	?_strncmp^0,w,c
  2067  001BBC  1007               	iorwf	(?_strncmp+1)^0,w,c
  2068  001BBE  A4D8               	btfss	status,2,c
  2069  001BC0  EFE4  F00D         	goto	u7161
  2070  001BC4  EFE6  F00D         	goto	u7160
  2071  001BC8                     u7161:
  2072  001BC8  EF55  F00E         	goto	l5676
  2073  001BCC                     u7160:
  2074  001BCC                     
  2075                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 952:             
      +                          c = (*fmt)[1];
  2076  001BCC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2077  001BD0  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2078  001BD4  CFDE F0AE          	movff	postinc2,??_vfpfcnvrt
  2079  001BD8  CFDD F0AF          	movff	postdec2,??_vfpfcnvrt+1
  2080  001BDC  0E01               	movlw	1
  2081  001BDE  0100               	movlb	0	; () banked
  2082  001BE0  27AE               	addwf	??_vfpfcnvrt& (0+255),f,b
  2083  001BE2  0E00               	movlw	0
  2084  001BE4  23AF               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2085  001BE6  C0AE  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2086  001BEA  C0AF  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2087  001BEE                     	if	0	;tblptru may be non-zero
  2088  001BEE                     	endif
  2089  001BEE                     	if	0	;tblptru may be non-zero
  2090  001BEE                     	endif
  2091  001BEE  0008               	tblrd		*
  2092  001BF0  CFF5 F0B9          	movff	tablat,vfpfcnvrt@c
  2093  001BF4                     
  2094                           ; BSR set to: 0
  2095  001BF4  0EBF               	movlw	191
  2096  001BF6  6FAE               	movwf	??_vfpfcnvrt& (0+255),b
  2097  001BF8  0EFF               	movlw	255
  2098  001BFA  6FAF               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2099  001BFC  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2100  001C00  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2101  001C04  CFDE FFF6          	movff	postinc2,tblptrl
  2102  001C08  CFDD FFF7          	movff	postdec2,tblptrh
  2103  001C0C                     	if	0	;tblptru may be non-zero
  2104  001C0C                     	endif
  2105  001C0C                     	if	0	;tblptru may be non-zero
  2106  001C0C                     	endif
  2107  001C0C  0008               	tblrd		*
  2108  001C0E  50F5               	movf	tablat,w,c
  2109  001C10  6FB0               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2110  001C12  6BB1               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2111  001C14  51AE               	movf	??_vfpfcnvrt& (0+255),w,b
  2112  001C16  27B0               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2113  001C18  51AF               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2114  001C1A  23B1               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2115  001C1C  51B1               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2116  001C1E  E107               	bnz	u7171
  2117  001C20  0E1A               	movlw	26
  2118  001C22  5DB0               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2119  001C24  B0D8               	btfsc	status,0,c
  2120  001C26  EF17  F00E         	goto	u7171
  2121  001C2A  EF19  F00E         	goto	u7170
  2122  001C2E                     u7171:
  2123  001C2E  EF33  F00E         	goto	l5670
  2124  001C32                     u7170:
  2125  001C32                     
  2126                           ; BSR set to: 0
  2127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2128  001C32  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2129  001C36  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2130  001C3A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2131  001C3E  0E04               	movlw	4
  2132  001C40  26DE               	addwf	postinc2,f,c
  2133  001C42  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2134  001C46  0E00               	movlw	0
  2135  001C48  22DD               	addwfc	postdec2,f,c
  2136  001C4A  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2137  001C4E  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2138  001C52  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2139  001C56  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2140  001C5A  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2141  001C5E  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2142                           
  2143                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2144  001C62  EF4B  F00E         	goto	l1075
  2145  001C66                     l5670:
  2146                           
  2147                           ; BSR set to: 0
  2148                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2149  001C66  C0AC  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2150  001C6A  C0AD  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2151  001C6E  CFDF F0AE          	movff	indf2,??_vfpfcnvrt
  2152  001C72  0E04               	movlw	4
  2153  001C74  26DE               	addwf	postinc2,f,c
  2154  001C76  CFDF F0AF          	movff	indf2,??_vfpfcnvrt+1
  2155  001C7A  0E00               	movlw	0
  2156  001C7C  22DD               	addwfc	postdec2,f,c
  2157  001C7E  C0AE  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2158  001C82  C0AF  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2159  001C86  CFDE F0B2          	movff	postinc2,vfpfcnvrt@f
  2160  001C8A  CFDE F0B3          	movff	postinc2,vfpfcnvrt@f+1
  2161  001C8E  CFDE F0B4          	movff	postinc2,vfpfcnvrt@f+2
  2162  001C92  CFDE F0B5          	movff	postinc2,vfpfcnvrt@f+3
  2163  001C96                     l1075:
  2164                           
  2165                           ; BSR set to: 0
  2166                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2167  001C96  0E02               	movlw	2
  2168  001C98  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2169  001C9C  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2170  001CA0  26DE               	addwf	postinc2,f,c
  2171  001CA2  0E00               	movlw	0
  2172  001CA4  22DD               	addwfc	postdec2,f,c
  2173  001CA6  EFB9  F00D         	goto	l5656
  2174  001CAA                     l5676:
  2175                           
  2176                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2177  001CAA  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2178  001CAE  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2179  001CB2  CFDE FFF6          	movff	postinc2,tblptrl
  2180  001CB6  CFDD FFF7          	movff	postdec2,tblptrh
  2181  001CBA                     	if	0	;tblptru may be non-zero
  2182  001CBA                     	endif
  2183  001CBA                     	if	0	;tblptru may be non-zero
  2184  001CBA                     	endif
  2185  001CBA  0008               	tblrd		*
  2186  001CBC  50F5               	movf	tablat,w,c
  2187  001CBE  0A25               	xorlw	37
  2188  001CC0  A4D8               	btfss	status,2,c
  2189  001CC2  EF65  F00E         	goto	u7181
  2190  001CC6  EF67  F00E         	goto	u7180
  2191  001CCA                     u7181:
  2192  001CCA  EF7F  F00E         	goto	l5686
  2193  001CCE                     u7180:
  2194  001CCE                     
  2195                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2196  001CCE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2197  001CD2  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2198  001CD6  2ADE               	incf	postinc2,f,c
  2199  001CD8  0E00               	movlw	0
  2200  001CDA  22DD               	addwfc	postdec2,f,c
  2201  001CDC                     
  2202                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2203  001CDC  0E00               	movlw	0
  2204  001CDE  6E07               	movwf	(fputc@c+1)^0,c
  2205  001CE0  0E25               	movlw	37
  2206  001CE2  6E06               	movwf	fputc@c^0,c
  2207  001CE4  C0A8  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2208  001CE8  C0A9  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2209  001CEC  ECC5  F019         	call	_fputc	;wreg free
  2210  001CF0                     l5682:
  2211                           
  2212                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2213  001CF0  0E00               	movlw	0
  2214  001CF2  0100               	movlb	0	; () banked
  2215  001CF4  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2216  001CF6  0E01               	movlw	1
  2217  001CF8  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
  2218  001CFA  EFA8  F00E         	goto	l1070
  2219  001CFE                     l5686:
  2220                           
  2221                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2222  001CFE  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2223  001D02  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2224  001D06  2ADE               	incf	postinc2,f,c
  2225  001D08  0E00               	movlw	0
  2226  001D0A  22DD               	addwfc	postdec2,f,c
  2227  001D0C                     
  2228                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2229  001D0C  0E00               	movlw	0
  2230  001D0E  0100               	movlb	0	; () banked
  2231  001D10  6FA9               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  2232  001D12  0E00               	movlw	0
  2233  001D14  6FA8               	movwf	?_vfpfcnvrt& (0+255),b
  2234  001D16  EFA8  F00E         	goto	l1070
  2235  001D1A                     l5692:
  2236                           
  2237                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2238  001D1A  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2239  001D1E  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2240  001D22  CFDE FFF6          	movff	postinc2,tblptrl
  2241  001D26  CFDD FFF7          	movff	postdec2,tblptrh
  2242  001D2A                     	if	0	;tblptru may be non-zero
  2243  001D2A                     	endif
  2244  001D2A                     	if	0	;tblptru may be non-zero
  2245  001D2A                     	endif
  2246  001D2A  0008               	tblrd		*
  2247  001D2C  50F5               	movf	tablat,w,c
  2248  001D2E  6E06               	movwf	fputc@c^0,c
  2249  001D30  6A07               	clrf	(fputc@c+1)^0,c
  2250  001D32  C0A8  F008         	movff	vfpfcnvrt@fp,fputc@fp
  2251  001D36  C0A9  F009         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2252  001D3A  ECC5  F019         	call	_fputc	;wreg free
  2253  001D3E                     
  2254                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2255  001D3E  C0AA  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2256  001D42  C0AB  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2257  001D46  2ADE               	incf	postinc2,f,c
  2258  001D48  0E00               	movlw	0
  2259  001D4A  22DD               	addwfc	postdec2,f,c
  2260  001D4C  EF78  F00E         	goto	l5682
  2261  001D50                     l1070:
  2262  001D50  0012               	return		;funcret
  2263  001D52                     __end_of_vfpfcnvrt:
  2264                           	callstack 0
  2265                           
  2266 ;; *************** function _strncmp *****************
  2267 ;; Defined at:
  2268 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strncmp.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;  _l              2    5[COMRAM] PTR const unsigned char 
  2271 ;;		 -> vfpfcnvrt@ct(3), 
  2272 ;;  _r              2    7[COMRAM] PTR const unsigned char 
  2273 ;;		 -> STR_17(3), 
  2274 ;;  n               2    9[COMRAM] unsigned int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  r               2   14[COMRAM] PTR const unsigned char 
  2277 ;;		 -> STR_17(3), 
  2278 ;;  l               2   12[COMRAM] PTR const unsigned char 
  2279 ;;		 -> vfpfcnvrt@ct(3), 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    5[COMRAM] int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2289 ;;      Params:         6       0       0       0       0       0       0       0       0
  2290 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2291 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2292 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2293 ;;Total ram usage:       11 bytes
  2294 ;; Hardware stack levels used: 1
  2295 ;; Hardware stack levels required when called: 2
  2296 ;; This function calls:
  2297 ;;		Nothing
  2298 ;; This function is called by:
  2299 ;;		_vfpfcnvrt
  2300 ;; This function uses a non-reentrant model
  2301 ;;
  2302                           
  2303                           	psect	text4
  2304  0032B4                     __ptext4:
  2305                           	callstack 0
  2306  0032B4                     _strncmp:
  2307                           	callstack 25
  2308  0032B4  C006  F00D         	movff	strncmp@_l,strncmp@l
  2309  0032B8  C007  F00E         	movff	strncmp@_l+1,strncmp@l+1
  2310  0032BC  C008  F00F         	movff	strncmp@_r,strncmp@r
  2311  0032C0  C009  F010         	movff	strncmp@_r+1,strncmp@r+1
  2312  0032C4  060A               	decf	strncmp@n^0,f,c
  2313  0032C6  A0D8               	btfss	status,0,c
  2314  0032C8  060B               	decf	(strncmp@n+1)^0,f,c
  2315  0032CA  280A               	incf	strncmp@n^0,w,c
  2316  0032CC  E106               	bnz	u7041
  2317  0032CE  280B               	incf	(strncmp@n+1)^0,w,c
  2318  0032D0  A4D8               	btfss	status,2,c
  2319  0032D2  EF6D  F019         	goto	u7041
  2320  0032D6  EF6F  F019         	goto	u7040
  2321  0032DA                     u7041:
  2322  0032DA  EF7C  F019         	goto	l5600
  2323  0032DE                     u7040:
  2324  0032DE  0E00               	movlw	0
  2325  0032E0  6E07               	movwf	(?_strncmp+1)^0,c
  2326  0032E2  0E00               	movlw	0
  2327  0032E4  6E06               	movwf	?_strncmp^0,c
  2328  0032E6  EFC4  F019         	goto	l1190
  2329  0032EA                     l5598:
  2330  0032EA  4A0D               	infsnz	strncmp@l^0,f,c
  2331  0032EC  2A0E               	incf	(strncmp@l+1)^0,f,c
  2332  0032EE  4A0F               	infsnz	strncmp@r^0,f,c
  2333  0032F0  2A10               	incf	(strncmp@r+1)^0,f,c
  2334  0032F2  060A               	decf	strncmp@n^0,f,c
  2335  0032F4  A0D8               	btfss	status,0,c
  2336  0032F6  060B               	decf	(strncmp@n+1)^0,f,c
  2337  0032F8                     l5600:
  2338  0032F8  C00D  FFD9         	movff	strncmp@l,fsr2l
  2339  0032FC  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2340  003300  50DF               	movf	indf2,w,c
  2341  003302  B4D8               	btfsc	status,2,c
  2342  003304  EF86  F019         	goto	u7051
  2343  003308  EF88  F019         	goto	u7050
  2344  00330C                     u7051:
  2345  00330C  EFB3  F019         	goto	l5608
  2346  003310                     u7050:
  2347  003310  C00F  FFF6         	movff	strncmp@r,tblptrl
  2348  003314  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2349  003318                     	if	0	;tblptru may be non-zero
  2350  003318                     	endif
  2351  003318                     	if	0	;tblptru may be non-zero
  2352  003318                     	endif
  2353  003318  0008               	tblrd		*
  2354  00331A  50F5               	movf	tablat,w,c
  2355  00331C  0900               	iorlw	0
  2356  00331E  B4D8               	btfsc	status,2,c
  2357  003320  EF94  F019         	goto	u7061
  2358  003324  EF96  F019         	goto	u7060
  2359  003328                     u7061:
  2360  003328  EFB3  F019         	goto	l5608
  2361  00332C                     u7060:
  2362  00332C  500A               	movf	strncmp@n^0,w,c
  2363  00332E  100B               	iorwf	(strncmp@n+1)^0,w,c
  2364  003330  B4D8               	btfsc	status,2,c
  2365  003332  EF9D  F019         	goto	u7071
  2366  003336  EF9F  F019         	goto	u7070
  2367  00333A                     u7071:
  2368  00333A  EFB3  F019         	goto	l5608
  2369  00333E                     u7070:
  2370  00333E  C00D  FFD9         	movff	strncmp@l,fsr2l
  2371  003342  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2372  003346  50DF               	movf	indf2,w,c
  2373  003348  6E0C               	movwf	??_strncmp^0,c
  2374  00334A  C00F  FFF6         	movff	strncmp@r,tblptrl
  2375  00334E  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2376  003352                     	if	0	;tblptru may be non-zero
  2377  003352                     	endif
  2378  003352                     	if	0	;tblptru may be non-zero
  2379  003352                     	endif
  2380  003352  0008               	tblrd		*
  2381  003354  50F5               	movf	tablat,w,c
  2382  003356  180C               	xorwf	??_strncmp^0,w,c
  2383  003358  B4D8               	btfsc	status,2,c
  2384  00335A  EFB1  F019         	goto	u7081
  2385  00335E  EFB3  F019         	goto	u7080
  2386  003362                     u7081:
  2387  003362  EF75  F019         	goto	l5598
  2388  003366                     u7080:
  2389  003366                     l5608:
  2390  003366  C00D  FFD9         	movff	strncmp@l,fsr2l
  2391  00336A  C00E  FFDA         	movff	strncmp@l+1,fsr2h
  2392  00336E  50DF               	movf	indf2,w,c
  2393  003370  6E0C               	movwf	??_strncmp^0,c
  2394  003372  C00F  FFF6         	movff	strncmp@r,tblptrl
  2395  003376  C010  FFF7         	movff	strncmp@r+1,tblptrh
  2396  00337A                     	if	0	;tblptru may be non-zero
  2397  00337A                     	endif
  2398  00337A                     	if	0	;tblptru may be non-zero
  2399  00337A                     	endif
  2400  00337A  0008               	tblrd		*
  2401  00337C  50F5               	movf	tablat,w,c
  2402  00337E  5C0C               	subwf	??_strncmp^0,w,c
  2403  003380  6E06               	movwf	?_strncmp^0,c
  2404  003382  6A07               	clrf	(?_strncmp+1)^0,c
  2405  003384  A0D8               	btfss	status,0,c
  2406  003386  0607               	decf	(?_strncmp+1)^0,f,c
  2407  003388                     l1190:
  2408  003388  0012               	return		;funcret
  2409  00338A                     __end_of_strncmp:
  2410                           	callstack 0
  2411                           
  2412 ;; *************** function _efgtoa *****************
  2413 ;; Defined at:
  2414 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  fp              2   10[BANK0 ] PTR struct _IO_FILE
  2417 ;;		 -> sprintf@f(11), 
  2418 ;;  f               4   12[BANK0 ] PTR struct _IO_FILE
  2419 ;;  c               1   16[BANK0 ] unsigned char 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  u               4   68[BANK0 ] unsigned char 
  2422 ;;  g               4   60[BANK0 ] unsigned char 
  2423 ;;  l               4   54[BANK0 ] unsigned char 
  2424 ;;  h               4   50[BANK0 ] unsigned char 
  2425 ;;  ou              4   36[BANK0 ] unsigned char 
  2426 ;;  n               2   66[BANK0 ] int 
  2427 ;;  e               2   64[BANK0 ] int 
  2428 ;;  i               2   58[BANK0 ] int 
  2429 ;;  w               2   46[BANK0 ] int 
  2430 ;;  p               2   44[BANK0 ] int 
  2431 ;;  sign            2   42[BANK0 ] int 
  2432 ;;  d               2   40[BANK0 ] int 
  2433 ;;  m               2   34[BANK0 ] int 
  2434 ;;  ne              2   32[BANK0 ] int 
  2435 ;;  pp              2   30[BANK0 ] int 
  2436 ;;  t               2   28[BANK0 ] int 
  2437 ;;  mode            1   49[BANK0 ] unsigned char 
  2438 ;;  nmode           1   48[BANK0 ] unsigned char 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  2   10[BANK0 ] int 
  2441 ;; Registers used:
  2442 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2448 ;;      Params:         0       7       0       0       0       0       0       0       0
  2449 ;;      Locals:         0      50       0       0       0       0       0       0       0
  2450 ;;      Temps:          0       5       0       0       0       0       0       0       0
  2451 ;;      Totals:         0      62       0       0       0       0       0       0       0
  2452 ;;Total ram usage:       62 bytes
  2453 ;; Hardware stack levels used: 1
  2454 ;; Hardware stack levels required when called: 6
  2455 ;; This function calls:
  2456 ;;		___awdiv
  2457 ;;		___awmod
  2458 ;;		___fladd
  2459 ;;		___fldiv
  2460 ;;		___fleq
  2461 ;;		___flge
  2462 ;;		___flmul
  2463 ;;		___flneg
  2464 ;;		___flsub
  2465 ;;		___fltol
  2466 ;;		___fpclassifyf
  2467 ;;		_floorf
  2468 ;;		_isupper
  2469 ;;		_pad
  2470 ;;		_strcpy
  2471 ;;		_tolower
  2472 ;; This function is called by:
  2473 ;;		_vfpfcnvrt
  2474 ;; This function uses a non-reentrant model
  2475 ;;
  2476                           
  2477                           	psect	text5
  2478  00084C                     __ptext5:
  2479                           	callstack 0
  2480  00084C                     _efgtoa:
  2481                           	callstack 21
  2482  00084C                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.36\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2484  00084C  0E00               	movlw	0
  2485  00084E  0100               	movlb	0	; () banked
  2486  000850  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  2487  000852  0E00               	movlw	0
  2488  000854  6F8A               	movwf	efgtoa@sign& (0+255),b
  2489  000856                     
  2490                           ; BSR set to: 0
  2491                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2492  000856  C06C  F09C         	movff	efgtoa@f,efgtoa@g
  2493  00085A  C06D  F09D         	movff	efgtoa@f+1,efgtoa@g+1
  2494  00085E  C06E  F09E         	movff	efgtoa@f+2,efgtoa@g+2
  2495  000862  C06F  F09F         	movff	efgtoa@f+3,efgtoa@g+3
  2496  000866                     
  2497                           ; BSR set to: 0
  2498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2499  000866  BF9F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2500  000868  EF3A  F004         	goto	u6520
  2501  00086C  EF38  F004         	goto	u6521
  2502  000870                     u6521:
  2503  000870  EF50  F004         	goto	l5264
  2504  000874                     u6520:
  2505  000874                     
  2506                           ; BSR set to: 0
  2507                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2508  000874  0E00               	movlw	0
  2509  000876  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  2510  000878  0E01               	movlw	1
  2511  00087A  6F8A               	movwf	efgtoa@sign& (0+255),b
  2512  00087C                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2515  00087C  C09C  F006         	movff	efgtoa@g,___flneg@f1
  2516  000880  C09D  F007         	movff	efgtoa@g+1,___flneg@f1+1
  2517  000884  C09E  F008         	movff	efgtoa@g+2,___flneg@f1+2
  2518  000888  C09F  F009         	movff	efgtoa@g+3,___flneg@f1+3
  2519  00088C  EC7D  F01D         	call	___flneg	;wreg free
  2520  000890  C006  F09C         	movff	?___flneg,efgtoa@g
  2521  000894  C007  F09D         	movff	?___flneg+1,efgtoa@g+1
  2522  000898  C008  F09E         	movff	?___flneg+2,efgtoa@g+2
  2523  00089C  C009  F09F         	movff	?___flneg+3,efgtoa@g+3
  2524  0008A0                     l5264:
  2525                           
  2526                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2527  0008A0  0E00               	movlw	0
  2528  0008A2  0100               	movlb	0	; () banked
  2529  0008A4  6FA3               	movwf	(efgtoa@n+1)& (0+255),b
  2530  0008A6  0E00               	movlw	0
  2531  0008A8  6FA2               	movwf	efgtoa@n& (0+255),b
  2532  0008AA                     
  2533                           ; BSR set to: 0
  2534                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2535  0008AA  C0E9  F08E         	movff	_width,efgtoa@w
  2536  0008AE  C0EA  F08F         	movff	_width+1,efgtoa@w+1
  2537  0008B2                     
  2538                           ; BSR set to: 0
  2539                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2540  0008B2  518A               	movf	efgtoa@sign& (0+255),w,b
  2541  0008B4  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2542  0008B6  A4D8               	btfss	status,2,c
  2543  0008B8  EF60  F004         	goto	u6531
  2544  0008BC  EF62  F004         	goto	u6530
  2545  0008C0                     u6531:
  2546  0008C0  EF69  F004         	goto	l5272
  2547  0008C4                     u6530:
  2548  0008C4                     
  2549                           ; BSR set to: 0
  2550  0008C4  A458               	btfss	_flags^0,2,c
  2551  0008C6  EF67  F004         	goto	u6541
  2552  0008CA  EF69  F004         	goto	u6540
  2553  0008CE                     u6541:
  2554  0008CE  EF83  F004         	goto	l5284
  2555  0008D2                     u6540:
  2556  0008D2                     l5272:
  2557                           
  2558                           ; BSR set to: 0
  2559                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2560  0008D2  518A               	movf	efgtoa@sign& (0+255),w,b
  2561  0008D4  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2562  0008D6  A4D8               	btfss	status,2,c
  2563  0008D8  EF70  F004         	goto	u6551
  2564  0008DC  EF72  F004         	goto	u6550
  2565  0008E0                     u6551:
  2566  0008E0  EF78  F004         	goto	l5276
  2567  0008E4                     u6550:
  2568  0008E4                     
  2569                           ; BSR set to: 0
  2570  0008E4  0E00               	movlw	0
  2571  0008E6  6F77               	movwf	(_efgtoa$1891+1)& (0+255),b
  2572  0008E8  0E2B               	movlw	43
  2573  0008EA  6F76               	movwf	_efgtoa$1891& (0+255),b
  2574  0008EC  EF7C  F004         	goto	l5278
  2575  0008F0                     l5276:
  2576                           
  2577                           ; BSR set to: 0
  2578  0008F0  0E00               	movlw	0
  2579  0008F2  6F77               	movwf	(_efgtoa$1891+1)& (0+255),b
  2580  0008F4  0E2D               	movlw	45
  2581  0008F6  6F76               	movwf	_efgtoa$1891& (0+255),b
  2582  0008F8                     l5278:
  2583                           
  2584                           ; BSR set to: 0
  2585  0008F8  C076  F100         	movff	_efgtoa$1891,_dbuf
  2586  0008FC                     
  2587                           ; BSR set to: 0
  2588                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2589  0008FC  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  2590  0008FE  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  2591  000900                     
  2592                           ; BSR set to: 0
  2593                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 352:         --w;
  2594  000900  078E               	decf	efgtoa@w& (0+255),f,b
  2595  000902  A0D8               	btfss	status,0,c
  2596  000904  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  2597  000906                     l5284:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 356:     if (( __
      +                          fpclassifyf(g) == 1 )) {
  2601  000906  C09C  F006         	movff	efgtoa@g,___fpclassifyf@x
  2602  00090A  C09D  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2603  00090E  C09E  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2604  000912  C09F  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2605  000916  ECDB  F018         	call	___fpclassifyf	;wreg free
  2606  00091A  0406               	decf	?___fpclassifyf^0,w,c
  2607  00091C  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  2608  00091E  A4D8               	btfss	status,2,c
  2609  000920  EF94  F004         	goto	u6561
  2610  000924  EF96  F004         	goto	u6560
  2611  000928                     u6561:
  2612  000928  EFE0  F004         	goto	l5302
  2613  00092C                     u6560:
  2614  00092C  0EBF               	movlw	191
  2615  00092E  0100               	movlb	0	; () banked
  2616  000930  6F71               	movwf	??_efgtoa& (0+255),b
  2617  000932  0EFF               	movlw	255
  2618  000934  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  2619  000936  5170               	movf	efgtoa@c& (0+255),w,b
  2620  000938  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  2621  00093A  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  2622  00093C  5171               	movf	??_efgtoa& (0+255),w,b
  2623  00093E  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  2624  000940  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  2625  000942  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2626  000944  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  2627  000946  E107               	bnz	u6571
  2628  000948  0E1A               	movlw	26
  2629  00094A  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  2630  00094C  B0D8               	btfsc	status,0,c
  2631  00094E  EFAB  F004         	goto	u6571
  2632  000952  EFAD  F004         	goto	u6570
  2633  000956                     u6571:
  2634  000956  EFBB  F004         	goto	l5294
  2635  00095A                     u6570:
  2636  00095A                     
  2637                           ; BSR set to: 0
  2638                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2639  00095A  0E00               	movlw	low _dbuf
  2640  00095C  25A2               	addwf	efgtoa@n& (0+255),w,b
  2641  00095E  6E06               	movwf	strcpy@dest^0,c
  2642  000960  0E01               	movlw	high _dbuf
  2643  000962  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2644  000964  6E07               	movwf	(strcpy@dest+1)^0,c
  2645  000966  0E36               	movlw	low STR_7
  2646  000968  6E08               	movwf	strcpy@src^0,c
  2647  00096A  0E08               	movlw	high STR_7
  2648  00096C  6E09               	movwf	(strcpy@src+1)^0,c
  2649  00096E  EC28  F01C         	call	_strcpy	;wreg free
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2652  000972  EFC7  F004         	goto	l5296
  2653  000976                     l5294:
  2654                           
  2655                           ; BSR set to: 0
  2656                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2657  000976  0E00               	movlw	low _dbuf
  2658  000978  25A2               	addwf	efgtoa@n& (0+255),w,b
  2659  00097A  6E06               	movwf	strcpy@dest^0,c
  2660  00097C  0E01               	movlw	high _dbuf
  2661  00097E  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2662  000980  6E07               	movwf	(strcpy@dest+1)^0,c
  2663  000982  0E3E               	movlw	low STR_8
  2664  000984  6E08               	movwf	strcpy@src^0,c
  2665  000986  0E08               	movlw	high STR_8
  2666  000988  6E09               	movwf	(strcpy@src+1)^0,c
  2667  00098A  EC28  F01C         	call	_strcpy	;wreg free
  2668  00098E                     l5296:
  2669                           
  2670                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2671  00098E  0100               	movlb	0	; () banked
  2672  000990  0EFD               	movlw	253
  2673  000992  278E               	addwf	efgtoa@w& (0+255),f,b
  2674  000994  0EFF               	movlw	255
  2675  000996  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2676  000998                     l5298:
  2677                           
  2678                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2679  000998  C06A  F016         	movff	efgtoa@fp,pad@fp
  2680  00099C  C06B  F017         	movff	efgtoa@fp+1,pad@fp+1
  2681  0009A0  0E00               	movlw	low _dbuf
  2682  0009A2  6E18               	movwf	pad@buf^0,c
  2683  0009A4  0E01               	movlw	high _dbuf
  2684  0009A6  6E19               	movwf	(pad@buf+1)^0,c
  2685  0009A8  C08E  F01A         	movff	efgtoa@w,pad@p
  2686  0009AC  C08F  F01B         	movff	efgtoa@w+1,pad@p+1
  2687  0009B0  EC8C  F01A         	call	_pad	;wreg free
  2688  0009B4  C016  F06A         	movff	?_pad,?_efgtoa
  2689  0009B8  C017  F06B         	movff	?_pad+1,?_efgtoa+1
  2690  0009BC  EF2B  F00A         	goto	l984
  2691  0009C0                     l5302:
  2692                           
  2693                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 365:     if (( __
      +                          fpclassifyf(g) == 0 )) {
  2694  0009C0  C09C  F006         	movff	efgtoa@g,___fpclassifyf@x
  2695  0009C4  C09D  F007         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2696  0009C8  C09E  F008         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2697  0009CC  C09F  F009         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2698  0009D0  ECDB  F018         	call	___fpclassifyf	;wreg free
  2699  0009D4  5006               	movf	?___fpclassifyf^0,w,c
  2700  0009D6  1007               	iorwf	(?___fpclassifyf+1)^0,w,c
  2701  0009D8  A4D8               	btfss	status,2,c
  2702  0009DA  EFF1  F004         	goto	u6581
  2703  0009DE  EFF3  F004         	goto	u6580
  2704  0009E2                     u6581:
  2705  0009E2  EF26  F005         	goto	l5320
  2706  0009E6                     u6580:
  2707  0009E6  0EBF               	movlw	191
  2708  0009E8  0100               	movlb	0	; () banked
  2709  0009EA  6F71               	movwf	??_efgtoa& (0+255),b
  2710  0009EC  0EFF               	movlw	255
  2711  0009EE  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  2712  0009F0  5170               	movf	efgtoa@c& (0+255),w,b
  2713  0009F2  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  2714  0009F4  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  2715  0009F6  5171               	movf	??_efgtoa& (0+255),w,b
  2716  0009F8  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  2717  0009FA  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  2718  0009FC  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  2719  0009FE  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  2720  000A00  E107               	bnz	u6591
  2721  000A02  0E1A               	movlw	26
  2722  000A04  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  2723  000A06  B0D8               	btfsc	status,0,c
  2724  000A08  EF08  F005         	goto	u6591
  2725  000A0C  EF0A  F005         	goto	u6590
  2726  000A10                     u6591:
  2727  000A10  EF18  F005         	goto	l5312
  2728  000A14                     u6590:
  2729  000A14                     
  2730                           ; BSR set to: 0
  2731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2732  000A14  0E00               	movlw	low _dbuf
  2733  000A16  25A2               	addwf	efgtoa@n& (0+255),w,b
  2734  000A18  6E06               	movwf	strcpy@dest^0,c
  2735  000A1A  0E01               	movlw	high _dbuf
  2736  000A1C  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2737  000A1E  6E07               	movwf	(strcpy@dest+1)^0,c
  2738  000A20  0E3A               	movlw	low STR_11
  2739  000A22  6E08               	movwf	strcpy@src^0,c
  2740  000A24  0E08               	movlw	high STR_11
  2741  000A26  6E09               	movwf	(strcpy@src+1)^0,c
  2742  000A28  EC28  F01C         	call	_strcpy	;wreg free
  2743                           
  2744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2745  000A2C  EFC7  F004         	goto	l5296
  2746  000A30                     l5312:
  2747                           
  2748                           ; BSR set to: 0
  2749                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2750  000A30  0E00               	movlw	low _dbuf
  2751  000A32  25A2               	addwf	efgtoa@n& (0+255),w,b
  2752  000A34  6E06               	movwf	strcpy@dest^0,c
  2753  000A36  0E01               	movlw	high _dbuf
  2754  000A38  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2755  000A3A  6E07               	movwf	(strcpy@dest+1)^0,c
  2756  000A3C  0E42               	movlw	low STR_12
  2757  000A3E  6E08               	movwf	strcpy@src^0,c
  2758  000A40  0E08               	movlw	high STR_12
  2759  000A42  6E09               	movwf	(strcpy@src+1)^0,c
  2760  000A44  EC28  F01C         	call	_strcpy	;wreg free
  2761  000A48  EFC7  F004         	goto	l5296
  2762  000A4C                     l5320:
  2763                           
  2764                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2765  000A4C  0E00               	movlw	0
  2766  000A4E  0100               	movlb	0	; () banked
  2767  000A50  6FA4               	movwf	efgtoa@u& (0+255),b
  2768  000A52  0E00               	movlw	0
  2769  000A54  6FA5               	movwf	(efgtoa@u+1)& (0+255),b
  2770  000A56  0E80               	movlw	128
  2771  000A58  6FA6               	movwf	(efgtoa@u+2)& (0+255),b
  2772  000A5A  0E3F               	movlw	63
  2773  000A5C  6FA7               	movwf	(efgtoa@u+3)& (0+255),b
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2776  000A5E  0E00               	movlw	0
  2777  000A60  6FA1               	movwf	(efgtoa@e+1)& (0+255),b
  2778  000A62  0E00               	movlw	0
  2779  000A64  6FA0               	movwf	efgtoa@e& (0+255),b
  2780  000A66                     
  2781                           ; BSR set to: 0
  2782                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2783  000A66  C09C  F006         	movff	efgtoa@g,___fleq@ff1
  2784  000A6A  C09D  F007         	movff	efgtoa@g+1,___fleq@ff1+1
  2785  000A6E  C09E  F008         	movff	efgtoa@g+2,___fleq@ff1+2
  2786  000A72  C09F  F009         	movff	efgtoa@g+3,___fleq@ff1+3
  2787  000A76  0E00               	movlw	0
  2788  000A78  6E0A               	movwf	___fleq@ff2^0,c
  2789  000A7A  0E00               	movlw	0
  2790  000A7C  6E0B               	movwf	(___fleq@ff2+1)^0,c
  2791  000A7E  0E00               	movlw	0
  2792  000A80  6E0C               	movwf	(___fleq@ff2+2)^0,c
  2793  000A82  0E00               	movlw	0
  2794  000A84  6E0D               	movwf	(___fleq@ff2+3)^0,c
  2795  000A86  ECA2  F01B         	call	___fleq	;wreg free
  2796  000A8A  B0D8               	btfsc	status,0,c
  2797  000A8C  EF4A  F005         	goto	u6601
  2798  000A90  EF4C  F005         	goto	u6600
  2799  000A94                     u6601:
  2800  000A94  EFCF  F005         	goto	l5338
  2801  000A98                     u6600:
  2802  000A98  EF6B  F005         	goto	l5330
  2803  000A9C                     l5326:
  2804                           
  2805                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2806  000A9C  C0A4  F014         	movff	efgtoa@u,___flmul@b
  2807  000AA0  C0A5  F015         	movff	efgtoa@u+1,___flmul@b+1
  2808  000AA4  C0A6  F016         	movff	efgtoa@u+2,___flmul@b+2
  2809  000AA8  C0A7  F017         	movff	efgtoa@u+3,___flmul@b+3
  2810  000AAC  0E00               	movlw	0
  2811  000AAE  6E18               	movwf	___flmul@a^0,c
  2812  000AB0  0E00               	movlw	0
  2813  000AB2  6E19               	movwf	(___flmul@a+1)^0,c
  2814  000AB4  0E20               	movlw	32
  2815  000AB6  6E1A               	movwf	(___flmul@a+2)^0,c
  2816  000AB8  0E41               	movlw	65
  2817  000ABA  6E1B               	movwf	(___flmul@a+3)^0,c
  2818  000ABC  ECA9  F00E         	call	___flmul	;wreg free
  2819  000AC0  C014  F0A4         	movff	?___flmul,efgtoa@u
  2820  000AC4  C015  F0A5         	movff	?___flmul+1,efgtoa@u+1
  2821  000AC8  C016  F0A6         	movff	?___flmul+2,efgtoa@u+2
  2822  000ACC  C017  F0A7         	movff	?___flmul+3,efgtoa@u+3
  2823  000AD0                     
  2824                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2825  000AD0  0100               	movlb	0	; () banked
  2826  000AD2  4BA0               	infsnz	efgtoa@e& (0+255),f,b
  2827  000AD4  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
  2828  000AD6                     l5330:
  2829                           
  2830                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2831  000AD6  C09C  F02D         	movff	efgtoa@g,___flge@ff1
  2832  000ADA  C09D  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2833  000ADE  C09E  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2834  000AE2  C09F  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2835  000AE6  0E00               	movlw	0
  2836  000AE8  6E18               	movwf	___flmul@a^0,c
  2837  000AEA  0E00               	movlw	0
  2838  000AEC  6E19               	movwf	(___flmul@a+1)^0,c
  2839  000AEE  0E20               	movlw	32
  2840  000AF0  6E1A               	movwf	(___flmul@a+2)^0,c
  2841  000AF2  0E41               	movlw	65
  2842  000AF4  6E1B               	movwf	(___flmul@a+3)^0,c
  2843  000AF6  C0A4  F014         	movff	efgtoa@u,___flmul@b
  2844  000AFA  C0A5  F015         	movff	efgtoa@u+1,___flmul@b+1
  2845  000AFE  C0A6  F016         	movff	efgtoa@u+2,___flmul@b+2
  2846  000B02  C0A7  F017         	movff	efgtoa@u+3,___flmul@b+3
  2847  000B06  ECA9  F00E         	call	___flmul	;wreg free
  2848  000B0A  C014  F031         	movff	?___flmul,___flge@ff2
  2849  000B0E  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  2850  000B12  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  2851  000B16  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  2852  000B1A  ECD8  F017         	call	___flge	;wreg free
  2853  000B1E  B0D8               	btfsc	status,0,c
  2854  000B20  EF94  F005         	goto	u6611
  2855  000B24  EF96  F005         	goto	u6610
  2856  000B28                     u6611:
  2857  000B28  EF4E  F005         	goto	l5326
  2858  000B2C                     u6610:
  2859  000B2C  EFB6  F005         	goto	l5336
  2860  000B30                     l5332:
  2861                           
  2862                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2863  000B30  C0A4  F02D         	movff	efgtoa@u,___fldiv@b
  2864  000B34  C0A5  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  2865  000B38  C0A6  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  2866  000B3C  C0A7  F030         	movff	efgtoa@u+3,___fldiv@b+3
  2867  000B40  0E00               	movlw	0
  2868  000B42  6E31               	movwf	___fldiv@a^0,c
  2869  000B44  0E00               	movlw	0
  2870  000B46  6E32               	movwf	(___fldiv@a+1)^0,c
  2871  000B48  0E20               	movlw	32
  2872  000B4A  6E33               	movwf	(___fldiv@a+2)^0,c
  2873  000B4C  0E41               	movlw	65
  2874  000B4E  6E34               	movwf	(___fldiv@a+3)^0,c
  2875  000B50  ECBE  F010         	call	___fldiv	;wreg free
  2876  000B54  C02D  F0A4         	movff	?___fldiv,efgtoa@u
  2877  000B58  C02E  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  2878  000B5C  C02F  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  2879  000B60  C030  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  2880  000B64                     
  2881                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  2882  000B64  0100               	movlb	0	; () banked
  2883  000B66  07A0               	decf	efgtoa@e& (0+255),f,b
  2884  000B68  A0D8               	btfss	status,0,c
  2885  000B6A  07A1               	decf	(efgtoa@e+1)& (0+255),f,b
  2886  000B6C                     l5336:
  2887                           
  2888                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  2889  000B6C  C09C  F02D         	movff	efgtoa@g,___flge@ff1
  2890  000B70  C09D  F02E         	movff	efgtoa@g+1,___flge@ff1+1
  2891  000B74  C09E  F02F         	movff	efgtoa@g+2,___flge@ff1+2
  2892  000B78  C09F  F030         	movff	efgtoa@g+3,___flge@ff1+3
  2893  000B7C  C0A4  F031         	movff	efgtoa@u,___flge@ff2
  2894  000B80  C0A5  F032         	movff	efgtoa@u+1,___flge@ff2+1
  2895  000B84  C0A6  F033         	movff	efgtoa@u+2,___flge@ff2+2
  2896  000B88  C0A7  F034         	movff	efgtoa@u+3,___flge@ff2+3
  2897  000B8C  ECD8  F017         	call	___flge	;wreg free
  2898  000B90  A0D8               	btfss	status,0,c
  2899  000B92  EFCD  F005         	goto	u6621
  2900  000B96  EFCF  F005         	goto	u6620
  2901  000B9A                     u6621:
  2902  000B9A  EF98  F005         	goto	l5332
  2903  000B9E                     u6620:
  2904  000B9E                     l5338:
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  2907  000B9E  C070  F00C         	movff	efgtoa@c,tolower@c
  2908  000BA2  6A0D               	clrf	(tolower@c+1)^0,c
  2909  000BA4  EC1C  F01D         	call	_tolower	;wreg free
  2910  000BA8  500C               	movf	?_tolower^0,w,c
  2911  000BAA  0100               	movlb	0	; () banked
  2912  000BAC  6F91               	movwf	efgtoa@mode& (0+255),b
  2913  000BAE                     
  2914                           ; BSR set to: 0
  2915                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  2916  000BAE  C091  F090         	movff	efgtoa@mode,efgtoa@nmode
  2917  000BB2                     
  2918                           ; BSR set to: 0
  2919                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  2920  000BB2  0E67               	movlw	103
  2921  000BB4  1991               	xorwf	efgtoa@mode& (0+255),w,b
  2922  000BB6  A4D8               	btfss	status,2,c
  2923  000BB8  EFE0  F005         	goto	u6631
  2924  000BBC  EFE2  F005         	goto	u6630
  2925  000BC0                     u6631:
  2926  000BC0  EF08  F006         	goto	l5352
  2927  000BC4                     u6630:
  2928  000BC4                     
  2929                           ; BSR set to: 0
  2930                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  2931  000BC4  51EB               	movf	_prec& (0+255),w,b
  2932  000BC6  11EC               	iorwf	(_prec+1)& (0+255),w,b
  2933  000BC8  A4D8               	btfss	status,2,c
  2934  000BCA  EFE9  F005         	goto	u6641
  2935  000BCE  EFEB  F005         	goto	u6640
  2936  000BD2                     u6641:
  2937  000BD2  EFEF  F005         	goto	l5348
  2938  000BD6                     u6640:
  2939  000BD6                     
  2940                           ; BSR set to: 0
  2941                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  2942  000BD6  0E00               	movlw	0
  2943  000BD8  6FEC               	movwf	(_prec+1)& (0+255),b
  2944  000BDA  0E01               	movlw	1
  2945  000BDC  6FEB               	movwf	_prec& (0+255),b
  2946  000BDE                     l5348:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  2950  000BDE  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  2951  000BE0  EFFC  F005         	goto	u6650
  2952  000BE4  51EC               	movf	(_prec+1)& (0+255),w,b
  2953  000BE6  E106               	bnz	u6651
  2954  000BE8  05EB               	decf	_prec& (0+255),w,b
  2955  000BEA  B0D8               	btfsc	status,0,c
  2956  000BEC  EFFA  F005         	goto	u6651
  2957  000BF0  EFFC  F005         	goto	u6650
  2958  000BF4                     u6651:
  2959  000BF4  EF02  F006         	goto	l1000
  2960  000BF8                     u6650:
  2961  000BF8                     l5350:
  2962                           
  2963                           ; BSR set to: 0
  2964  000BF8  0E00               	movlw	0
  2965  000BFA  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  2966  000BFC  0E06               	movlw	6
  2967  000BFE  6F8C               	movwf	efgtoa@p& (0+255),b
  2968  000C00  EF11  F006         	goto	l5358
  2969  000C04                     l1000:
  2970                           
  2971                           ; BSR set to: 0
  2972  000C04  C0EB  F08C         	movff	_prec,efgtoa@p
  2973  000C08  C0EC  F08D         	movff	_prec+1,efgtoa@p+1
  2974  000C0C  EF11  F006         	goto	l5358
  2975  000C10                     l5352:
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  2979  000C10  BFEC               	btfsc	(_prec+1)& (0+255),7,b
  2980  000C12  EF0D  F006         	goto	u6661
  2981  000C16  EF0F  F006         	goto	u6660
  2982  000C1A                     u6661:
  2983  000C1A  EFFC  F005         	goto	l5350
  2984  000C1E                     u6660:
  2985  000C1E  EF02  F006         	goto	l1000
  2986  000C22                     l5358:
  2987                           
  2988                           ; BSR set to: 0
  2989                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  2990  000C22  0E67               	movlw	103
  2991  000C24  1991               	xorwf	efgtoa@mode& (0+255),w,b
  2992  000C26  A4D8               	btfss	status,2,c
  2993  000C28  EF18  F006         	goto	u6671
  2994  000C2C  EF1A  F006         	goto	u6670
  2995  000C30                     u6671:
  2996  000C30  EF49  F006         	goto	l5368
  2997  000C34                     u6670:
  2998  000C34                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3001  000C34  AFA1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3002  000C36  EF28  F006         	goto	u6680
  3003  000C3A  0EFC               	movlw	252
  3004  000C3C  5DA0               	subwf	efgtoa@e& (0+255),w,b
  3005  000C3E  0EFF               	movlw	255
  3006  000C40  59A1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3007  000C42  A0D8               	btfss	status,0,c
  3008  000C44  EF26  F006         	goto	u6681
  3009  000C48  EF28  F006         	goto	u6680
  3010  000C4C                     u6681:
  3011  000C4C  EF47  F006         	goto	l5366
  3012  000C50                     u6680:
  3013  000C50                     
  3014                           ; BSR set to: 0
  3015  000C50  0EFF               	movlw	255
  3016  000C52  6F71               	movwf	??_efgtoa& (0+255),b
  3017  000C54  0EFF               	movlw	255
  3018  000C56  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  3019  000C58  C08C  F073         	movff	efgtoa@p,??_efgtoa+2
  3020  000C5C  C08D  F074         	movff	efgtoa@p+1,??_efgtoa+3
  3021  000C60  5171               	movf	??_efgtoa& (0+255),w,b
  3022  000C62  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  3023  000C64  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  3024  000C66  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  3025  000C68  51A0               	movf	efgtoa@e& (0+255),w,b
  3026  000C6A  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  3027  000C6C  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  3028  000C6E  0A80               	xorlw	128
  3029  000C70  6F75               	movwf	(??_efgtoa+4)& (0+255),b
  3030  000C72  51A1               	movf	(efgtoa@e+1)& (0+255),w,b
  3031  000C74  0A80               	xorlw	128
  3032  000C76  5975               	subwfb	(??_efgtoa+4)& (0+255),w,b
  3033  000C78  A0D8               	btfss	status,0,c
  3034  000C7A  EF41  F006         	goto	u6691
  3035  000C7E  EF43  F006         	goto	u6690
  3036  000C82                     u6691:
  3037  000C82  EF47  F006         	goto	l5366
  3038  000C86                     u6690:
  3039  000C86                     
  3040                           ; BSR set to: 0
  3041                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3042  000C86  0E66               	movlw	102
  3043  000C88  6F90               	movwf	efgtoa@nmode& (0+255),b
  3044                           
  3045                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3046  000C8A  EF49  F006         	goto	l5368
  3047  000C8E                     l5366:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3051  000C8E  0E65               	movlw	101
  3052  000C90  6F90               	movwf	efgtoa@nmode& (0+255),b
  3053  000C92                     l5368:
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3057  000C92  C08C  F082         	movff	efgtoa@p,efgtoa@m
  3058  000C96  C08D  F083         	movff	efgtoa@p+1,efgtoa@m+1
  3059  000C9A                     
  3060                           ; BSR set to: 0
  3061                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3062  000C9A  0E67               	movlw	103
  3063  000C9C  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3064  000C9E  A4D8               	btfss	status,2,c
  3065  000CA0  EF54  F006         	goto	u6701
  3066  000CA4  EF56  F006         	goto	u6700
  3067  000CA8                     u6701:
  3068  000CA8  EF66  F006         	goto	l5376
  3069  000CAC                     u6700:
  3070  000CAC                     
  3071                           ; BSR set to: 0
  3072  000CAC  0E66               	movlw	102
  3073  000CAE  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3074  000CB0  A4D8               	btfss	status,2,c
  3075  000CB2  EF5D  F006         	goto	u6711
  3076  000CB6  EF5F  F006         	goto	u6710
  3077  000CBA                     u6711:
  3078  000CBA  EF68  F006         	goto	l5378
  3079  000CBE                     u6710:
  3080  000CBE                     
  3081                           ; BSR set to: 0
  3082  000CBE  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3083  000CC0  EF66  F006         	goto	u6720
  3084  000CC4  EF64  F006         	goto	u6721
  3085  000CC8                     u6721:
  3086  000CC8  EF68  F006         	goto	l5378
  3087  000CCC                     u6720:
  3088  000CCC                     l5376:
  3089                           
  3090                           ; BSR set to: 0
  3091                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3092  000CCC  4B82               	infsnz	efgtoa@m& (0+255),f,b
  3093  000CCE  2B83               	incf	(efgtoa@m+1)& (0+255),f,b
  3094  000CD0                     l5378:
  3095                           
  3096                           ; BSR set to: 0
  3097                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3098  000CD0  0E66               	movlw	102
  3099  000CD2  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3100  000CD4  A4D8               	btfss	status,2,c
  3101  000CD6  EF6F  F006         	goto	u6731
  3102  000CDA  EF71  F006         	goto	u6730
  3103  000CDE                     u6731:
  3104  000CDE  EF91  F006         	goto	l5388
  3105  000CE2                     u6730:
  3106  000CE2                     
  3107                           ; BSR set to: 0
  3108                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3109  000CE2  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3110  000CE4  EF78  F006         	goto	u6740
  3111  000CE8  EF76  F006         	goto	u6741
  3112  000CEC                     u6741:
  3113  000CEC  EF84  F006         	goto	l5384
  3114  000CF0                     u6740:
  3115  000CF0                     
  3116                           ; BSR set to: 0
  3117                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3118  000CF0  0E00               	movlw	0
  3119  000CF2  6FA4               	movwf	efgtoa@u& (0+255),b
  3120  000CF4  0E00               	movlw	0
  3121  000CF6  6FA5               	movwf	(efgtoa@u+1)& (0+255),b
  3122  000CF8  0E80               	movlw	128
  3123  000CFA  6FA6               	movwf	(efgtoa@u+2)& (0+255),b
  3124  000CFC  0E3F               	movlw	63
  3125  000CFE  6FA7               	movwf	(efgtoa@u+3)& (0+255),b
  3126                           
  3127                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3128  000D00  0E00               	movlw	0
  3129  000D02  6FA1               	movwf	(efgtoa@e+1)& (0+255),b
  3130  000D04  0E00               	movlw	0
  3131  000D06  6FA0               	movwf	efgtoa@e& (0+255),b
  3132  000D08                     l5384:
  3133                           
  3134                           ; BSR set to: 0
  3135                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3136  000D08  0E67               	movlw	103
  3137  000D0A  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3138  000D0C  B4D8               	btfsc	status,2,c
  3139  000D0E  EF8B  F006         	goto	u6751
  3140  000D12  EF8D  F006         	goto	u6750
  3141  000D16                     u6751:
  3142  000D16  EF91  F006         	goto	l5388
  3143  000D1A                     u6750:
  3144  000D1A                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3147  000D1A  51A0               	movf	efgtoa@e& (0+255),w,b
  3148  000D1C  2782               	addwf	efgtoa@m& (0+255),f,b
  3149  000D1E  51A1               	movf	(efgtoa@e+1)& (0+255),w,b
  3150  000D20  2383               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3151  000D22                     l5388:
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3155  000D22  0E00               	movlw	0
  3156  000D24  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  3157  000D26  0E00               	movlw	0
  3158  000D28  6F9A               	movwf	efgtoa@i& (0+255),b
  3159  000D2A                     
  3160                           ; BSR set to: 0
  3161                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3162  000D2A  C09C  F092         	movff	efgtoa@g,efgtoa@h
  3163  000D2E  C09D  F093         	movff	efgtoa@g+1,efgtoa@h+1
  3164  000D32  C09E  F094         	movff	efgtoa@g+2,efgtoa@h+2
  3165  000D36  C09F  F095         	movff	efgtoa@g+3,efgtoa@h+3
  3166  000D3A                     
  3167                           ; BSR set to: 0
  3168                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3169  000D3A  C0A4  F084         	movff	efgtoa@u,efgtoa@ou
  3170  000D3E  C0A5  F085         	movff	efgtoa@u+1,efgtoa@ou+1
  3171  000D42  C0A6  F086         	movff	efgtoa@u+2,efgtoa@ou+2
  3172  000D46  C0A7  F087         	movff	efgtoa@u+3,efgtoa@ou+3
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3175  000D4A  EF22  F007         	goto	l5402
  3176  000D4E                     l5394:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3180  000D4E  C092  F02D         	movff	efgtoa@h,___fldiv@b
  3181  000D52  C093  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  3182  000D56  C094  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  3183  000D5A  C095  F030         	movff	efgtoa@h+3,___fldiv@b+3
  3184  000D5E  C0A4  F031         	movff	efgtoa@u,___fldiv@a
  3185  000D62  C0A5  F032         	movff	efgtoa@u+1,___fldiv@a+1
  3186  000D66  C0A6  F033         	movff	efgtoa@u+2,___fldiv@a+2
  3187  000D6A  C0A7  F034         	movff	efgtoa@u+3,___fldiv@a+3
  3188  000D6E  ECBE  F010         	call	___fldiv	;wreg free
  3189  000D72  C02D  F046         	movff	?___fldiv,floorf@x
  3190  000D76  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  3191  000D7A  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  3192  000D7E  C030  F049         	movff	?___fldiv+3,floorf@x+3
  3193  000D82  EC3C  F014         	call	_floorf	;wreg free
  3194  000D86  C046  F096         	movff	?_floorf,efgtoa@l
  3195  000D8A  C047  F097         	movff	?_floorf+1,efgtoa@l+1
  3196  000D8E  C048  F098         	movff	?_floorf+2,efgtoa@l+2
  3197  000D92  C049  F099         	movff	?_floorf+3,efgtoa@l+3
  3198                           
  3199                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3200  000D96  C096  F006         	movff	efgtoa@l,___fltol@f1
  3201  000D9A  C097  F007         	movff	efgtoa@l+1,___fltol@f1+1
  3202  000D9E  C098  F008         	movff	efgtoa@l+2,___fltol@f1+2
  3203  000DA2  C099  F009         	movff	efgtoa@l+3,___fltol@f1+3
  3204  000DA6  EC55  F017         	call	___fltol	;wreg free
  3205  000DAA  C006  F088         	movff	?___fltol,efgtoa@d
  3206  000DAE  C007  F089         	movff	?___fltol+1,efgtoa@d+1
  3207  000DB2                     
  3208                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3209  000DB2  C092  F060         	movff	efgtoa@h,___flsub@b
  3210  000DB6  C093  F061         	movff	efgtoa@h+1,___flsub@b+1
  3211  000DBA  C094  F062         	movff	efgtoa@h+2,___flsub@b+2
  3212  000DBE  C095  F063         	movff	efgtoa@h+3,___flsub@b+3
  3213  000DC2  C0A4  F018         	movff	efgtoa@u,___flmul@a
  3214  000DC6  C0A5  F019         	movff	efgtoa@u+1,___flmul@a+1
  3215  000DCA  C0A6  F01A         	movff	efgtoa@u+2,___flmul@a+2
  3216  000DCE  C0A7  F01B         	movff	efgtoa@u+3,___flmul@a+3
  3217  000DD2  C096  F014         	movff	efgtoa@l,___flmul@b
  3218  000DD6  C097  F015         	movff	efgtoa@l+1,___flmul@b+1
  3219  000DDA  C098  F016         	movff	efgtoa@l+2,___flmul@b+2
  3220  000DDE  C099  F017         	movff	efgtoa@l+3,___flmul@b+3
  3221  000DE2  ECA9  F00E         	call	___flmul	;wreg free
  3222  000DE6  C014  F064         	movff	?___flmul,___flsub@a
  3223  000DEA  C015  F065         	movff	?___flmul+1,___flsub@a+1
  3224  000DEE  C016  F066         	movff	?___flmul+2,___flsub@a+2
  3225  000DF2  C017  F067         	movff	?___flmul+3,___flsub@a+3
  3226  000DF6  ECF8  F01C         	call	___flsub	;wreg free
  3227  000DFA  C060  F092         	movff	?___flsub,efgtoa@h
  3228  000DFE  C061  F093         	movff	?___flsub+1,efgtoa@h+1
  3229  000E02  C062  F094         	movff	?___flsub+2,efgtoa@h+2
  3230  000E06  C063  F095         	movff	?___flsub+3,efgtoa@h+3
  3231  000E0A                     
  3232                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3233  000E0A  C0A4  F02D         	movff	efgtoa@u,___fldiv@b
  3234  000E0E  C0A5  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  3235  000E12  C0A6  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  3236  000E16  C0A7  F030         	movff	efgtoa@u+3,___fldiv@b+3
  3237  000E1A  0E00               	movlw	0
  3238  000E1C  6E31               	movwf	___fldiv@a^0,c
  3239  000E1E  0E00               	movlw	0
  3240  000E20  6E32               	movwf	(___fldiv@a+1)^0,c
  3241  000E22  0E20               	movlw	32
  3242  000E24  6E33               	movwf	(___fldiv@a+2)^0,c
  3243  000E26  0E41               	movlw	65
  3244  000E28  6E34               	movwf	(___fldiv@a+3)^0,c
  3245  000E2A  ECBE  F010         	call	___fldiv	;wreg free
  3246  000E2E  C02D  F0A4         	movff	?___fldiv,efgtoa@u
  3247  000E32  C02E  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  3248  000E36  C02F  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  3249  000E3A  C030  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  3250  000E3E                     
  3251                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3252  000E3E  0100               	movlb	0	; () banked
  3253  000E40  4B9A               	infsnz	efgtoa@i& (0+255),f,b
  3254  000E42  2B9B               	incf	(efgtoa@i+1)& (0+255),f,b
  3255  000E44                     l5402:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3259  000E44  5182               	movf	efgtoa@m& (0+255),w,b
  3260  000E46  5D9A               	subwf	efgtoa@i& (0+255),w,b
  3261  000E48  519B               	movf	(efgtoa@i+1)& (0+255),w,b
  3262  000E4A  0A80               	xorlw	128
  3263  000E4C  6F71               	movwf	??_efgtoa& (0+255),b
  3264  000E4E  5183               	movf	(efgtoa@m+1)& (0+255),w,b
  3265  000E50  0A80               	xorlw	128
  3266  000E52  5971               	subwfb	??_efgtoa& (0+255),w,b
  3267  000E54  A0D8               	btfss	status,0,c
  3268  000E56  EF2F  F007         	goto	u6761
  3269  000E5A  EF31  F007         	goto	u6760
  3270  000E5E                     u6761:
  3271  000E5E  EFA7  F006         	goto	l5394
  3272  000E62                     u6760:
  3273  000E62                     
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3276  000E62  C0A4  F014         	movff	efgtoa@u,___flmul@b
  3277  000E66  C0A5  F015         	movff	efgtoa@u+1,___flmul@b+1
  3278  000E6A  C0A6  F016         	movff	efgtoa@u+2,___flmul@b+2
  3279  000E6E  C0A7  F017         	movff	efgtoa@u+3,___flmul@b+3
  3280  000E72  0E00               	movlw	0
  3281  000E74  6E18               	movwf	___flmul@a^0,c
  3282  000E76  0E00               	movlw	0
  3283  000E78  6E19               	movwf	(___flmul@a+1)^0,c
  3284  000E7A  0EA0               	movlw	160
  3285  000E7C  6E1A               	movwf	(___flmul@a+2)^0,c
  3286  000E7E  0E40               	movlw	64
  3287  000E80  6E1B               	movwf	(___flmul@a+3)^0,c
  3288  000E82  ECA9  F00E         	call	___flmul	;wreg free
  3289  000E86  C014  F096         	movff	?___flmul,efgtoa@l
  3290  000E8A  C015  F097         	movff	?___flmul+1,efgtoa@l+1
  3291  000E8E  C016  F098         	movff	?___flmul+2,efgtoa@l+2
  3292  000E92  C017  F099         	movff	?___flmul+3,efgtoa@l+3
  3293  000E96                     
  3294                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3295  000E96  C092  F02D         	movff	efgtoa@h,___flge@ff1
  3296  000E9A  C093  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  3297  000E9E  C094  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  3298  000EA2  C095  F030         	movff	efgtoa@h+3,___flge@ff1+3
  3299  000EA6  C096  F031         	movff	efgtoa@l,___flge@ff2
  3300  000EAA  C097  F032         	movff	efgtoa@l+1,___flge@ff2+1
  3301  000EAE  C098  F033         	movff	efgtoa@l+2,___flge@ff2+2
  3302  000EB2  C099  F034         	movff	efgtoa@l+3,___flge@ff2+3
  3303  000EB6  ECD8  F017         	call	___flge	;wreg free
  3304  000EBA  B0D8               	btfsc	status,0,c
  3305  000EBC  EF62  F007         	goto	u6771
  3306  000EC0  EF64  F007         	goto	u6770
  3307  000EC4                     u6771:
  3308  000EC4  EF6F  F007         	goto	l5410
  3309  000EC8                     u6770:
  3310  000EC8                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3312  000EC8  0E00               	movlw	0
  3313  000ECA  0100               	movlb	0	; () banked
  3314  000ECC  6F96               	movwf	efgtoa@l& (0+255),b
  3315  000ECE  0E00               	movlw	0
  3316  000ED0  6F97               	movwf	(efgtoa@l+1)& (0+255),b
  3317  000ED2  0E00               	movlw	0
  3318  000ED4  6F98               	movwf	(efgtoa@l+2)& (0+255),b
  3319  000ED6  0E00               	movlw	0
  3320  000ED8  6F99               	movwf	(efgtoa@l+3)& (0+255),b
  3321                           
  3322                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 443:     } else {
  3323  000EDA  EF98  F007         	goto	l5416
  3324  000EDE                     l5410:
  3325                           
  3326                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3327  000EDE  C092  F006         	movff	efgtoa@h,___fleq@ff1
  3328  000EE2  C093  F007         	movff	efgtoa@h+1,___fleq@ff1+1
  3329  000EE6  C094  F008         	movff	efgtoa@h+2,___fleq@ff1+2
  3330  000EEA  C095  F009         	movff	efgtoa@h+3,___fleq@ff1+3
  3331  000EEE  C096  F00A         	movff	efgtoa@l,___fleq@ff2
  3332  000EF2  C097  F00B         	movff	efgtoa@l+1,___fleq@ff2+1
  3333  000EF6  C098  F00C         	movff	efgtoa@l+2,___fleq@ff2+2
  3334  000EFA  C099  F00D         	movff	efgtoa@l+3,___fleq@ff2+3
  3335  000EFE  ECA2  F01B         	call	___fleq	;wreg free
  3336  000F02  A0D8               	btfss	status,0,c
  3337  000F04  EF86  F007         	goto	u6781
  3338  000F08  EF88  F007         	goto	u6780
  3339  000F0C                     u6781:
  3340  000F0C  EF98  F007         	goto	l5416
  3341  000F10                     u6780:
  3342  000F10  0100               	movlb	0	; () banked
  3343  000F12  B188               	btfsc	efgtoa@d& (0+255),0,b
  3344  000F14  EF8E  F007         	goto	u6791
  3345  000F18  EF90  F007         	goto	u6790
  3346  000F1C                     u6791:
  3347  000F1C  EF98  F007         	goto	l5416
  3348  000F20                     u6790:
  3349  000F20                     
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3352  000F20  0E00               	movlw	0
  3353  000F22  6F96               	movwf	efgtoa@l& (0+255),b
  3354  000F24  0E00               	movlw	0
  3355  000F26  6F97               	movwf	(efgtoa@l+1)& (0+255),b
  3356  000F28  0E00               	movlw	0
  3357  000F2A  6F98               	movwf	(efgtoa@l+2)& (0+255),b
  3358  000F2C  0E00               	movlw	0
  3359  000F2E  6F99               	movwf	(efgtoa@l+3)& (0+255),b
  3360  000F30                     l5416:
  3361                           
  3362                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3363  000F30  C09C  F046         	movff	efgtoa@g,___fladd@b
  3364  000F34  C09D  F047         	movff	efgtoa@g+1,___fladd@b+1
  3365  000F38  C09E  F048         	movff	efgtoa@g+2,___fladd@b+2
  3366  000F3C  C09F  F049         	movff	efgtoa@g+3,___fladd@b+3
  3367  000F40  C096  F04A         	movff	efgtoa@l,___fladd@a
  3368  000F44  C097  F04B         	movff	efgtoa@l+1,___fladd@a+1
  3369  000F48  C098  F04C         	movff	efgtoa@l+2,___fladd@a+2
  3370  000F4C  C099  F04D         	movff	efgtoa@l+3,___fladd@a+3
  3371  000F50  EC2C  F00A         	call	___fladd	;wreg free
  3372  000F54  C046  F092         	movff	?___fladd,efgtoa@h
  3373  000F58  C047  F093         	movff	?___fladd+1,efgtoa@h+1
  3374  000F5C  C048  F094         	movff	?___fladd+2,efgtoa@h+2
  3375  000F60  C049  F095         	movff	?___fladd+3,efgtoa@h+3
  3376  000F64                     
  3377                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3378  000F64  C092  F02D         	movff	efgtoa@h,___flge@ff1
  3379  000F68  C093  F02E         	movff	efgtoa@h+1,___flge@ff1+1
  3380  000F6C  C094  F02F         	movff	efgtoa@h+2,___flge@ff1+2
  3381  000F70  C095  F030         	movff	efgtoa@h+3,___flge@ff1+3
  3382  000F74  0E00               	movlw	0
  3383  000F76  6E18               	movwf	___flmul@a^0,c
  3384  000F78  0E00               	movlw	0
  3385  000F7A  6E19               	movwf	(___flmul@a+1)^0,c
  3386  000F7C  0E20               	movlw	32
  3387  000F7E  6E1A               	movwf	(___flmul@a+2)^0,c
  3388  000F80  0E41               	movlw	65
  3389  000F82  6E1B               	movwf	(___flmul@a+3)^0,c
  3390  000F84  C084  F014         	movff	efgtoa@ou,___flmul@b
  3391  000F88  C085  F015         	movff	efgtoa@ou+1,___flmul@b+1
  3392  000F8C  C086  F016         	movff	efgtoa@ou+2,___flmul@b+2
  3393  000F90  C087  F017         	movff	efgtoa@ou+3,___flmul@b+3
  3394  000F94  ECA9  F00E         	call	___flmul	;wreg free
  3395  000F98  C014  F031         	movff	?___flmul,___flge@ff2
  3396  000F9C  C015  F032         	movff	?___flmul+1,___flge@ff2+1
  3397  000FA0  C016  F033         	movff	?___flmul+2,___flge@ff2+2
  3398  000FA4  C017  F034         	movff	?___flmul+3,___flge@ff2+3
  3399  000FA8  ECD8  F017         	call	___flge	;wreg free
  3400  000FAC  A0D8               	btfss	status,0,c
  3401  000FAE  EFDB  F007         	goto	u6801
  3402  000FB2  EFDD  F007         	goto	u6800
  3403  000FB6                     u6801:
  3404  000FB6  EF06  F008         	goto	l5428
  3405  000FBA                     u6800:
  3406  000FBA                     
  3407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 454:   e++;
  3408  000FBA  0100               	movlb	0	; () banked
  3409  000FBC  4BA0               	infsnz	efgtoa@e& (0+255),f,b
  3410  000FBE  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
  3411  000FC0                     
  3412                           ; BSR set to: 0
  3413                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3414  000FC0  C084  F014         	movff	efgtoa@ou,___flmul@b
  3415  000FC4  C085  F015         	movff	efgtoa@ou+1,___flmul@b+1
  3416  000FC8  C086  F016         	movff	efgtoa@ou+2,___flmul@b+2
  3417  000FCC  C087  F017         	movff	efgtoa@ou+3,___flmul@b+3
  3418  000FD0  0E00               	movlw	0
  3419  000FD2  6E18               	movwf	___flmul@a^0,c
  3420  000FD4  0E00               	movlw	0
  3421  000FD6  6E19               	movwf	(___flmul@a+1)^0,c
  3422  000FD8  0E20               	movlw	32
  3423  000FDA  6E1A               	movwf	(___flmul@a+2)^0,c
  3424  000FDC  0E41               	movlw	65
  3425  000FDE  6E1B               	movwf	(___flmul@a+3)^0,c
  3426  000FE0  ECA9  F00E         	call	___flmul	;wreg free
  3427  000FE4  C014  F084         	movff	?___flmul,efgtoa@ou
  3428  000FE8  C015  F085         	movff	?___flmul+1,efgtoa@ou+1
  3429  000FEC  C016  F086         	movff	?___flmul+2,efgtoa@ou+2
  3430  000FF0  C017  F087         	movff	?___flmul+3,efgtoa@ou+3
  3431  000FF4                     
  3432                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3433  000FF4  0E66               	movlw	102
  3434  000FF6  0100               	movlb	0	; () banked
  3435  000FF8  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3436  000FFA  A4D8               	btfss	status,2,c
  3437  000FFC  EF02  F008         	goto	u6811
  3438  001000  EF04  F008         	goto	u6810
  3439  001004                     u6811:
  3440  001004  EF06  F008         	goto	l5428
  3441  001008                     u6810:
  3442  001008                     
  3443                           ; BSR set to: 0
  3444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 458:    m++;
  3445  001008  4B82               	infsnz	efgtoa@m& (0+255),f,b
  3446  00100A  2B83               	incf	(efgtoa@m+1)& (0+255),f,b
  3447  00100C                     l5428:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3450  00100C  C084  F0A4         	movff	efgtoa@ou,efgtoa@u
  3451  001010  C085  F0A5         	movff	efgtoa@ou+1,efgtoa@u+1
  3452  001014  C086  F0A6         	movff	efgtoa@ou+2,efgtoa@u+2
  3453  001018  C087  F0A7         	movff	efgtoa@ou+3,efgtoa@u+3
  3454  00101C                     
  3455                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3456  00101C  0E65               	movlw	101
  3457  00101E  0100               	movlb	0	; () banked
  3458  001020  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3459  001022  B4D8               	btfsc	status,2,c
  3460  001024  EF16  F008         	goto	u6821
  3461  001028  EF18  F008         	goto	u6820
  3462  00102C                     u6821:
  3463  00102C  EF1E  F008         	goto	l5434
  3464  001030                     u6820:
  3465  001030                     
  3466                           ; BSR set to: 0
  3467  001030  C0A0  F080         	movff	efgtoa@e,efgtoa@ne
  3468  001034  C0A1  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  3469  001038  EF22  F008         	goto	l1028
  3470  00103C                     l5434:
  3471                           
  3472                           ; BSR set to: 0
  3473  00103C  0E00               	movlw	0
  3474  00103E  6F81               	movwf	(efgtoa@ne+1)& (0+255),b
  3475  001040  0E00               	movlw	0
  3476  001042  6F80               	movwf	efgtoa@ne& (0+255),b
  3477  001044                     l1028:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3481  001044  0E00               	movlw	0
  3482  001046  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  3483  001048  0E00               	movlw	0
  3484  00104A  6F7E               	movwf	efgtoa@pp& (0+255),b
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3487  00104C  0E00               	movlw	0
  3488  00104E  6F7D               	movwf	(efgtoa@t+1)& (0+255),b
  3489  001050  0E00               	movlw	0
  3490  001052  6F7C               	movwf	efgtoa@t& (0+255),b
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3493  001054  0E00               	movlw	0
  3494  001056  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  3495  001058  0E00               	movlw	0
  3496  00105A  6F9A               	movwf	efgtoa@i& (0+255),b
  3497                           
  3498                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3499  00105C  EF1E  F009         	goto	l5484
  3500  001060                     l5436:
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3504  001060  C092  F02D         	movff	efgtoa@h,___fldiv@b
  3505  001064  C093  F02E         	movff	efgtoa@h+1,___fldiv@b+1
  3506  001068  C094  F02F         	movff	efgtoa@h+2,___fldiv@b+2
  3507  00106C  C095  F030         	movff	efgtoa@h+3,___fldiv@b+3
  3508  001070  C0A4  F031         	movff	efgtoa@u,___fldiv@a
  3509  001074  C0A5  F032         	movff	efgtoa@u+1,___fldiv@a+1
  3510  001078  C0A6  F033         	movff	efgtoa@u+2,___fldiv@a+2
  3511  00107C  C0A7  F034         	movff	efgtoa@u+3,___fldiv@a+3
  3512  001080  ECBE  F010         	call	___fldiv	;wreg free
  3513  001084  C02D  F046         	movff	?___fldiv,floorf@x
  3514  001088  C02E  F047         	movff	?___fldiv+1,floorf@x+1
  3515  00108C  C02F  F048         	movff	?___fldiv+2,floorf@x+2
  3516  001090  C030  F049         	movff	?___fldiv+3,floorf@x+3
  3517  001094  EC3C  F014         	call	_floorf	;wreg free
  3518  001098  C046  F096         	movff	?_floorf,efgtoa@l
  3519  00109C  C047  F097         	movff	?_floorf+1,efgtoa@l+1
  3520  0010A0  C048  F098         	movff	?_floorf+2,efgtoa@l+2
  3521  0010A4  C049  F099         	movff	?_floorf+3,efgtoa@l+3
  3522                           
  3523                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3524  0010A8  C096  F006         	movff	efgtoa@l,___fltol@f1
  3525  0010AC  C097  F007         	movff	efgtoa@l+1,___fltol@f1+1
  3526  0010B0  C098  F008         	movff	efgtoa@l+2,___fltol@f1+2
  3527  0010B4  C099  F009         	movff	efgtoa@l+3,___fltol@f1+3
  3528  0010B8  EC55  F017         	call	___fltol	;wreg free
  3529  0010BC  C006  F088         	movff	?___fltol,efgtoa@d
  3530  0010C0  C007  F089         	movff	?___fltol+1,efgtoa@d+1
  3531  0010C4                     
  3532                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3533  0010C4  B858               	btfsc	_flags^0,4,c
  3534  0010C6  EF67  F008         	goto	u6831
  3535  0010CA  EF69  F008         	goto	u6830
  3536  0010CE                     u6831:
  3537  0010CE  EF87  F008         	goto	l5448
  3538  0010D2                     u6830:
  3539  0010D2  0100               	movlb	0	; () banked
  3540  0010D4  5188               	movf	efgtoa@d& (0+255),w,b
  3541  0010D6  1189               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3542  0010D8  A4D8               	btfss	status,2,c
  3543  0010DA  EF71  F008         	goto	u6841
  3544  0010DE  EF73  F008         	goto	u6840
  3545  0010E2                     u6841:
  3546  0010E2  EF87  F008         	goto	l5448
  3547  0010E6                     u6840:
  3548  0010E6                     
  3549                           ; BSR set to: 0
  3550  0010E6  0E67               	movlw	103
  3551  0010E8  1991               	xorwf	efgtoa@mode& (0+255),w,b
  3552  0010EA  A4D8               	btfss	status,2,c
  3553  0010EC  EF7A  F008         	goto	u6851
  3554  0010F0  EF7C  F008         	goto	u6850
  3555  0010F4                     u6851:
  3556  0010F4  EF87  F008         	goto	l5448
  3557  0010F8                     u6850:
  3558  0010F8                     
  3559                           ; BSR set to: 0
  3560  0010F8  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3561  0010FA  EF83  F008         	goto	u6860
  3562  0010FE  EF81  F008         	goto	u6861
  3563  001102                     u6861:
  3564  001102  EF87  F008         	goto	l5448
  3565  001106                     u6860:
  3566  001106                     
  3567                           ; BSR set to: 0
  3568                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3569  001106  4B7C               	infsnz	efgtoa@t& (0+255),f,b
  3570  001108  2B7D               	incf	(efgtoa@t+1)& (0+255),f,b
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3573  00110A  EFD2  F008         	goto	l5476
  3574  00110E                     l5448:
  3575                           
  3576                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3577  00110E  0100               	movlb	0	; () banked
  3578  001110  517E               	movf	efgtoa@pp& (0+255),w,b
  3579  001112  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3580  001114  A4D8               	btfss	status,2,c
  3581  001116  EF8F  F008         	goto	u6871
  3582  00111A  EF91  F008         	goto	u6870
  3583  00111E                     u6871:
  3584  00111E  EFBB  F008         	goto	l5468
  3585  001122                     u6870:
  3586  001122                     
  3587                           ; BSR set to: 0
  3588  001122  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3589  001124  EF98  F008         	goto	u6880
  3590  001128  EF96  F008         	goto	u6881
  3591  00112C                     u6881:
  3592  00112C  EFBB  F008         	goto	l5468
  3593  001130                     u6880:
  3594  001130                     
  3595                           ; BSR set to: 0
  3596                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3597  001130  0E00               	movlw	low _dbuf
  3598  001132  25A2               	addwf	efgtoa@n& (0+255),w,b
  3599  001134  6ED9               	movwf	fsr2l,c
  3600  001136  0E01               	movlw	high _dbuf
  3601  001138  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3602  00113A  6EDA               	movwf	fsr2h,c
  3603  00113C  0E2E               	movlw	46
  3604  00113E  6EDF               	movwf	indf2,c
  3605  001140                     
  3606                           ; BSR set to: 0
  3607  001140  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3608  001142  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3609  001144                     
  3610                           ; BSR set to: 0
  3611                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3612  001144  078E               	decf	efgtoa@w& (0+255),f,b
  3613  001146  A0D8               	btfss	status,0,c
  3614  001148  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  3615  00114A                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3618  00114A  0E00               	movlw	0
  3619  00114C  6F7F               	movwf	(efgtoa@pp+1)& (0+255),b
  3620  00114E  0E01               	movlw	1
  3621  001150  6F7E               	movwf	efgtoa@pp& (0+255),b
  3622  001152  EFBB  F008         	goto	l5468
  3623  001156                     l5460:
  3624                           
  3625                           ; BSR set to: 0
  3626                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3627  001156  0E00               	movlw	low _dbuf
  3628  001158  25A2               	addwf	efgtoa@n& (0+255),w,b
  3629  00115A  6ED9               	movwf	fsr2l,c
  3630  00115C  0E01               	movlw	high _dbuf
  3631  00115E  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3632  001160  6EDA               	movwf	fsr2h,c
  3633  001162  0E30               	movlw	48
  3634  001164  6EDF               	movwf	indf2,c
  3635  001166                     
  3636                           ; BSR set to: 0
  3637  001166  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3638  001168  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3639  00116A                     
  3640                           ; BSR set to: 0
  3641                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3642  00116A  078E               	decf	efgtoa@w& (0+255),f,b
  3643  00116C  A0D8               	btfss	status,0,c
  3644  00116E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  3645  001170                     
  3646                           ; BSR set to: 0
  3647                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3648  001170  077C               	decf	efgtoa@t& (0+255),f,b
  3649  001172  A0D8               	btfss	status,0,c
  3650  001174  077D               	decf	(efgtoa@t+1)& (0+255),f,b
  3651  001176                     l5468:
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3655  001176  517C               	movf	efgtoa@t& (0+255),w,b
  3656  001178  117D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3657  00117A  A4D8               	btfss	status,2,c
  3658  00117C  EFC2  F008         	goto	u6891
  3659  001180  EFC4  F008         	goto	u6890
  3660  001184                     u6891:
  3661  001184  EFAB  F008         	goto	l5460
  3662  001188                     u6890:
  3663  001188                     
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3666  001188  0E00               	movlw	low _dbuf
  3667  00118A  25A2               	addwf	efgtoa@n& (0+255),w,b
  3668  00118C  6ED9               	movwf	fsr2l,c
  3669  00118E  0E01               	movlw	high _dbuf
  3670  001190  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3671  001192  6EDA               	movwf	fsr2h,c
  3672  001194  5188               	movf	efgtoa@d& (0+255),w,b
  3673  001196  0F30               	addlw	48
  3674  001198  6EDF               	movwf	indf2,c
  3675  00119A                     
  3676                           ; BSR set to: 0
  3677  00119A  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3678  00119C  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3679  00119E                     
  3680                           ; BSR set to: 0
  3681                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3682  00119E  078E               	decf	efgtoa@w& (0+255),f,b
  3683  0011A0  A0D8               	btfss	status,0,c
  3684  0011A2  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  3685  0011A4                     l5476:
  3686                           
  3687                           ; BSR set to: 0
  3688                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3689  0011A4  C092  F060         	movff	efgtoa@h,___flsub@b
  3690  0011A8  C093  F061         	movff	efgtoa@h+1,___flsub@b+1
  3691  0011AC  C094  F062         	movff	efgtoa@h+2,___flsub@b+2
  3692  0011B0  C095  F063         	movff	efgtoa@h+3,___flsub@b+3
  3693  0011B4  C0A4  F018         	movff	efgtoa@u,___flmul@a
  3694  0011B8  C0A5  F019         	movff	efgtoa@u+1,___flmul@a+1
  3695  0011BC  C0A6  F01A         	movff	efgtoa@u+2,___flmul@a+2
  3696  0011C0  C0A7  F01B         	movff	efgtoa@u+3,___flmul@a+3
  3697  0011C4  C096  F014         	movff	efgtoa@l,___flmul@b
  3698  0011C8  C097  F015         	movff	efgtoa@l+1,___flmul@b+1
  3699  0011CC  C098  F016         	movff	efgtoa@l+2,___flmul@b+2
  3700  0011D0  C099  F017         	movff	efgtoa@l+3,___flmul@b+3
  3701  0011D4  ECA9  F00E         	call	___flmul	;wreg free
  3702  0011D8  C014  F064         	movff	?___flmul,___flsub@a
  3703  0011DC  C015  F065         	movff	?___flmul+1,___flsub@a+1
  3704  0011E0  C016  F066         	movff	?___flmul+2,___flsub@a+2
  3705  0011E4  C017  F067         	movff	?___flmul+3,___flsub@a+3
  3706  0011E8  ECF8  F01C         	call	___flsub	;wreg free
  3707  0011EC  C060  F092         	movff	?___flsub,efgtoa@h
  3708  0011F0  C061  F093         	movff	?___flsub+1,efgtoa@h+1
  3709  0011F4  C062  F094         	movff	?___flsub+2,efgtoa@h+2
  3710  0011F8  C063  F095         	movff	?___flsub+3,efgtoa@h+3
  3711  0011FC                     
  3712                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3713  0011FC  C0A4  F02D         	movff	efgtoa@u,___fldiv@b
  3714  001200  C0A5  F02E         	movff	efgtoa@u+1,___fldiv@b+1
  3715  001204  C0A6  F02F         	movff	efgtoa@u+2,___fldiv@b+2
  3716  001208  C0A7  F030         	movff	efgtoa@u+3,___fldiv@b+3
  3717  00120C  0E00               	movlw	0
  3718  00120E  6E31               	movwf	___fldiv@a^0,c
  3719  001210  0E00               	movlw	0
  3720  001212  6E32               	movwf	(___fldiv@a+1)^0,c
  3721  001214  0E20               	movlw	32
  3722  001216  6E33               	movwf	(___fldiv@a+2)^0,c
  3723  001218  0E41               	movlw	65
  3724  00121A  6E34               	movwf	(___fldiv@a+3)^0,c
  3725  00121C  ECBE  F010         	call	___fldiv	;wreg free
  3726  001220  C02D  F0A4         	movff	?___fldiv,efgtoa@u
  3727  001224  C02E  F0A5         	movff	?___fldiv+1,efgtoa@u+1
  3728  001228  C02F  F0A6         	movff	?___fldiv+2,efgtoa@u+2
  3729  00122C  C030  F0A7         	movff	?___fldiv+3,efgtoa@u+3
  3730  001230                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3732  001230  0100               	movlb	0	; () banked
  3733  001232  0780               	decf	efgtoa@ne& (0+255),f,b
  3734  001234  A0D8               	btfss	status,0,c
  3735  001236  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  3736  001238                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3739  001238  4B9A               	infsnz	efgtoa@i& (0+255),f,b
  3740  00123A  2B9B               	incf	(efgtoa@i+1)& (0+255),f,b
  3741  00123C                     l5484:
  3742                           
  3743                           ; BSR set to: 0
  3744                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3745  00123C  5182               	movf	efgtoa@m& (0+255),w,b
  3746  00123E  5D9A               	subwf	efgtoa@i& (0+255),w,b
  3747  001240  519B               	movf	(efgtoa@i+1)& (0+255),w,b
  3748  001242  0A80               	xorlw	128
  3749  001244  6F71               	movwf	??_efgtoa& (0+255),b
  3750  001246  5183               	movf	(efgtoa@m+1)& (0+255),w,b
  3751  001248  0A80               	xorlw	128
  3752  00124A  5971               	subwfb	??_efgtoa& (0+255),w,b
  3753  00124C  B0D8               	btfsc	status,0,c
  3754  00124E  EF2B  F009         	goto	u6901
  3755  001252  EF2D  F009         	goto	u6900
  3756  001256                     u6901:
  3757  001256  EF3B  F009         	goto	l5488
  3758  00125A                     u6900:
  3759  00125A                     
  3760                           ; BSR set to: 0
  3761  00125A  BFA3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3762  00125C  EF39  F009         	goto	u6911
  3763  001260  51A3               	movf	(efgtoa@n+1)& (0+255),w,b
  3764  001262  E109               	bnz	u6910
  3765  001264  0E4B               	movlw	75
  3766  001266  5DA2               	subwf	efgtoa@n& (0+255),w,b
  3767  001268  A0D8               	btfss	status,0,c
  3768  00126A  EF39  F009         	goto	u6911
  3769  00126E  EF3B  F009         	goto	u6910
  3770  001272                     u6911:
  3771  001272  EF30  F008         	goto	l5436
  3772  001276                     u6910:
  3773  001276                     l5488:
  3774                           
  3775                           ; BSR set to: 0
  3776                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3777  001276  517E               	movf	efgtoa@pp& (0+255),w,b
  3778  001278  117F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3779  00127A  A4D8               	btfss	status,2,c
  3780  00127C  EF42  F009         	goto	u6921
  3781  001280  EF44  F009         	goto	u6920
  3782  001284                     u6921:
  3783  001284  EF55  F009         	goto	l5496
  3784  001288                     u6920:
  3785  001288                     
  3786                           ; BSR set to: 0
  3787  001288  A858               	btfss	_flags^0,4,c
  3788  00128A  EF49  F009         	goto	u6931
  3789  00128E  EF4B  F009         	goto	u6930
  3790  001292                     u6931:
  3791  001292  EF55  F009         	goto	l5496
  3792  001296                     u6930:
  3793  001296                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3796  001296  0E00               	movlw	low _dbuf
  3797  001298  25A2               	addwf	efgtoa@n& (0+255),w,b
  3798  00129A  6ED9               	movwf	fsr2l,c
  3799  00129C  0E01               	movlw	high _dbuf
  3800  00129E  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3801  0012A0  6EDA               	movwf	fsr2h,c
  3802  0012A2  0E2E               	movlw	46
  3803  0012A4  6EDF               	movwf	indf2,c
  3804  0012A6                     
  3805                           ; BSR set to: 0
  3806  0012A6  4BA2               	infsnz	efgtoa@n& (0+255),f,b
  3807  0012A8  2BA3               	incf	(efgtoa@n+1)& (0+255),f,b
  3808  0012AA                     l5496:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3812  0012AA  0E00               	movlw	low _dbuf
  3813  0012AC  25A2               	addwf	efgtoa@n& (0+255),w,b
  3814  0012AE  6ED9               	movwf	fsr2l,c
  3815  0012B0  0E01               	movlw	high _dbuf
  3816  0012B2  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3817  0012B4  6EDA               	movwf	fsr2h,c
  3818  0012B6  0E00               	movlw	0
  3819  0012B8  6EDF               	movwf	indf2,c
  3820  0012BA                     
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3823  0012BA  0E65               	movlw	101
  3824  0012BC  1990               	xorwf	efgtoa@nmode& (0+255),w,b
  3825  0012BE  A4D8               	btfss	status,2,c
  3826  0012C0  EF64  F009         	goto	u6941
  3827  0012C4  EF66  F009         	goto	u6940
  3828  0012C8                     u6941:
  3829  0012C8  EFCC  F004         	goto	l5298
  3830  0012CC                     u6940:
  3831  0012CC                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3834  0012CC  0E00               	movlw	0
  3835  0012CE  6F9B               	movwf	(efgtoa@i+1)& (0+255),b
  3836  0012D0  0E4F               	movlw	79
  3837  0012D2  6F9A               	movwf	efgtoa@i& (0+255),b
  3838  0012D4                     
  3839                           ; BSR set to: 0
  3840                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3841  0012D4  0E00               	movlw	low _dbuf
  3842  0012D6  259A               	addwf	efgtoa@i& (0+255),w,b
  3843  0012D8  6ED9               	movwf	fsr2l,c
  3844  0012DA  0E01               	movlw	high _dbuf
  3845  0012DC  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3846  0012DE  6EDA               	movwf	fsr2h,c
  3847  0012E0  0E00               	movlw	0
  3848  0012E2  6EDF               	movwf	indf2,c
  3849  0012E4                     
  3850                           ; BSR set to: 0
  3851                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3852  0012E4  0E00               	movlw	0
  3853  0012E6  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  3854  0012E8  0E00               	movlw	0
  3855  0012EA  6F8A               	movwf	efgtoa@sign& (0+255),b
  3856  0012EC                     
  3857                           ; BSR set to: 0
  3858                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3859  0012EC  BFA1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3860  0012EE  EF7D  F009         	goto	u6950
  3861  0012F2  EF7B  F009         	goto	u6951
  3862  0012F6                     u6951:
  3863  0012F6  EF85  F009         	goto	l5512
  3864  0012FA                     u6950:
  3865  0012FA                     
  3866                           ; BSR set to: 0
  3867                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3868  0012FA  0E00               	movlw	0
  3869  0012FC  6F8B               	movwf	(efgtoa@sign+1)& (0+255),b
  3870  0012FE  0E01               	movlw	1
  3871  001300  6F8A               	movwf	efgtoa@sign& (0+255),b
  3872  001302                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  3875  001302  6DA0               	negf	efgtoa@e& (0+255),b
  3876  001304  1FA1               	comf	(efgtoa@e+1)& (0+255),f,b
  3877  001306  B0D8               	btfsc	status,0,c
  3878  001308  2BA1               	incf	(efgtoa@e+1)& (0+255),f,b
  3879  00130A                     l5512:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  3883  00130A  0E00               	movlw	0
  3884  00130C  6F8D               	movwf	(efgtoa@p+1)& (0+255),b
  3885  00130E  0E02               	movlw	2
  3886  001310  6F8C               	movwf	efgtoa@p& (0+255),b
  3887                           
  3888                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3889  001312  EFB6  F009         	goto	l5524
  3890  001316                     l5514:
  3891                           
  3892                           ; BSR set to: 0
  3893                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  3894  001316  079A               	decf	efgtoa@i& (0+255),f,b
  3895  001318  A0D8               	btfss	status,0,c
  3896  00131A  079B               	decf	(efgtoa@i+1)& (0+255),f,b
  3897  00131C                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  3900  00131C  0E00               	movlw	low _dbuf
  3901  00131E  259A               	addwf	efgtoa@i& (0+255),w,b
  3902  001320  6ED9               	movwf	fsr2l,c
  3903  001322  0E01               	movlw	high _dbuf
  3904  001324  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3905  001326  6EDA               	movwf	fsr2h,c
  3906  001328  C0A0  F006         	movff	efgtoa@e,___awmod@dividend
  3907  00132C  C0A1  F007         	movff	efgtoa@e+1,___awmod@dividend+1
  3908  001330  0E00               	movlw	0
  3909  001332  6E09               	movwf	(___awmod@divisor+1)^0,c
  3910  001334  0E0A               	movlw	10
  3911  001336  6E08               	movwf	___awmod@divisor^0,c
  3912  001338  EC4A  F01B         	call	___awmod	;wreg free
  3913  00133C  5006               	movf	?___awmod^0,w,c
  3914  00133E  0F30               	addlw	48
  3915  001340  6EDF               	movwf	indf2,c
  3916  001342                     
  3917                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  3918  001342  C0A0  F006         	movff	efgtoa@e,___awdiv@dividend
  3919  001346  C0A1  F007         	movff	efgtoa@e+1,___awdiv@dividend+1
  3920  00134A  0E00               	movlw	0
  3921  00134C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  3922  00134E  0E0A               	movlw	10
  3923  001350  6E08               	movwf	___awdiv@divisor^0,c
  3924  001352  EC2A  F01A         	call	___awdiv	;wreg free
  3925  001356  C006  F0A0         	movff	?___awdiv,efgtoa@e
  3926  00135A  C007  F0A1         	movff	?___awdiv+1,efgtoa@e+1
  3927  00135E                     
  3928                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  3929  00135E  0100               	movlb	0	; () banked
  3930  001360  078C               	decf	efgtoa@p& (0+255),f,b
  3931  001362  A0D8               	btfss	status,0,c
  3932  001364  078D               	decf	(efgtoa@p+1)& (0+255),f,b
  3933  001366                     
  3934                           ; BSR set to: 0
  3935                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  3936  001366  078E               	decf	efgtoa@w& (0+255),f,b
  3937  001368  A0D8               	btfss	status,0,c
  3938  00136A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  3939  00136C                     l5524:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  3943  00136C  51A0               	movf	efgtoa@e& (0+255),w,b
  3944  00136E  11A1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  3945  001370  A4D8               	btfss	status,2,c
  3946  001372  EFBD  F009         	goto	u6961
  3947  001376  EFBF  F009         	goto	u6960
  3948  00137A                     u6961:
  3949  00137A  EF8B  F009         	goto	l5514
  3950  00137E                     u6960:
  3951  00137E                     
  3952                           ; BSR set to: 0
  3953  00137E  BF8D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  3954  001380  EFCC  F009         	goto	u6970
  3955  001384  518D               	movf	(efgtoa@p+1)& (0+255),w,b
  3956  001386  E106               	bnz	u6971
  3957  001388  058C               	decf	efgtoa@p& (0+255),w,b
  3958  00138A  B0D8               	btfsc	status,0,c
  3959  00138C  EFCA  F009         	goto	u6971
  3960  001390  EFCC  F009         	goto	u6970
  3961  001394                     u6971:
  3962  001394  EF8B  F009         	goto	l5514
  3963  001398                     u6970:
  3964  001398                     
  3965                           ; BSR set to: 0
  3966                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 514:         --i;
  3967  001398  079A               	decf	efgtoa@i& (0+255),f,b
  3968  00139A  A0D8               	btfss	status,0,c
  3969  00139C  079B               	decf	(efgtoa@i+1)& (0+255),f,b
  3970  00139E                     
  3971                           ; BSR set to: 0
  3972                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  3973  00139E  518A               	movf	efgtoa@sign& (0+255),w,b
  3974  0013A0  118B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3975  0013A2  A4D8               	btfss	status,2,c
  3976  0013A4  EFD6  F009         	goto	u6981
  3977  0013A8  EFD8  F009         	goto	u6980
  3978  0013AC                     u6981:
  3979  0013AC  EFDE  F009         	goto	l5534
  3980  0013B0                     u6980:
  3981  0013B0                     
  3982                           ; BSR set to: 0
  3983  0013B0  0E00               	movlw	0
  3984  0013B2  6F79               	movwf	(_efgtoa$1899+1)& (0+255),b
  3985  0013B4  0E2B               	movlw	43
  3986  0013B6  6F78               	movwf	_efgtoa$1899& (0+255),b
  3987  0013B8  EFE2  F009         	goto	l5536
  3988  0013BC                     l5534:
  3989                           
  3990                           ; BSR set to: 0
  3991  0013BC  0E00               	movlw	0
  3992  0013BE  6F79               	movwf	(_efgtoa$1899+1)& (0+255),b
  3993  0013C0  0E2D               	movlw	45
  3994  0013C2  6F78               	movwf	_efgtoa$1899& (0+255),b
  3995  0013C4                     l5536:
  3996                           
  3997                           ; BSR set to: 0
  3998  0013C4  0E00               	movlw	low _dbuf
  3999  0013C6  259A               	addwf	efgtoa@i& (0+255),w,b
  4000  0013C8  6ED9               	movwf	fsr2l,c
  4001  0013CA  0E01               	movlw	high _dbuf
  4002  0013CC  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4003  0013CE  6EDA               	movwf	fsr2h,c
  4004  0013D0  C078  FFDF         	movff	_efgtoa$1899,indf2
  4005  0013D4                     
  4006                           ; BSR set to: 0
  4007                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 516:         --w;
  4008  0013D4  078E               	decf	efgtoa@w& (0+255),f,b
  4009  0013D6  A0D8               	btfss	status,0,c
  4010  0013D8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  4011  0013DA                     
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 517:         --i;
  4014  0013DA  079A               	decf	efgtoa@i& (0+255),f,b
  4015  0013DC  A0D8               	btfss	status,0,c
  4016  0013DE  079B               	decf	(efgtoa@i+1)& (0+255),f,b
  4017  0013E0                     
  4018                           ; BSR set to: 0
  4019  0013E0  0EBF               	movlw	191
  4020  0013E2  6F71               	movwf	??_efgtoa& (0+255),b
  4021  0013E4  0EFF               	movlw	255
  4022  0013E6  6F72               	movwf	(??_efgtoa+1)& (0+255),b
  4023  0013E8  5170               	movf	efgtoa@c& (0+255),w,b
  4024  0013EA  6F73               	movwf	(??_efgtoa+2)& (0+255),b
  4025  0013EC  6B74               	clrf	(??_efgtoa+3)& (0+255),b
  4026  0013EE  5171               	movf	??_efgtoa& (0+255),w,b
  4027  0013F0  2773               	addwf	(??_efgtoa+2)& (0+255),f,b
  4028  0013F2  5172               	movf	(??_efgtoa+1)& (0+255),w,b
  4029  0013F4  2374               	addwfc	(??_efgtoa+3)& (0+255),f,b
  4030  0013F6  5174               	movf	(??_efgtoa+3)& (0+255),w,b
  4031  0013F8  E109               	bnz	u6990
  4032  0013FA  0E1A               	movlw	26
  4033  0013FC  5D73               	subwf	(??_efgtoa+2)& (0+255),w,b
  4034  0013FE  A0D8               	btfss	status,0,c
  4035  001400  EF04  F00A         	goto	u6991
  4036  001404  EF06  F00A         	goto	u6990
  4037  001408                     u6991:
  4038  001408  EF0C  F00A         	goto	l5548
  4039  00140C                     u6990:
  4040  00140C                     
  4041                           ; BSR set to: 0
  4042  00140C  0E00               	movlw	0
  4043  00140E  6F7B               	movwf	(_efgtoa$1900+1)& (0+255),b
  4044  001410  0E65               	movlw	101
  4045  001412  6F7A               	movwf	_efgtoa$1900& (0+255),b
  4046  001414  EF10  F00A         	goto	l5550
  4047  001418                     l5548:
  4048                           
  4049                           ; BSR set to: 0
  4050  001418  0E00               	movlw	0
  4051  00141A  6F7B               	movwf	(_efgtoa$1900+1)& (0+255),b
  4052  00141C  0E45               	movlw	69
  4053  00141E  6F7A               	movwf	_efgtoa$1900& (0+255),b
  4054  001420                     l5550:
  4055                           
  4056                           ; BSR set to: 0
  4057  001420  0E00               	movlw	low _dbuf
  4058  001422  259A               	addwf	efgtoa@i& (0+255),w,b
  4059  001424  6ED9               	movwf	fsr2l,c
  4060  001426  0E01               	movlw	high _dbuf
  4061  001428  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4062  00142A  6EDA               	movwf	fsr2h,c
  4063  00142C  C07A  FFDF         	movff	_efgtoa$1900,indf2
  4064  001430                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 519:         --w;
  4067  001430  078E               	decf	efgtoa@w& (0+255),f,b
  4068  001432  A0D8               	btfss	status,0,c
  4069  001434  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  4070  001436                     
  4071                           ; BSR set to: 0
  4072                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4073  001436  0E00               	movlw	low _dbuf
  4074  001438  25A2               	addwf	efgtoa@n& (0+255),w,b
  4075  00143A  6E06               	movwf	strcpy@dest^0,c
  4076  00143C  0E01               	movlw	high _dbuf
  4077  00143E  21A3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4078  001440  6E07               	movwf	(strcpy@dest+1)^0,c
  4079  001442  0E00               	movlw	low _dbuf
  4080  001444  259A               	addwf	efgtoa@i& (0+255),w,b
  4081  001446  6E08               	movwf	strcpy@src^0,c
  4082  001448  0E01               	movlw	high _dbuf
  4083  00144A  219B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4084  00144C  6E09               	movwf	(strcpy@src+1)^0,c
  4085  00144E  EC28  F01C         	call	_strcpy	;wreg free
  4086  001452  EFCC  F004         	goto	l5298
  4087  001456                     l984:
  4088  001456  0012               	return		;funcret
  4089  001458                     __end_of_efgtoa:
  4090                           	callstack 0
  4091                           
  4092 ;; *************** function _tolower *****************
  4093 ;; Defined at:
  4094 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\tolower.c"
  4095 ;; Parameters:    Size  Location     Type
  4096 ;;  c               2   11[COMRAM] int 
  4097 ;; Auto vars:     Size  Location     Type
  4098 ;;		None
  4099 ;; Return value:  Size  Location     Type
  4100 ;;                  2   11[COMRAM] int 
  4101 ;; Registers used:
  4102 ;;		wreg, status,2, status,0
  4103 ;; Tracked objects:
  4104 ;;		On entry : 0/0
  4105 ;;		On exit  : 0/0
  4106 ;;		Unchanged: 0/0
  4107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4108 ;;      Params:         2       0       0       0       0       0       0       0       0
  4109 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4110 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4111 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4112 ;;Total ram usage:        6 bytes
  4113 ;; Hardware stack levels used: 1
  4114 ;; Hardware stack levels required when called: 3
  4115 ;; This function calls:
  4116 ;;		_isupper
  4117 ;; This function is called by:
  4118 ;;		_efgtoa
  4119 ;;		_vfpfcnvrt
  4120 ;; This function uses a non-reentrant model
  4121 ;;
  4122                           
  4123                           	psect	text6
  4124  003A38                     __ptext6:
  4125                           	callstack 0
  4126  003A38                     _tolower:
  4127                           	callstack 24
  4128  003A38  0EBF               	movlw	191
  4129  003A3A  6E0E               	movwf	??_tolower^0,c
  4130  003A3C  0EFF               	movlw	255
  4131  003A3E  6E0F               	movwf	(??_tolower+1)^0,c
  4132  003A40  C00C  F010         	movff	tolower@c,??_tolower+2
  4133  003A44  C00D  F011         	movff	tolower@c+1,??_tolower+3
  4134  003A48  500E               	movf	??_tolower^0,w,c
  4135  003A4A  2610               	addwf	(??_tolower+2)^0,f,c
  4136  003A4C  500F               	movf	(??_tolower+1)^0,w,c
  4137  003A4E  2211               	addwfc	(??_tolower+3)^0,f,c
  4138  003A50  5011               	movf	(??_tolower+3)^0,w,c
  4139  003A52  E107               	bnz	u6371
  4140  003A54  0E1A               	movlw	26
  4141  003A56  5C10               	subwf	(??_tolower+2)^0,w,c
  4142  003A58  B0D8               	btfsc	status,0,c
  4143  003A5A  EF31  F01D         	goto	u6371
  4144  003A5E  EF33  F01D         	goto	u6370
  4145  003A62                     u6371:
  4146  003A62  EF3A  F01D         	goto	l1200
  4147  003A66                     u6370:
  4148  003A66  0E20               	movlw	32
  4149  003A68  100C               	iorwf	tolower@c^0,w,c
  4150  003A6A  6E0C               	movwf	?_tolower^0,c
  4151  003A6C  500D               	movf	(tolower@c+1)^0,w,c
  4152  003A6E  6E0D               	movwf	(?_tolower+1)^0,c
  4153  003A70  EF3E  F01D         	goto	l1203
  4154  003A74                     l1200:
  4155  003A74  C00C  F00C         	movff	tolower@c,?_tolower
  4156  003A78  C00D  F00D         	movff	tolower@c+1,?_tolower+1
  4157  003A7C                     l1203:
  4158  003A7C  0012               	return		;funcret
  4159  003A7E                     __end_of_tolower:
  4160                           	callstack 0
  4161                           
  4162 ;; *************** function _isupper *****************
  4163 ;; Defined at:
  4164 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isupper.c"
  4165 ;; Parameters:    Size  Location     Type
  4166 ;;  c               2    5[COMRAM] int 
  4167 ;; Auto vars:     Size  Location     Type
  4168 ;;		None
  4169 ;; Return value:  Size  Location     Type
  4170 ;;                  2    5[COMRAM] int 
  4171 ;; Registers used:
  4172 ;;		wreg, status,2, status,0
  4173 ;; Tracked objects:
  4174 ;;		On entry : 0/0
  4175 ;;		On exit  : 0/0
  4176 ;;		Unchanged: 0/0
  4177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4178 ;;      Params:         2       0       0       0       0       0       0       0       0
  4179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4180 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4181 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4182 ;;Total ram usage:        6 bytes
  4183 ;; Hardware stack levels used: 1
  4184 ;; Hardware stack levels required when called: 2
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_efgtoa
  4189 ;;		_vfpfcnvrt
  4190 ;;		_tolower
  4191 ;; This function uses a non-reentrant model
  4192 ;;
  4193                           
  4194                           	psect	text7
  4195  003AC2                     __ptext7:
  4196                           	callstack 0
  4197  003AC2                     _isupper:
  4198                           	callstack 24
  4199  003AC2  0EBF               	movlw	191
  4200  003AC4  6E08               	movwf	??_isupper^0,c
  4201  003AC6  0EFF               	movlw	255
  4202  003AC8  6E09               	movwf	(??_isupper+1)^0,c
  4203  003ACA  C006  F00A         	movff	isupper@c,??_isupper+2
  4204  003ACE  C007  F00B         	movff	isupper@c+1,??_isupper+3
  4205  003AD2  5008               	movf	??_isupper^0,w,c
  4206  003AD4  260A               	addwf	(??_isupper+2)^0,f,c
  4207  003AD6  5009               	movf	(??_isupper+1)^0,w,c
  4208  003AD8  220B               	addwfc	(??_isupper+3)^0,f,c
  4209  003ADA  500B               	movf	(??_isupper+3)^0,w,c
  4210  003ADC  E10A               	bnz	u5520
  4211  003ADE  0E1A               	movlw	26
  4212  003AE0  5C0A               	subwf	(??_isupper+2)^0,w,c
  4213  003AE2  A0D8               	btfss	status,0,c
  4214  003AE4  EF76  F01D         	goto	u5521
  4215  003AE8  EF79  F01D         	goto	u5520
  4216  003AEC                     u5521:
  4217  003AEC  0E01               	movlw	1
  4218  003AEE  EF7A  F01D         	goto	u5530
  4219  003AF2                     u5520:
  4220  003AF2  0E00               	movlw	0
  4221  003AF4                     u5530:
  4222  003AF4  6E06               	movwf	?_isupper^0,c
  4223  003AF6  6A07               	clrf	(?_isupper+1)^0,c
  4224  003AF8  0012               	return		;funcret
  4225  003AFA                     __end_of_isupper:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _strcpy *****************
  4229 ;; Defined at:
  4230 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strcpy.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  dest            2    5[COMRAM] PTR unsigned char 
  4233 ;;		 -> dbuf(80), 
  4234 ;;  src             2    7[COMRAM] PTR const unsigned char 
  4235 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  4236 ;;		 -> dbuf(80), 
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;  d               2   13[COMRAM] PTR unsigned char 
  4239 ;;		 -> dbuf(80), 
  4240 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4241 ;;		 -> STR_12(4), STR_11(4), STR_8(4), STR_7(4), 
  4242 ;;		 -> dbuf(80), 
  4243 ;; Return value:  Size  Location     Type
  4244 ;;                  2    5[COMRAM] PTR unsigned char 
  4245 ;; Registers used:
  4246 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4247 ;; Tracked objects:
  4248 ;;		On entry : 0/0
  4249 ;;		On exit  : 0/0
  4250 ;;		Unchanged: 0/0
  4251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4252 ;;      Params:         4       0       0       0       0       0       0       0       0
  4253 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4254 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4255 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4256 ;;Total ram usage:       10 bytes
  4257 ;; Hardware stack levels used: 1
  4258 ;; Hardware stack levels required when called: 2
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_efgtoa
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text8
  4267  003850                     __ptext8:
  4268                           	callstack 0
  4269  003850                     _strcpy:
  4270                           	callstack 24
  4271  003850  C008  F00C         	movff	strcpy@src,strcpy@s
  4272  003854  C009  F00D         	movff	strcpy@src+1,strcpy@s+1
  4273  003858  C006  F00E         	movff	strcpy@dest,strcpy@d
  4274  00385C  C007  F00F         	movff	strcpy@dest+1,strcpy@d+1
  4275  003860                     l5198:
  4276  003860  500C               	movf	strcpy@s^0,w,c
  4277  003862  6E0A               	movwf	??_strcpy^0,c
  4278  003864  500D               	movf	(strcpy@s+1)^0,w,c
  4279  003866  6E0B               	movwf	(??_strcpy+1)^0,c
  4280  003868  4A0C               	infsnz	strcpy@s^0,f,c
  4281  00386A  2A0D               	incf	(strcpy@s+1)^0,f,c
  4282  00386C  C00A  FFF6         	movff	??_strcpy,tblptrl
  4283  003870  C00B  FFF7         	movff	??_strcpy+1,tblptrh
  4284  003874  6AF8               	clrf	tblptru,c
  4285  003876  C00E  FFD9         	movff	strcpy@d,fsr2l
  4286  00387A  C00F  FFDA         	movff	strcpy@d+1,fsr2h
  4287  00387E  4A0E               	infsnz	strcpy@d^0,f,c
  4288  003880  2A0F               	incf	(strcpy@d+1)^0,f,c
  4289  003882  0E07               	movlw	(high __ramtop+-1)
  4290  003884  64F7               	cpfsgt	tblptrh,c
  4291  003886  D003               	bra	u6357
  4292  003888  0008               	tblrd		*
  4293  00388A  50F5               	movf	tablat,w,c
  4294  00388C  D005               	bra	u6350
  4295  00388E                     u6357:
  4296  00388E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4297  003892  CFF7 FFE2          	movff	tblptrh,fsr1h
  4298  003896  50E7               	movf	indf1,w,c
  4299  003898                     u6350:
  4300  003898  6EDF               	movwf	indf2,c
  4301  00389A  50DF               	movf	indf2,w,c
  4302  00389C  A4D8               	btfss	status,2,c
  4303  00389E  EF53  F01C         	goto	u6361
  4304  0038A2  EF55  F01C         	goto	u6360
  4305  0038A6                     u6361:
  4306  0038A6  EF30  F01C         	goto	l5198
  4307  0038AA                     u6360:
  4308  0038AA  0012               	return		;funcret
  4309  0038AC                     __end_of_strcpy:
  4310                           	callstack 0
  4311                           
  4312 ;; *************** function _pad *****************
  4313 ;; Defined at:
  4314 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c"
  4315 ;; Parameters:    Size  Location     Type
  4316 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  4317 ;;		 -> sprintf@f(11), 
  4318 ;;  buf             2   23[COMRAM] PTR unsigned char 
  4319 ;;		 -> dbuf(80), 
  4320 ;;  p               2   25[COMRAM] int 
  4321 ;; Auto vars:     Size  Location     Type
  4322 ;;  w               2   30[COMRAM] int 
  4323 ;;  i               2   28[COMRAM] int 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  2   21[COMRAM] int 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4333 ;;      Params:         6       0       0       0       0       0       0       0       0
  4334 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4335 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4336 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4337 ;;Total ram usage:       11 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 5
  4340 ;; This function calls:
  4341 ;;		_fputc
  4342 ;;		_fputs
  4343 ;;		_strlen
  4344 ;; This function is called by:
  4345 ;;		_efgtoa
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text9
  4350  003518                     __ptext9:
  4351                           	callstack 0
  4352  003518                     _pad:
  4353                           	callstack 21
  4354  003518                     
  4355                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4356  003518  A058               	btfss	_flags^0,0,c
  4357  00351A  EF91  F01A         	goto	u6241
  4358  00351E  EF93  F01A         	goto	u6240
  4359  003522                     u6241:
  4360  003522  EF9D  F01A         	goto	l5156
  4361  003526                     u6240:
  4362  003526                     
  4363                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4364  003526  C018  F00F         	movff	pad@buf,fputs@s
  4365  00352A  C019  F010         	movff	pad@buf+1,fputs@s+1
  4366  00352E  C016  F011         	movff	pad@fp,fputs@fp
  4367  003532  C017  F012         	movff	pad@fp+1,fputs@fp+1
  4368  003536  EC3F  F01D         	call	_fputs	;wreg free
  4369  00353A                     l5156:
  4370                           
  4371                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4372  00353A  BE1B               	btfsc	(pad@p+1)^0,7,c
  4373  00353C  EFA2  F01A         	goto	u6251
  4374  003540  EFA4  F01A         	goto	u6250
  4375  003544                     u6251:
  4376  003544  EFAA  F01A         	goto	l5160
  4377  003548                     u6250:
  4378  003548  C01A  F01F         	movff	pad@p,pad@w
  4379  00354C  C01B  F020         	movff	pad@p+1,pad@w+1
  4380  003550  EFAE  F01A         	goto	l963
  4381  003554                     l5160:
  4382  003554  0E00               	movlw	0
  4383  003556  6E20               	movwf	(pad@w+1)^0,c
  4384  003558  0E00               	movlw	0
  4385  00355A  6E1F               	movwf	pad@w^0,c
  4386  00355C                     l963:
  4387                           
  4388                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4389  00355C  0E00               	movlw	0
  4390  00355E  6E1E               	movwf	(pad@i+1)^0,c
  4391  003560  0E00               	movlw	0
  4392  003562  6E1D               	movwf	pad@i^0,c
  4393                           
  4394                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4395  003564  EFC0  F01A         	goto	l5166
  4396  003568                     l5162:
  4397                           
  4398                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4399  003568  0E00               	movlw	0
  4400  00356A  6E07               	movwf	(fputc@c+1)^0,c
  4401  00356C  0E20               	movlw	32
  4402  00356E  6E06               	movwf	fputc@c^0,c
  4403  003570  C016  F008         	movff	pad@fp,fputc@fp
  4404  003574  C017  F009         	movff	pad@fp+1,fputc@fp+1
  4405  003578  ECC5  F019         	call	_fputc	;wreg free
  4406  00357C                     
  4407                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4408  00357C  4A1D               	infsnz	pad@i^0,f,c
  4409  00357E  2A1E               	incf	(pad@i+1)^0,f,c
  4410  003580                     l5166:
  4411                           
  4412                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4413  003580  501F               	movf	pad@w^0,w,c
  4414  003582  5C1D               	subwf	pad@i^0,w,c
  4415  003584  501E               	movf	(pad@i+1)^0,w,c
  4416  003586  0A80               	xorlw	128
  4417  003588  6E1C               	movwf	??_pad^0,c
  4418  00358A  5020               	movf	(pad@w+1)^0,w,c
  4419  00358C  0A80               	xorlw	128
  4420  00358E  581C               	subwfb	??_pad^0,w,c
  4421  003590  A0D8               	btfss	status,0,c
  4422  003592  EFCD  F01A         	goto	u6261
  4423  003596  EFCF  F01A         	goto	u6260
  4424  00359A                     u6261:
  4425  00359A  EFB4  F01A         	goto	l5162
  4426  00359E                     u6260:
  4427  00359E                     
  4428                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4429  00359E  B058               	btfsc	_flags^0,0,c
  4430  0035A0  EFD4  F01A         	goto	u6271
  4431  0035A4  EFD6  F01A         	goto	u6270
  4432  0035A8                     u6271:
  4433  0035A8  EFE0  F01A         	goto	l5170
  4434  0035AC                     u6270:
  4435  0035AC                     
  4436                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4437  0035AC  C018  F00F         	movff	pad@buf,fputs@s
  4438  0035B0  C019  F010         	movff	pad@buf+1,fputs@s+1
  4439  0035B4  C016  F011         	movff	pad@fp,fputs@fp
  4440  0035B8  C017  F012         	movff	pad@fp+1,fputs@fp+1
  4441  0035BC  EC3F  F01D         	call	_fputs	;wreg free
  4442  0035C0                     l5170:
  4443                           
  4444                           ;C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4445  0035C0  C018  F006         	movff	pad@buf,strlen@s
  4446  0035C4  C019  F007         	movff	pad@buf+1,strlen@s+1
  4447  0035C8  ECB5  F01D         	call	_strlen	;wreg free
  4448  0035CC  501F               	movf	pad@w^0,w,c
  4449  0035CE  2406               	addwf	?_strlen^0,w,c
  4450  0035D0  6E16               	movwf	?_pad^0,c
  4451  0035D2  5020               	movf	(pad@w+1)^0,w,c
  4452  0035D4  2007               	addwfc	(?_strlen+1)^0,w,c
  4453  0035D6  6E17               	movwf	(?_pad+1)^0,c
  4454  0035D8  0012               	return		;funcret
  4455  0035DA                     __end_of_pad:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _strlen *****************
  4459 ;; Defined at:
  4460 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\strlen.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  s               2    5[COMRAM] PTR const unsigned char 
  4463 ;;		 -> dbuf(80), 
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;  a               2    7[COMRAM] PTR const unsigned char 
  4466 ;;		 -> dbuf(80), 
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  2    5[COMRAM] unsigned int 
  4469 ;; Registers used:
  4470 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4476 ;;      Params:         2       0       0       0       0       0       0       0       0
  4477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4479 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4480 ;;Total ram usage:        4 bytes
  4481 ;; Hardware stack levels used: 1
  4482 ;; Hardware stack levels required when called: 2
  4483 ;; This function calls:
  4484 ;;		Nothing
  4485 ;; This function is called by:
  4486 ;;		_pad
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text10
  4491  003B6A                     __ptext10:
  4492                           	callstack 0
  4493  003B6A                     _strlen:
  4494                           	callstack 23
  4495  003B6A  C006  F008         	movff	strlen@s,strlen@a
  4496  003B6E  C007  F009         	movff	strlen@s+1,strlen@a+1
  4497  003B72  EFBD  F01D         	goto	l4692
  4498  003B76                     l4690:
  4499  003B76  4A06               	infsnz	strlen@s^0,f,c
  4500  003B78  2A07               	incf	(strlen@s+1)^0,f,c
  4501  003B7A                     l4692:
  4502  003B7A  C006  FFD9         	movff	strlen@s,fsr2l
  4503  003B7E  C007  FFDA         	movff	strlen@s+1,fsr2h
  4504  003B82  50DF               	movf	indf2,w,c
  4505  003B84  A4D8               	btfss	status,2,c
  4506  003B86  EFC7  F01D         	goto	u5511
  4507  003B8A  EFC9  F01D         	goto	u5510
  4508  003B8E                     u5511:
  4509  003B8E  EFBB  F01D         	goto	l4690
  4510  003B92                     u5510:
  4511  003B92  5008               	movf	strlen@a^0,w,c
  4512  003B94  5C06               	subwf	strlen@s^0,w,c
  4513  003B96  6E06               	movwf	?_strlen^0,c
  4514  003B98  5009               	movf	(strlen@a+1)^0,w,c
  4515  003B9A  5807               	subwfb	(strlen@s+1)^0,w,c
  4516  003B9C  6E07               	movwf	(?_strlen+1)^0,c
  4517  003B9E  0012               	return		;funcret
  4518  003BA0                     __end_of_strlen:
  4519                           	callstack 0
  4520                           
  4521 ;; *************** function _fputs *****************
  4522 ;; Defined at:
  4523 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputs.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  s               2   14[COMRAM] PTR const unsigned char 
  4526 ;;		 -> dbuf(80), 
  4527 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4528 ;;		 -> sprintf@f(11), 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  i               2   19[COMRAM] int 
  4531 ;;  c               1   18[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2   14[COMRAM] int 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         4       0       0       0       0       0       0       0       0
  4542 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4544 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        7 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 4
  4548 ;; This function calls:
  4549 ;;		_fputc
  4550 ;; This function is called by:
  4551 ;;		_pad
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text11
  4556  003A7E                     __ptext11:
  4557                           	callstack 0
  4558  003A7E                     _fputs:
  4559                           	callstack 21
  4560  003A7E  0E00               	movlw	0
  4561  003A80  6E15               	movwf	(fputs@i+1)^0,c
  4562  003A82  0E00               	movlw	0
  4563  003A84  6E14               	movwf	fputs@i^0,c
  4564  003A86  EF50  F01D         	goto	l4686
  4565  003A8A                     l4682:
  4566  003A8A  C013  F006         	movff	fputs@c,fputc@c
  4567  003A8E  6A07               	clrf	(fputc@c+1)^0,c
  4568  003A90  C011  F008         	movff	fputs@fp,fputc@fp
  4569  003A94  C012  F009         	movff	fputs@fp+1,fputc@fp+1
  4570  003A98  ECC5  F019         	call	_fputc	;wreg free
  4571  003A9C  4A14               	infsnz	fputs@i^0,f,c
  4572  003A9E  2A15               	incf	(fputs@i+1)^0,f,c
  4573  003AA0                     l4686:
  4574  003AA0  5014               	movf	fputs@i^0,w,c
  4575  003AA2  240F               	addwf	fputs@s^0,w,c
  4576  003AA4  6ED9               	movwf	fsr2l,c
  4577  003AA6  5015               	movf	(fputs@i+1)^0,w,c
  4578  003AA8  2010               	addwfc	(fputs@s+1)^0,w,c
  4579  003AAA  6EDA               	movwf	fsr2h,c
  4580  003AAC  50DF               	movf	indf2,w,c
  4581  003AAE  6E13               	movwf	fputs@c^0,c
  4582  003AB0  5013               	movf	fputs@c^0,w,c
  4583  003AB2  A4D8               	btfss	status,2,c
  4584  003AB4  EF5E  F01D         	goto	u5501
  4585  003AB8  EF60  F01D         	goto	u5500
  4586  003ABC                     u5501:
  4587  003ABC  EF45  F01D         	goto	l4682
  4588  003AC0                     u5500:
  4589  003AC0  0012               	return		;funcret
  4590  003AC2                     __end_of_fputs:
  4591                           	callstack 0
  4592                           
  4593 ;; *************** function _fputc *****************
  4594 ;; Defined at:
  4595 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\nf_fputc.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;  c               2    5[COMRAM] int 
  4598 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  4599 ;;		 -> sprintf@f(11), 
  4600 ;; Auto vars:     Size  Location     Type
  4601 ;;		None
  4602 ;; Return value:  Size  Location     Type
  4603 ;;                  2    5[COMRAM] int 
  4604 ;; Registers used:
  4605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4606 ;; Tracked objects:
  4607 ;;		On entry : 0/0
  4608 ;;		On exit  : 0/0
  4609 ;;		Unchanged: 0/0
  4610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4611 ;;      Params:         4       0       0       0       0       0       0       0       0
  4612 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4613 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4614 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4615 ;;Total ram usage:        9 bytes
  4616 ;; Hardware stack levels used: 1
  4617 ;; Hardware stack levels required when called: 3
  4618 ;; This function calls:
  4619 ;;		_putch
  4620 ;; This function is called by:
  4621 ;;		_pad
  4622 ;;		_vfpfcnvrt
  4623 ;;		_fputs
  4624 ;; This function uses a non-reentrant model
  4625 ;;
  4626                           
  4627                           	psect	text12
  4628  00338A                     __ptext12:
  4629                           	callstack 0
  4630  00338A                     _fputc:
  4631                           	callstack 24
  4632  00338A  5008               	movf	fputc@fp^0,w,c
  4633  00338C  1009               	iorwf	(fputc@fp+1)^0,w,c
  4634  00338E  B4D8               	btfsc	status,2,c
  4635  003390  EFCC  F019         	goto	u5071
  4636  003394  EFCE  F019         	goto	u5070
  4637  003398                     u5071:
  4638  003398  EFD7  F019         	goto	l4468
  4639  00339C                     u5070:
  4640  00339C  5008               	movf	fputc@fp^0,w,c
  4641  00339E  1009               	iorwf	(fputc@fp+1)^0,w,c
  4642  0033A0  A4D8               	btfss	status,2,c
  4643  0033A2  EFD5  F019         	goto	u5081
  4644  0033A6  EFD7  F019         	goto	u5080
  4645  0033AA                     u5081:
  4646  0033AA  EFDC  F019         	goto	l4470
  4647  0033AE                     u5080:
  4648  0033AE                     l4468:
  4649  0033AE  5006               	movf	fputc@c^0,w,c
  4650  0033B0  EC8E  F01E         	call	_putch
  4651  0033B4  EF29  F01A         	goto	l1163
  4652  0033B8                     l4470:
  4653  0033B8  EE20 F009          	lfsr	2,9
  4654  0033BC  5008               	movf	fputc@fp^0,w,c
  4655  0033BE  26D9               	addwf	fsr2l,f,c
  4656  0033C0  5009               	movf	(fputc@fp+1)^0,w,c
  4657  0033C2  22DA               	addwfc	fsr2h,f,c
  4658  0033C4  50DE               	movf	postinc2,w,c
  4659  0033C6  10DE               	iorwf	postinc2,w,c
  4660  0033C8  B4D8               	btfsc	status,2,c
  4661  0033CA  EFE9  F019         	goto	u5091
  4662  0033CE  EFEB  F019         	goto	u5090
  4663  0033D2                     u5091:
  4664  0033D2  EF06  F01A         	goto	l4474
  4665  0033D6                     u5090:
  4666  0033D6  EE20 F009          	lfsr	2,9
  4667  0033DA  5008               	movf	fputc@fp^0,w,c
  4668  0033DC  26D9               	addwf	fsr2l,f,c
  4669  0033DE  5009               	movf	(fputc@fp+1)^0,w,c
  4670  0033E0  22DA               	addwfc	fsr2h,f,c
  4671  0033E2  EE10 F003          	lfsr	1,3
  4672  0033E6  5008               	movf	fputc@fp^0,w,c
  4673  0033E8  26E1               	addwf	fsr1l,f,c
  4674  0033EA  5009               	movf	(fputc@fp+1)^0,w,c
  4675  0033EC  22E2               	addwfc	fsr1h,f,c
  4676  0033EE  50DE               	movf	postinc2,w,c
  4677  0033F0  5CE6               	subwf	postinc1,w,c
  4678  0033F2  50E6               	movf	postinc1,w,c
  4679  0033F4  0A80               	xorlw	128
  4680  0033F6  6E0E               	movwf	(??_fputc+4)^0,c
  4681  0033F8  50DE               	movf	postinc2,w,c
  4682  0033FA  0A80               	xorlw	128
  4683  0033FC  580E               	subwfb	(??_fputc+4)^0,w,c
  4684  0033FE  B0D8               	btfsc	status,0,c
  4685  003400  EF04  F01A         	goto	u5101
  4686  003404  EF06  F01A         	goto	u5100
  4687  003408                     u5101:
  4688  003408  EF29  F01A         	goto	l1163
  4689  00340C                     u5100:
  4690  00340C                     l4474:
  4691  00340C  EE20 F003          	lfsr	2,3
  4692  003410  5008               	movf	fputc@fp^0,w,c
  4693  003412  26D9               	addwf	fsr2l,f,c
  4694  003414  5009               	movf	(fputc@fp+1)^0,w,c
  4695  003416  22DA               	addwfc	fsr2h,f,c
  4696  003418  CFDE F00A          	movff	postinc2,??_fputc
  4697  00341C  CFDD F00B          	movff	postdec2,??_fputc+1
  4698  003420  C008  FFD9         	movff	fputc@fp,fsr2l
  4699  003424  C009  FFDA         	movff	fputc@fp+1,fsr2h
  4700  003428  CFDE F00C          	movff	postinc2,??_fputc+2
  4701  00342C  CFDD F00D          	movff	postdec2,??_fputc+3
  4702  003430  500A               	movf	??_fputc^0,w,c
  4703  003432  240C               	addwf	(??_fputc+2)^0,w,c
  4704  003434  6ED9               	movwf	fsr2l,c
  4705  003436  500B               	movf	(??_fputc+1)^0,w,c
  4706  003438  200D               	addwfc	(??_fputc+3)^0,w,c
  4707  00343A  6EDA               	movwf	fsr2h,c
  4708  00343C  C006  FFDF         	movff	fputc@c,indf2
  4709  003440  EE20 F003          	lfsr	2,3
  4710  003444  5008               	movf	fputc@fp^0,w,c
  4711  003446  26D9               	addwf	fsr2l,f,c
  4712  003448  5009               	movf	(fputc@fp+1)^0,w,c
  4713  00344A  22DA               	addwfc	fsr2h,f,c
  4714  00344C  2ADE               	incf	postinc2,f,c
  4715  00344E  0E00               	movlw	0
  4716  003450  22DD               	addwfc	postdec2,f,c
  4717  003452                     l1163:
  4718  003452  0012               	return		;funcret
  4719  003454                     __end_of_fputc:
  4720                           	callstack 0
  4721                           
  4722 ;; *************** function _putch *****************
  4723 ;; Defined at:
  4724 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\putch.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  c               1    wreg     unsigned char 
  4727 ;; Auto vars:     Size  Location     Type
  4728 ;;  c               1    0[COMRAM] unsigned char 
  4729 ;; Return value:  Size  Location     Type
  4730 ;;                  1    wreg      void 
  4731 ;; Registers used:
  4732 ;;		wreg
  4733 ;; Tracked objects:
  4734 ;;		On entry : 0/0
  4735 ;;		On exit  : 0/0
  4736 ;;		Unchanged: 0/0
  4737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4738 ;;      Params:         0       0       0       0       0       0       0       0       0
  4739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4742 ;;Total ram usage:        0 bytes
  4743 ;; Hardware stack levels used: 1
  4744 ;; Hardware stack levels required when called: 2
  4745 ;; This function calls:
  4746 ;;		Nothing
  4747 ;; This function is called by:
  4748 ;;		_fputc
  4749 ;; This function uses a non-reentrant model
  4750 ;;
  4751                           
  4752                           	psect	text13
  4753  003D1C                     __ptext13:
  4754                           	callstack 0
  4755  003D1C                     _putch:
  4756                           	callstack 24
  4757  003D1C  0012               	return		;funcret
  4758  003D1E                     __end_of_putch:
  4759                           	callstack 0
  4760                           
  4761 ;; *************** function _floorf *****************
  4762 ;; Defined at:
  4763 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\floorf.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;  x               4   69[COMRAM] float 
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;  u               4    6[BANK0 ] struct .
  4768 ;;  m               4    0[BANK0 ] unsigned long 
  4769 ;;  e               2    4[BANK0 ] int 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  4   69[COMRAM] float 
  4772 ;; Registers used:
  4773 ;;		wreg, status,2, status,0
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4779 ;;      Params:         4       0       0       0       0       0       0       0       0
  4780 ;;      Locals:         0      10       0       0       0       0       0       0       0
  4781 ;;      Temps:          6       0       0       0       0       0       0       0       0
  4782 ;;      Totals:        10      10       0       0       0       0       0       0       0
  4783 ;;Total ram usage:       20 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 2
  4786 ;; This function calls:
  4787 ;;		Nothing
  4788 ;; This function is called by:
  4789 ;;		_efgtoa
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text14
  4794  002878                     __ptext14:
  4795                           	callstack 0
  4796  002878                     _floorf:
  4797                           	callstack 24
  4798  002878  C0DB  F066         	movff	floorf@F526,floorf@u
  4799  00287C  C0DC  F067         	movff	floorf@F526+1,floorf@u+1
  4800  002880  C0DD  F068         	movff	floorf@F526+2,floorf@u+2
  4801  002884  C0DE  F069         	movff	floorf@F526+3,floorf@u+3
  4802  002888  C046  F066         	movff	floorf@x,floorf@u
  4803  00288C  C047  F067         	movff	floorf@x+1,floorf@u+1
  4804  002890  C048  F068         	movff	floorf@x+2,floorf@u+2
  4805  002894  C049  F069         	movff	floorf@x+3,floorf@u+3
  4806  002898  0E81               	movlw	129
  4807  00289A  6E4A               	movwf	??_floorf^0,c
  4808  00289C  0EFF               	movlw	255
  4809  00289E  6E4B               	movwf	(??_floorf+1)^0,c
  4810  0028A0  C066  F04C         	movff	floorf@u,??_floorf+2
  4811  0028A4  C067  F04D         	movff	floorf@u+1,??_floorf+3
  4812  0028A8  C068  F04E         	movff	floorf@u+2,??_floorf+4
  4813  0028AC  C069  F04F         	movff	floorf@u+3,??_floorf+5
  4814  0028B0  0E18               	movlw	24
  4815  0028B2  EF60  F014         	goto	u6380
  4816  0028B6                     u6385:
  4817  0028B6  90D8               	bcf	status,0,c
  4818  0028B8  324F               	rrcf	(??_floorf+5)^0,f,c
  4819  0028BA  324E               	rrcf	(??_floorf+4)^0,f,c
  4820  0028BC  324D               	rrcf	(??_floorf+3)^0,f,c
  4821  0028BE  324C               	rrcf	(??_floorf+2)^0,f,c
  4822  0028C0                     u6380:
  4823  0028C0  2EE8               	decfsz	wreg,f,c
  4824  0028C2  EF5B  F014         	goto	u6385
  4825  0028C6  504C               	movf	(??_floorf+2)^0,w,c
  4826  0028C8  244A               	addwf	??_floorf^0,w,c
  4827  0028CA  0100               	movlb	0	; () banked
  4828  0028CC  6F64               	movwf	floorf@e& (0+255),b
  4829  0028CE  0E00               	movlw	0
  4830  0028D0  204B               	addwfc	(??_floorf+1)^0,w,c
  4831  0028D2  6F65               	movwf	(floorf@e+1)& (0+255),b
  4832  0028D4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4833  0028D6  EF76  F014         	goto	u6391
  4834  0028DA  5165               	movf	(floorf@e+1)& (0+255),w,b
  4835  0028DC  E109               	bnz	u6390
  4836  0028DE  0E17               	movlw	23
  4837  0028E0  5D64               	subwf	floorf@e& (0+255),w,b
  4838  0028E2  A0D8               	btfss	status,0,c
  4839  0028E4  EF76  F014         	goto	u6391
  4840  0028E8  EF78  F014         	goto	u6390
  4841  0028EC                     u6391:
  4842  0028EC  EF82  F014         	goto	l5216
  4843  0028F0                     u6390:
  4844  0028F0                     l5214:
  4845                           
  4846                           ; BSR set to: 0
  4847  0028F0  C046  F046         	movff	floorf@x,?_floorf
  4848  0028F4  C047  F047         	movff	floorf@x+1,?_floorf+1
  4849  0028F8  C048  F048         	movff	floorf@x+2,?_floorf+2
  4850  0028FC  C049  F049         	movff	floorf@x+3,?_floorf+3
  4851  002900  EF46  F015         	goto	l1124
  4852  002904                     l5216:
  4853                           
  4854                           ; BSR set to: 0
  4855  002904  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  4856  002906  EF87  F014         	goto	u6401
  4857  00290A  EF89  F014         	goto	u6400
  4858  00290E                     u6401:
  4859  00290E  EFFA  F014         	goto	l5226
  4860  002912                     u6400:
  4861  002912                     
  4862                           ; BSR set to: 0
  4863  002912  C064  F04A         	movff	floorf@e,??_floorf
  4864  002916  0EFF               	movlw	255
  4865  002918  6E4B               	movwf	(??_floorf+1)^0,c
  4866  00291A  0EFF               	movlw	255
  4867  00291C  6E4C               	movwf	(??_floorf+2)^0,c
  4868  00291E  0E7F               	movlw	127
  4869  002920  6E4D               	movwf	(??_floorf+3)^0,c
  4870  002922  0E00               	movlw	0
  4871  002924  6E4E               	movwf	(??_floorf+4)^0,c
  4872  002926                     u6415:
  4873  002926  664A               	tstfsz	??_floorf^0,c
  4874  002928  EF98  F014         	goto	u6416
  4875  00292C  EFA0  F014         	goto	u6417
  4876  002930                     u6416:
  4877  002930  344E               	rlcf	(??_floorf+4)^0,w,c
  4878  002932  324E               	rrcf	(??_floorf+4)^0,f,c
  4879  002934  324D               	rrcf	(??_floorf+3)^0,f,c
  4880  002936  324C               	rrcf	(??_floorf+2)^0,f,c
  4881  002938  324B               	rrcf	(??_floorf+1)^0,f,c
  4882  00293A  2E4A               	decfsz	??_floorf^0,f,c
  4883  00293C  EF93  F014         	goto	u6415
  4884  002940                     u6417:
  4885  002940  C04B  F060         	movff	??_floorf+1,floorf@m
  4886  002944  C04C  F061         	movff	??_floorf+2,floorf@m+1
  4887  002948  C04D  F062         	movff	??_floorf+3,floorf@m+2
  4888  00294C  C04E  F063         	movff	??_floorf+4,floorf@m+3
  4889  002950  0100               	movlb	0	; () banked
  4890  002952  5160               	movf	floorf@m& (0+255),w,b
  4891  002954  1566               	andwf	floorf@u& (0+255),w,b
  4892  002956  6E4A               	movwf	??_floorf^0,c
  4893  002958  5161               	movf	(floorf@m+1)& (0+255),w,b
  4894  00295A  1567               	andwf	(floorf@u+1)& (0+255),w,b
  4895  00295C  6E4B               	movwf	(??_floorf+1)^0,c
  4896  00295E  5162               	movf	(floorf@m+2)& (0+255),w,b
  4897  002960  1568               	andwf	(floorf@u+2)& (0+255),w,b
  4898  002962  6E4C               	movwf	(??_floorf+2)^0,c
  4899  002964  5163               	movf	(floorf@m+3)& (0+255),w,b
  4900  002966  1569               	andwf	(floorf@u+3)& (0+255),w,b
  4901  002968  6E4D               	movwf	(??_floorf+3)^0,c
  4902  00296A  504A               	movf	??_floorf^0,w,c
  4903  00296C  104B               	iorwf	(??_floorf+1)^0,w,c
  4904  00296E  104C               	iorwf	(??_floorf+2)^0,w,c
  4905  002970  104D               	iorwf	(??_floorf+3)^0,w,c
  4906  002972  A4D8               	btfss	status,2,c
  4907  002974  EFBE  F014         	goto	u6421
  4908  002978  EFC0  F014         	goto	u6420
  4909  00297C                     u6421:
  4910  00297C  EFC2  F014         	goto	l5222
  4911  002980                     u6420:
  4912  002980  EF78  F014         	goto	l5214
  4913  002984                     l5222:
  4914                           
  4915                           ; BSR set to: 0
  4916  002984  C066  F04A         	movff	floorf@u,??_floorf
  4917  002988  C067  F04B         	movff	floorf@u+1,??_floorf+1
  4918  00298C  C068  F04C         	movff	floorf@u+2,??_floorf+2
  4919  002990  C069  F04D         	movff	floorf@u+3,??_floorf+3
  4920  002994  0E20               	movlw	32
  4921  002996  EFD2  F014         	goto	u6430
  4922  00299A                     u6435:
  4923  00299A  90D8               	bcf	status,0,c
  4924  00299C  324D               	rrcf	(??_floorf+3)^0,f,c
  4925  00299E  324C               	rrcf	(??_floorf+2)^0,f,c
  4926  0029A0  324B               	rrcf	(??_floorf+1)^0,f,c
  4927  0029A2  324A               	rrcf	??_floorf^0,f,c
  4928  0029A4                     u6430:
  4929  0029A4  2EE8               	decfsz	wreg,f,c
  4930  0029A6  EFCD  F014         	goto	u6435
  4931  0029AA  504A               	movf	??_floorf^0,w,c
  4932  0029AC  104B               	iorwf	(??_floorf+1)^0,w,c
  4933  0029AE  104C               	iorwf	(??_floorf+2)^0,w,c
  4934  0029B0  104D               	iorwf	(??_floorf+3)^0,w,c
  4935  0029B2  B4D8               	btfsc	status,2,c
  4936  0029B4  EFDE  F014         	goto	u6441
  4937  0029B8  EFE0  F014         	goto	u6440
  4938  0029BC                     u6441:
  4939  0029BC  EFE8  F014         	goto	l1127
  4940  0029C0                     u6440:
  4941  0029C0                     
  4942                           ; BSR set to: 0
  4943  0029C0  5160               	movf	floorf@m& (0+255),w,b
  4944  0029C2  2766               	addwf	floorf@u& (0+255),f,b
  4945  0029C4  5161               	movf	(floorf@m+1)& (0+255),w,b
  4946  0029C6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  4947  0029C8  5162               	movf	(floorf@m+2)& (0+255),w,b
  4948  0029CA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  4949  0029CC  5163               	movf	(floorf@m+3)& (0+255),w,b
  4950  0029CE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  4951  0029D0                     l1127:
  4952                           
  4953                           ; BSR set to: 0
  4954  0029D0  1D60               	comf	floorf@m& (0+255),w,b
  4955  0029D2  6E4A               	movwf	??_floorf^0,c
  4956  0029D4  1D61               	comf	(floorf@m+1)& (0+255),w,b
  4957  0029D6  6E4B               	movwf	(??_floorf+1)^0,c
  4958  0029D8  1D62               	comf	(floorf@m+2)& (0+255),w,b
  4959  0029DA  6E4C               	movwf	(??_floorf+2)^0,c
  4960  0029DC  1D63               	comf	(floorf@m+3)& (0+255),w,b
  4961  0029DE  6E4D               	movwf	(??_floorf+3)^0,c
  4962  0029E0  504A               	movf	??_floorf^0,w,c
  4963  0029E2  1766               	andwf	floorf@u& (0+255),f,b
  4964  0029E4  504B               	movf	(??_floorf+1)^0,w,c
  4965  0029E6  1767               	andwf	(floorf@u+1)& (0+255),f,b
  4966  0029E8  504C               	movf	(??_floorf+2)^0,w,c
  4967  0029EA  1768               	andwf	(floorf@u+2)& (0+255),f,b
  4968  0029EC  504D               	movf	(??_floorf+3)^0,w,c
  4969  0029EE  1769               	andwf	(floorf@u+3)& (0+255),f,b
  4970  0029F0  EF3E  F015         	goto	l5234
  4971  0029F4                     l5226:
  4972                           
  4973                           ; BSR set to: 0
  4974  0029F4  C066  F04A         	movff	floorf@u,??_floorf
  4975  0029F8  C067  F04B         	movff	floorf@u+1,??_floorf+1
  4976  0029FC  C068  F04C         	movff	floorf@u+2,??_floorf+2
  4977  002A00  C069  F04D         	movff	floorf@u+3,??_floorf+3
  4978  002A04  0E20               	movlw	32
  4979  002A06  EF0A  F015         	goto	u6450
  4980  002A0A                     u6455:
  4981  002A0A  90D8               	bcf	status,0,c
  4982  002A0C  324D               	rrcf	(??_floorf+3)^0,f,c
  4983  002A0E  324C               	rrcf	(??_floorf+2)^0,f,c
  4984  002A10  324B               	rrcf	(??_floorf+1)^0,f,c
  4985  002A12  324A               	rrcf	??_floorf^0,f,c
  4986  002A14                     u6450:
  4987  002A14  2EE8               	decfsz	wreg,f,c
  4988  002A16  EF05  F015         	goto	u6455
  4989  002A1A  504A               	movf	??_floorf^0,w,c
  4990  002A1C  104B               	iorwf	(??_floorf+1)^0,w,c
  4991  002A1E  104C               	iorwf	(??_floorf+2)^0,w,c
  4992  002A20  104D               	iorwf	(??_floorf+3)^0,w,c
  4993  002A22  A4D8               	btfss	status,2,c
  4994  002A24  EF16  F015         	goto	u6461
  4995  002A28  EF18  F015         	goto	u6460
  4996  002A2C                     u6461:
  4997  002A2C  EF22  F015         	goto	l5230
  4998  002A30                     u6460:
  4999  002A30                     
  5000                           ; BSR set to: 0
  5001  002A30  0E00               	movlw	0
  5002  002A32  6F66               	movwf	floorf@u& (0+255),b
  5003  002A34  0E00               	movlw	0
  5004  002A36  6F67               	movwf	(floorf@u+1)& (0+255),b
  5005  002A38  0E00               	movlw	0
  5006  002A3A  6F68               	movwf	(floorf@u+2)& (0+255),b
  5007  002A3C  0E00               	movlw	0
  5008  002A3E  6F69               	movwf	(floorf@u+3)& (0+255),b
  5009  002A40  EF3E  F015         	goto	l5234
  5010  002A44                     l5230:
  5011                           
  5012                           ; BSR set to: 0
  5013  002A44  90D8               	bcf	status,0,c
  5014  002A46  3566               	rlcf	floorf@u& (0+255),w,b
  5015  002A48  6E4A               	movwf	??_floorf^0,c
  5016  002A4A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  5017  002A4C  6E4B               	movwf	(??_floorf+1)^0,c
  5018  002A4E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  5019  002A50  6E4C               	movwf	(??_floorf+2)^0,c
  5020  002A52  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  5021  002A54  6E4D               	movwf	(??_floorf+3)^0,c
  5022  002A56  504A               	movf	??_floorf^0,w,c
  5023  002A58  104B               	iorwf	(??_floorf+1)^0,w,c
  5024  002A5A  104C               	iorwf	(??_floorf+2)^0,w,c
  5025  002A5C  104D               	iorwf	(??_floorf+3)^0,w,c
  5026  002A5E  B4D8               	btfsc	status,2,c
  5027  002A60  EF34  F015         	goto	u6471
  5028  002A64  EF36  F015         	goto	u6470
  5029  002A68                     u6471:
  5030  002A68  EF3E  F015         	goto	l5234
  5031  002A6C                     u6470:
  5032  002A6C                     
  5033                           ; BSR set to: 0
  5034  002A6C  0E00               	movlw	0
  5035  002A6E  6F66               	movwf	floorf@u& (0+255),b
  5036  002A70  0E00               	movlw	0
  5037  002A72  6F67               	movwf	(floorf@u+1)& (0+255),b
  5038  002A74  0E80               	movlw	128
  5039  002A76  6F68               	movwf	(floorf@u+2)& (0+255),b
  5040  002A78  0EBF               	movlw	191
  5041  002A7A  6F69               	movwf	(floorf@u+3)& (0+255),b
  5042  002A7C                     l5234:
  5043                           
  5044                           ; BSR set to: 0
  5045  002A7C  C066  F046         	movff	floorf@u,?_floorf
  5046  002A80  C067  F047         	movff	floorf@u+1,?_floorf+1
  5047  002A84  C068  F048         	movff	floorf@u+2,?_floorf+2
  5048  002A88  C069  F049         	movff	floorf@u+3,?_floorf+3
  5049  002A8C                     l1124:
  5050                           
  5051                           ; BSR set to: 0
  5052  002A8C  0012               	return		;funcret
  5053  002A8E                     __end_of_floorf:
  5054                           	callstack 0
  5055                           
  5056 ;; *************** function ___fpclassifyf *****************
  5057 ;; Defined at:
  5058 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\__fpclassifyf.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  x               4    5[COMRAM] float 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  u               4   15[COMRAM] struct .
  5063 ;;  e               2   13[COMRAM] int 
  5064 ;; Return value:  Size  Location     Type
  5065 ;;                  2    5[COMRAM] int 
  5066 ;; Registers used:
  5067 ;;		wreg, status,2, status,0
  5068 ;; Tracked objects:
  5069 ;;		On entry : 0/0
  5070 ;;		On exit  : 0/0
  5071 ;;		Unchanged: 0/0
  5072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5073 ;;      Params:         4       0       0       0       0       0       0       0       0
  5074 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5075 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5076 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5077 ;;Total ram usage:       14 bytes
  5078 ;; Hardware stack levels used: 1
  5079 ;; Hardware stack levels required when called: 2
  5080 ;; This function calls:
  5081 ;;		Nothing
  5082 ;; This function is called by:
  5083 ;;		_efgtoa
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text15
  5088  0031B6                     __ptext15:
  5089                           	callstack 0
  5090  0031B6                     ___fpclassifyf:
  5091                           	callstack 24
  5092  0031B6  C0DF  F010         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5093  0031BA  C0E0  F011         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5094  0031BE  C0E1  F012         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5095  0031C2  C0E2  F013         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5096  0031C6  C006  F010         	movff	___fpclassifyf@x,___fpclassifyf@u
  5097  0031CA  C007  F011         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5098  0031CE  C008  F012         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5099  0031D2  C009  F013         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5100  0031D6  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5101  0031DA  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5102  0031DE  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5103  0031E2  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5104  0031E6  0E18               	movlw	24
  5105  0031E8  EFFB  F018         	goto	u6280
  5106  0031EC                     u6285:
  5107  0031EC  90D8               	bcf	status,0,c
  5108  0031EE  320D               	rrcf	(??___fpclassifyf+3)^0,f,c
  5109  0031F0  320C               	rrcf	(??___fpclassifyf+2)^0,f,c
  5110  0031F2  320B               	rrcf	(??___fpclassifyf+1)^0,f,c
  5111  0031F4  320A               	rrcf	??___fpclassifyf^0,f,c
  5112  0031F6                     u6280:
  5113  0031F6  2EE8               	decfsz	wreg,f,c
  5114  0031F8  EFF6  F018         	goto	u6285
  5115  0031FC  500A               	movf	??___fpclassifyf^0,w,c
  5116  0031FE  6E0E               	movwf	___fpclassifyf@e^0,c
  5117  003200  6A0F               	clrf	(___fpclassifyf@e+1)^0,c
  5118  003202  500E               	movf	___fpclassifyf@e^0,w,c
  5119  003204  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5120  003206  A4D8               	btfss	status,2,c
  5121  003208  EF08  F019         	goto	u6291
  5122  00320C  EF0A  F019         	goto	u6290
  5123  003210                     u6291:
  5124  003210  EF2A  F019         	goto	l5186
  5125  003214                     u6290:
  5126  003214  90D8               	bcf	status,0,c
  5127  003216  3410               	rlcf	___fpclassifyf@u^0,w,c
  5128  003218  6E0A               	movwf	??___fpclassifyf^0,c
  5129  00321A  3411               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5130  00321C  6E0B               	movwf	(??___fpclassifyf+1)^0,c
  5131  00321E  3412               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5132  003220  6E0C               	movwf	(??___fpclassifyf+2)^0,c
  5133  003222  3413               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5134  003224  6E0D               	movwf	(??___fpclassifyf+3)^0,c
  5135  003226  500A               	movf	??___fpclassifyf^0,w,c
  5136  003228  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5137  00322A  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5138  00322C  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5139  00322E  A4D8               	btfss	status,2,c
  5140  003230  EF1C  F019         	goto	u6301
  5141  003234  EF1E  F019         	goto	u6300
  5142  003238                     u6301:
  5143  003238  EF24  F019         	goto	l5182
  5144  00323C                     u6300:
  5145  00323C  0E00               	movlw	0
  5146  00323E  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5147  003240  0E02               	movlw	2
  5148  003242  6E06               	movwf	?___fpclassifyf^0,c
  5149  003244  EF59  F019         	goto	l1092
  5150  003248                     l5182:
  5151  003248  0E00               	movlw	0
  5152  00324A  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5153  00324C  0E03               	movlw	3
  5154  00324E  6E06               	movwf	?___fpclassifyf^0,c
  5155  003250  EF59  F019         	goto	l1092
  5156  003254                     l5186:
  5157  003254  280E               	incf	___fpclassifyf@e^0,w,c
  5158  003256  100F               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5159  003258  A4D8               	btfss	status,2,c
  5160  00325A  EF31  F019         	goto	u6311
  5161  00325E  EF33  F019         	goto	u6310
  5162  003262                     u6311:
  5163  003262  EF55  F019         	goto	l5192
  5164  003266                     u6310:
  5165  003266  C010  F00A         	movff	___fpclassifyf@u,??___fpclassifyf
  5166  00326A  C011  F00B         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5167  00326E  C012  F00C         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5168  003272  C013  F00D         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5169  003276  0E09               	movlw	9
  5170  003278                     u6325:
  5171  003278  90D8               	bcf	status,0,c
  5172  00327A  360A               	rlcf	??___fpclassifyf^0,f,c
  5173  00327C  360B               	rlcf	(??___fpclassifyf+1)^0,f,c
  5174  00327E  360C               	rlcf	(??___fpclassifyf+2)^0,f,c
  5175  003280  360D               	rlcf	(??___fpclassifyf+3)^0,f,c
  5176  003282  2EE8               	decfsz	wreg,f,c
  5177  003284  EF3C  F019         	goto	u6325
  5178  003288  500A               	movf	??___fpclassifyf^0,w,c
  5179  00328A  100B               	iorwf	(??___fpclassifyf+1)^0,w,c
  5180  00328C  100C               	iorwf	(??___fpclassifyf+2)^0,w,c
  5181  00328E  100D               	iorwf	(??___fpclassifyf+3)^0,w,c
  5182  003290  B4D8               	btfsc	status,2,c
  5183  003292  EF4D  F019         	goto	u6331
  5184  003296  EF50  F019         	goto	u6330
  5185  00329A                     u6331:
  5186  00329A  0E01               	movlw	1
  5187  00329C  EF51  F019         	goto	u6340
  5188  0032A0                     u6330:
  5189  0032A0  0E00               	movlw	0
  5190  0032A2                     u6340:
  5191  0032A2  6E06               	movwf	?___fpclassifyf^0,c
  5192  0032A4  6A07               	clrf	(?___fpclassifyf+1)^0,c
  5193  0032A6  EF59  F019         	goto	l1092
  5194  0032AA                     l5192:
  5195  0032AA  0E00               	movlw	0
  5196  0032AC  6E07               	movwf	(?___fpclassifyf+1)^0,c
  5197  0032AE  0E04               	movlw	4
  5198  0032B0  6E06               	movwf	?___fpclassifyf^0,c
  5199  0032B2                     l1092:
  5200  0032B2  0012               	return		;funcret
  5201  0032B4                     __end_of___fpclassifyf:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function ___fltol *****************
  5205 ;; Defined at:
  5206 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fltol.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  f1              4    5[COMRAM] int 
  5209 ;; Auto vars:     Size  Location     Type
  5210 ;;  exp1            1   14[COMRAM] unsigned char 
  5211 ;;  sign1           1   13[COMRAM] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  4    5[COMRAM] long 
  5214 ;; Registers used:
  5215 ;;		wreg, status,2, status,0
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5221 ;;      Params:         4       0       0       0       0       0       0       0       0
  5222 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5223 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5224 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5225 ;;Total ram usage:       10 bytes
  5226 ;; Hardware stack levels used: 1
  5227 ;; Hardware stack levels required when called: 2
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_efgtoa
  5232 ;; This function uses a non-reentrant model
  5233 ;;
  5234                           
  5235                           	psect	text16
  5236  002EAA                     __ptext16:
  5237                           	callstack 0
  5238  002EAA                     ___fltol:
  5239                           	callstack 24
  5240  002EAA  3408               	rlcf	(___fltol@f1+2)^0,w,c
  5241  002EAC  3409               	rlcf	(___fltol@f1+3)^0,w,c
  5242  002EAE  6E0F               	movwf	___fltol@exp1^0,c
  5243  002EB0  500F               	movf	___fltol@exp1^0,w,c
  5244  002EB2  A4D8               	btfss	status,2,c
  5245  002EB4  EF5E  F017         	goto	u6171
  5246  002EB8  EF60  F017         	goto	u6170
  5247  002EBC                     u6171:
  5248  002EBC  EF6A  F017         	goto	l5114
  5249  002EC0                     u6170:
  5250  002EC0                     l5110:
  5251  002EC0  0E00               	movlw	0
  5252  002EC2  6E06               	movwf	?___fltol^0,c
  5253  002EC4  0E00               	movlw	0
  5254  002EC6  6E07               	movwf	(?___fltol+1)^0,c
  5255  002EC8  0E00               	movlw	0
  5256  002ECA  6E08               	movwf	(?___fltol+2)^0,c
  5257  002ECC  0E00               	movlw	0
  5258  002ECE  6E09               	movwf	(?___fltol+3)^0,c
  5259  002ED0  EFD7  F017         	goto	l541
  5260  002ED4                     l5114:
  5261  002ED4  C006  F00A         	movff	___fltol@f1,??___fltol
  5262  002ED8  C007  F00B         	movff	___fltol@f1+1,??___fltol+1
  5263  002EDC  C008  F00C         	movff	___fltol@f1+2,??___fltol+2
  5264  002EE0  C009  F00D         	movff	___fltol@f1+3,??___fltol+3
  5265  002EE4  0E20               	movlw	32
  5266  002EE6  EF7A  F017         	goto	u6180
  5267  002EEA                     u6185:
  5268  002EEA  90D8               	bcf	status,0,c
  5269  002EEC  320D               	rrcf	(??___fltol+3)^0,f,c
  5270  002EEE  320C               	rrcf	(??___fltol+2)^0,f,c
  5271  002EF0  320B               	rrcf	(??___fltol+1)^0,f,c
  5272  002EF2  320A               	rrcf	??___fltol^0,f,c
  5273  002EF4                     u6180:
  5274  002EF4  2EE8               	decfsz	wreg,f,c
  5275  002EF6  EF75  F017         	goto	u6185
  5276  002EFA  500A               	movf	??___fltol^0,w,c
  5277  002EFC  6E0E               	movwf	___fltol@sign1^0,c
  5278  002EFE  8E08               	bsf	(___fltol@f1+2)^0,7,c
  5279  002F00  0EFF               	movlw	255
  5280  002F02  1606               	andwf	___fltol@f1^0,f,c
  5281  002F04  0EFF               	movlw	255
  5282  002F06  1607               	andwf	(___fltol@f1+1)^0,f,c
  5283  002F08  0EFF               	movlw	255
  5284  002F0A  1608               	andwf	(___fltol@f1+2)^0,f,c
  5285  002F0C  0E00               	movlw	0
  5286  002F0E  1609               	andwf	(___fltol@f1+3)^0,f,c
  5287  002F10  0E96               	movlw	150
  5288  002F12  5E0F               	subwf	___fltol@exp1^0,f,c
  5289  002F14  BE0F               	btfsc	___fltol@exp1^0,7,c
  5290  002F16  EF91  F017         	goto	u6190
  5291  002F1A  EF8F  F017         	goto	u6191
  5292  002F1E                     u6191:
  5293  002F1E  EFA7  F017         	goto	l5134
  5294  002F22                     u6190:
  5295  002F22  500F               	movf	___fltol@exp1^0,w,c
  5296  002F24  0A80               	xorlw	128
  5297  002F26  0F97               	addlw	151
  5298  002F28  B0D8               	btfsc	status,0,c
  5299  002F2A  EF99  F017         	goto	u6201
  5300  002F2E  EF9B  F017         	goto	u6200
  5301  002F32                     u6201:
  5302  002F32  EF9D  F017         	goto	l5130
  5303  002F36                     u6200:
  5304  002F36  EF60  F017         	goto	l5110
  5305  002F3A                     l5130:
  5306  002F3A  90D8               	bcf	status,0,c
  5307  002F3C  3209               	rrcf	(___fltol@f1+3)^0,f,c
  5308  002F3E  3208               	rrcf	(___fltol@f1+2)^0,f,c
  5309  002F40  3207               	rrcf	(___fltol@f1+1)^0,f,c
  5310  002F42  3206               	rrcf	___fltol@f1^0,f,c
  5311  002F44  3E0F               	incfsz	___fltol@exp1^0,f,c
  5312  002F46  EF9D  F017         	goto	l5130
  5313  002F4A  EFBF  F017         	goto	l5144
  5314  002F4E                     l5134:
  5315  002F4E  0E1F               	movlw	31
  5316  002F50  640F               	cpfsgt	___fltol@exp1^0,c
  5317  002F52  EFAD  F017         	goto	u6211
  5318  002F56  EFAF  F017         	goto	u6210
  5319  002F5A                     u6211:
  5320  002F5A  EFB7  F017         	goto	l5142
  5321  002F5E                     u6210:
  5322  002F5E  EF60  F017         	goto	l5110
  5323  002F62                     l5140:
  5324  002F62  90D8               	bcf	status,0,c
  5325  002F64  3606               	rlcf	___fltol@f1^0,f,c
  5326  002F66  3607               	rlcf	(___fltol@f1+1)^0,f,c
  5327  002F68  3608               	rlcf	(___fltol@f1+2)^0,f,c
  5328  002F6A  3609               	rlcf	(___fltol@f1+3)^0,f,c
  5329  002F6C  060F               	decf	___fltol@exp1^0,f,c
  5330  002F6E                     l5142:
  5331  002F6E  500F               	movf	___fltol@exp1^0,w,c
  5332  002F70  A4D8               	btfss	status,2,c
  5333  002F72  EFBD  F017         	goto	u6221
  5334  002F76  EFBF  F017         	goto	u6220
  5335  002F7A                     u6221:
  5336  002F7A  EFB1  F017         	goto	l5140
  5337  002F7E                     u6220:
  5338  002F7E                     l5144:
  5339  002F7E  500E               	movf	___fltol@sign1^0,w,c
  5340  002F80  B4D8               	btfsc	status,2,c
  5341  002F82  EFC5  F017         	goto	u6231
  5342  002F86  EFC7  F017         	goto	u6230
  5343  002F8A                     u6231:
  5344  002F8A  EFCF  F017         	goto	l5148
  5345  002F8E                     u6230:
  5346  002F8E  1E09               	comf	(___fltol@f1+3)^0,f,c
  5347  002F90  1E08               	comf	(___fltol@f1+2)^0,f,c
  5348  002F92  1E07               	comf	(___fltol@f1+1)^0,f,c
  5349  002F94  6C06               	negf	___fltol@f1^0,c
  5350  002F96  0E00               	movlw	0
  5351  002F98  2207               	addwfc	(___fltol@f1+1)^0,f,c
  5352  002F9A  2208               	addwfc	(___fltol@f1+2)^0,f,c
  5353  002F9C  2209               	addwfc	(___fltol@f1+3)^0,f,c
  5354  002F9E                     l5148:
  5355  002F9E  C006  F006         	movff	___fltol@f1,?___fltol
  5356  002FA2  C007  F007         	movff	___fltol@f1+1,?___fltol+1
  5357  002FA6  C008  F008         	movff	___fltol@f1+2,?___fltol+2
  5358  002FAA  C009  F009         	movff	___fltol@f1+3,?___fltol+3
  5359  002FAE                     l541:
  5360  002FAE  0012               	return		;funcret
  5361  002FB0                     __end_of___fltol:
  5362                           	callstack 0
  5363                           
  5364 ;; *************** function ___flsub *****************
  5365 ;; Defined at:
  5366 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5367 ;; Parameters:    Size  Location     Type
  5368 ;;  b               4    0[BANK0 ] long 
  5369 ;;  a               4    4[BANK0 ] long 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;		None
  5372 ;; Return value:  Size  Location     Type
  5373 ;;                  4    0[BANK0 ] long 
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0, cstack
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5381 ;;      Params:         0       8       0       0       0       0       0       0       0
  5382 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5384 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5385 ;;Total ram usage:        8 bytes
  5386 ;; Hardware stack levels used: 1
  5387 ;; Hardware stack levels required when called: 3
  5388 ;; This function calls:
  5389 ;;		___fladd
  5390 ;; This function is called by:
  5391 ;;		_efgtoa
  5392 ;; This function uses a non-reentrant model
  5393 ;;
  5394                           
  5395                           	psect	text17
  5396  0039F0                     __ptext17:
  5397                           	callstack 0
  5398  0039F0                     ___flsub:
  5399                           	callstack 23
  5400  0039F0  0E00               	movlw	0
  5401  0039F2  0100               	movlb	0	; () banked
  5402  0039F4  1B64               	xorwf	___flsub@a& (0+255),f,b
  5403  0039F6  0E00               	movlw	0
  5404  0039F8  1B65               	xorwf	(___flsub@a+1)& (0+255),f,b
  5405  0039FA  0E00               	movlw	0
  5406  0039FC  1B66               	xorwf	(___flsub@a+2)& (0+255),f,b
  5407  0039FE  0E80               	movlw	128
  5408  003A00  1B67               	xorwf	(___flsub@a+3)& (0+255),f,b
  5409  003A02                     
  5410                           ; BSR set to: 0
  5411  003A02  C060  F046         	movff	___flsub@b,___fladd@b
  5412  003A06  C061  F047         	movff	___flsub@b+1,___fladd@b+1
  5413  003A0A  C062  F048         	movff	___flsub@b+2,___fladd@b+2
  5414  003A0E  C063  F049         	movff	___flsub@b+3,___fladd@b+3
  5415  003A12  C064  F04A         	movff	___flsub@a,___fladd@a
  5416  003A16  C065  F04B         	movff	___flsub@a+1,___fladd@a+1
  5417  003A1A  C066  F04C         	movff	___flsub@a+2,___fladd@a+2
  5418  003A1E  C067  F04D         	movff	___flsub@a+3,___fladd@a+3
  5419  003A22  EC2C  F00A         	call	___fladd	;wreg free
  5420  003A26  C046  F060         	movff	?___fladd,?___flsub
  5421  003A2A  C047  F061         	movff	?___fladd+1,?___flsub+1
  5422  003A2E  C048  F062         	movff	?___fladd+2,?___flsub+2
  5423  003A32  C049  F063         	movff	?___fladd+3,?___flsub+3
  5424  003A36  0012               	return		;funcret
  5425  003A38                     __end_of___flsub:
  5426                           	callstack 0
  5427                           
  5428 ;; *************** function ___fladd *****************
  5429 ;; Defined at:
  5430 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcadd.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;  b               4   69[COMRAM] long 
  5433 ;;  a               4   73[COMRAM] long 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  grs             1   84[COMRAM] unsigned char 
  5436 ;;  bexp            1   83[COMRAM] unsigned char 
  5437 ;;  aexp            1   82[COMRAM] unsigned char 
  5438 ;;  signs           1   81[COMRAM] unsigned char 
  5439 ;; Return value:  Size  Location     Type
  5440 ;;                  4   69[COMRAM] unsigned char 
  5441 ;; Registers used:
  5442 ;;		wreg, status,2, status,0
  5443 ;; Tracked objects:
  5444 ;;		On entry : 0/0
  5445 ;;		On exit  : 0/0
  5446 ;;		Unchanged: 0/0
  5447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5448 ;;      Params:         8       0       0       0       0       0       0       0       0
  5449 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5450 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5451 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5452 ;;Total ram usage:       16 bytes
  5453 ;; Hardware stack levels used: 1
  5454 ;; Hardware stack levels required when called: 2
  5455 ;; This function calls:
  5456 ;;		Nothing
  5457 ;; This function is called by:
  5458 ;;		_main
  5459 ;;		___flsub
  5460 ;;		_efgtoa
  5461 ;; This function uses a non-reentrant model
  5462 ;;
  5463                           
  5464                           	psect	text18
  5465  001458                     __ptext18:
  5466                           	callstack 0
  5467  001458                     ___fladd:
  5468                           	callstack 23
  5469  001458  5049               	movf	(___fladd@b+3)^0,w,c
  5470  00145A  0B80               	andlw	128
  5471  00145C  6E52               	movwf	___fladd@signs^0,c
  5472  00145E  5049               	movf	(___fladd@b+3)^0,w,c
  5473  001460  2449               	addwf	(___fladd@b+3)^0,w,c
  5474  001462  6E54               	movwf	___fladd@bexp^0,c
  5475  001464  AE48               	btfss	(___fladd@b+2)^0,7,c
  5476  001466  EF37  F00A         	goto	u5111
  5477  00146A  EF39  F00A         	goto	u5110
  5478  00146E                     u5111:
  5479  00146E  EF3A  F00A         	goto	l4484
  5480  001472                     u5110:
  5481  001472  8054               	bsf	___fladd@bexp^0,0,c
  5482  001474                     l4484:
  5483  001474  5054               	movf	___fladd@bexp^0,w,c
  5484  001476  B4D8               	btfsc	status,2,c
  5485  001478  EF40  F00A         	goto	u5121
  5486  00147C  EF42  F00A         	goto	u5120
  5487  001480                     u5121:
  5488  001480  EF57  F00A         	goto	l4494
  5489  001484                     u5120:
  5490  001484  2854               	incf	___fladd@bexp^0,w,c
  5491  001486  A4D8               	btfss	status,2,c
  5492  001488  EF48  F00A         	goto	u5131
  5493  00148C  EF4A  F00A         	goto	u5130
  5494  001490                     u5131:
  5495  001490  EF52  F00A         	goto	l4490
  5496  001494                     u5130:
  5497  001494  0E00               	movlw	0
  5498  001496  6E46               	movwf	___fladd@b^0,c
  5499  001498  0E00               	movlw	0
  5500  00149A  6E47               	movwf	(___fladd@b+1)^0,c
  5501  00149C  0E00               	movlw	0
  5502  00149E  6E48               	movwf	(___fladd@b+2)^0,c
  5503  0014A0  0E00               	movlw	0
  5504  0014A2  6E49               	movwf	(___fladd@b+3)^0,c
  5505  0014A4                     l4490:
  5506  0014A4  8E48               	bsf	(___fladd@b+2)^0,7,c
  5507  0014A6  0E00               	movlw	0
  5508  0014A8  6E49               	movwf	(___fladd@b+3)^0,c
  5509  0014AA  EF5F  F00A         	goto	l4496
  5510  0014AE                     l4494:
  5511  0014AE  0E00               	movlw	0
  5512  0014B0  6E46               	movwf	___fladd@b^0,c
  5513  0014B2  0E00               	movlw	0
  5514  0014B4  6E47               	movwf	(___fladd@b+1)^0,c
  5515  0014B6  0E00               	movlw	0
  5516  0014B8  6E48               	movwf	(___fladd@b+2)^0,c
  5517  0014BA  0E00               	movlw	0
  5518  0014BC  6E49               	movwf	(___fladd@b+3)^0,c
  5519  0014BE                     l4496:
  5520  0014BE  504D               	movf	(___fladd@a+3)^0,w,c
  5521  0014C0  0B80               	andlw	128
  5522  0014C2  6E53               	movwf	___fladd@aexp^0,c
  5523  0014C4  5052               	movf	___fladd@signs^0,w,c
  5524  0014C6  1853               	xorwf	___fladd@aexp^0,w,c
  5525  0014C8  B4D8               	btfsc	status,2,c
  5526  0014CA  EF69  F00A         	goto	u5141
  5527  0014CE  EF6B  F00A         	goto	u5140
  5528  0014D2                     u5141:
  5529  0014D2  EF6C  F00A         	goto	l4502
  5530  0014D6                     u5140:
  5531  0014D6  8C52               	bsf	___fladd@signs^0,6,c
  5532  0014D8                     l4502:
  5533  0014D8  504D               	movf	(___fladd@a+3)^0,w,c
  5534  0014DA  244D               	addwf	(___fladd@a+3)^0,w,c
  5535  0014DC  6E53               	movwf	___fladd@aexp^0,c
  5536  0014DE  AE4C               	btfss	(___fladd@a+2)^0,7,c
  5537  0014E0  EF74  F00A         	goto	u5151
  5538  0014E4  EF76  F00A         	goto	u5150
  5539  0014E8                     u5151:
  5540  0014E8  EF77  F00A         	goto	l4508
  5541  0014EC                     u5150:
  5542  0014EC  8053               	bsf	___fladd@aexp^0,0,c
  5543  0014EE                     l4508:
  5544  0014EE  5053               	movf	___fladd@aexp^0,w,c
  5545  0014F0  B4D8               	btfsc	status,2,c
  5546  0014F2  EF7D  F00A         	goto	u5161
  5547  0014F6  EF7F  F00A         	goto	u5160
  5548  0014FA                     u5161:
  5549  0014FA  EF94  F00A         	goto	l4518
  5550  0014FE                     u5160:
  5551  0014FE  2853               	incf	___fladd@aexp^0,w,c
  5552  001500  A4D8               	btfss	status,2,c
  5553  001502  EF85  F00A         	goto	u5171
  5554  001506  EF87  F00A         	goto	u5170
  5555  00150A                     u5171:
  5556  00150A  EF8F  F00A         	goto	l4514
  5557  00150E                     u5170:
  5558  00150E  0E00               	movlw	0
  5559  001510  6E4A               	movwf	___fladd@a^0,c
  5560  001512  0E00               	movlw	0
  5561  001514  6E4B               	movwf	(___fladd@a+1)^0,c
  5562  001516  0E00               	movlw	0
  5563  001518  6E4C               	movwf	(___fladd@a+2)^0,c
  5564  00151A  0E00               	movlw	0
  5565  00151C  6E4D               	movwf	(___fladd@a+3)^0,c
  5566  00151E                     l4514:
  5567  00151E  8E4C               	bsf	(___fladd@a+2)^0,7,c
  5568  001520  0E00               	movlw	0
  5569  001522  6E4D               	movwf	(___fladd@a+3)^0,c
  5570  001524  EF9C  F00A         	goto	l4520
  5571  001528                     l4518:
  5572  001528  0E00               	movlw	0
  5573  00152A  6E4A               	movwf	___fladd@a^0,c
  5574  00152C  0E00               	movlw	0
  5575  00152E  6E4B               	movwf	(___fladd@a+1)^0,c
  5576  001530  0E00               	movlw	0
  5577  001532  6E4C               	movwf	(___fladd@a+2)^0,c
  5578  001534  0E00               	movlw	0
  5579  001536  6E4D               	movwf	(___fladd@a+3)^0,c
  5580  001538                     l4520:
  5581  001538  5054               	movf	___fladd@bexp^0,w,c
  5582  00153A  5C53               	subwf	___fladd@aexp^0,w,c
  5583  00153C  B0D8               	btfsc	status,0,c
  5584  00153E  EFA3  F00A         	goto	u5181
  5585  001542  EFA5  F00A         	goto	u5180
  5586  001546                     u5181:
  5587  001546  EFCC  F00A         	goto	l4556
  5588  00154A                     u5180:
  5589  00154A  AC52               	btfss	___fladd@signs^0,6,c
  5590  00154C  EFAA  F00A         	goto	u5191
  5591  001550  EFAC  F00A         	goto	u5190
  5592  001554                     u5191:
  5593  001554  EFAE  F00A         	goto	l4526
  5594  001558                     u5190:
  5595  001558  0E80               	movlw	128
  5596  00155A  1A52               	xorwf	___fladd@signs^0,f,c
  5597  00155C                     l4526:
  5598  00155C  C054  F055         	movff	___fladd@bexp,___fladd@grs
  5599  001560  C053  F054         	movff	___fladd@aexp,___fladd@bexp
  5600  001564  C055  F053         	movff	___fladd@grs,___fladd@aexp
  5601  001568  C046  F055         	movff	___fladd@b,___fladd@grs
  5602  00156C  C04A  F046         	movff	___fladd@a,___fladd@b
  5603  001570  C055  F04A         	movff	___fladd@grs,___fladd@a
  5604  001574  C047  F055         	movff	___fladd@b+1,___fladd@grs
  5605  001578  C04B  F047         	movff	___fladd@a+1,___fladd@b+1
  5606  00157C  C055  F04B         	movff	___fladd@grs,___fladd@a+1
  5607  001580  C048  F055         	movff	___fladd@b+2,___fladd@grs
  5608  001584  C04C  F048         	movff	___fladd@a+2,___fladd@b+2
  5609  001588  C055  F04C         	movff	___fladd@grs,___fladd@a+2
  5610  00158C  C049  F055         	movff	___fladd@b+3,___fladd@grs
  5611  001590  C04D  F049         	movff	___fladd@a+3,___fladd@b+3
  5612  001594  C055  F04D         	movff	___fladd@grs,___fladd@a+3
  5613  001598                     l4556:
  5614  001598  0E00               	movlw	0
  5615  00159A  6E55               	movwf	___fladd@grs^0,c
  5616  00159C  5054               	movf	___fladd@bexp^0,w,c
  5617  00159E  C053  F04E         	movff	___fladd@aexp,??___fladd
  5618  0015A2  6A4F               	clrf	(??___fladd+1)^0,c
  5619  0015A4  5E4E               	subwf	??___fladd^0,f,c
  5620  0015A6  0E00               	movlw	0
  5621  0015A8  5A4F               	subwfb	(??___fladd+1)^0,f,c
  5622  0015AA  BE4F               	btfsc	(??___fladd+1)^0,7,c
  5623  0015AC  EFE1  F00A         	goto	u5201
  5624  0015B0  504F               	movf	(??___fladd+1)^0,w,c
  5625  0015B2  E109               	bnz	u5200
  5626  0015B4  0E1A               	movlw	26
  5627  0015B6  5C4E               	subwf	??___fladd^0,w,c
  5628  0015B8  A0D8               	btfss	status,0,c
  5629  0015BA  EFE1  F00A         	goto	u5201
  5630  0015BE  EFE3  F00A         	goto	u5200
  5631  0015C2                     u5201:
  5632  0015C2  EF1A  F00B         	goto	l773
  5633  0015C6                     u5200:
  5634  0015C6  5046               	movf	___fladd@b^0,w,c
  5635  0015C8  1047               	iorwf	(___fladd@b+1)^0,w,c
  5636  0015CA  1048               	iorwf	(___fladd@b+2)^0,w,c
  5637  0015CC  1049               	iorwf	(___fladd@b+3)^0,w,c
  5638  0015CE  A4D8               	btfss	status,2,c
  5639  0015D0  EFEC  F00A         	goto	u5211
  5640  0015D4  EFEF  F00A         	goto	u5210
  5641  0015D8                     u5211:
  5642  0015D8  0E01               	movlw	1
  5643  0015DA  EFF0  F00A         	goto	u5220
  5644  0015DE                     u5210:
  5645  0015DE  0E00               	movlw	0
  5646  0015E0                     u5220:
  5647  0015E0  6E55               	movwf	___fladd@grs^0,c
  5648  0015E2  0E00               	movlw	0
  5649  0015E4  6E46               	movwf	___fladd@b^0,c
  5650  0015E6  0E00               	movlw	0
  5651  0015E8  6E47               	movwf	(___fladd@b+1)^0,c
  5652  0015EA  0E00               	movlw	0
  5653  0015EC  6E48               	movwf	(___fladd@b+2)^0,c
  5654  0015EE  0E00               	movlw	0
  5655  0015F0  6E49               	movwf	(___fladd@b+3)^0,c
  5656  0015F2  C053  F054         	movff	___fladd@aexp,___fladd@bexp
  5657  0015F6  EF23  F00B         	goto	l772
  5658  0015FA                     l774:
  5659  0015FA  A055               	btfss	___fladd@grs^0,0,c
  5660  0015FC  EF02  F00B         	goto	u5231
  5661  001600  EF04  F00B         	goto	u5230
  5662  001604                     u5231:
  5663  001604  EF0A  F00B         	goto	l4568
  5664  001608                     u5230:
  5665  001608  90D8               	bcf	status,0,c
  5666  00160A  3055               	rrcf	___fladd@grs^0,w,c
  5667  00160C  0901               	iorlw	1
  5668  00160E  6E55               	movwf	___fladd@grs^0,c
  5669  001610  EF0C  F00B         	goto	l4570
  5670  001614                     l4568:
  5671  001614  90D8               	bcf	status,0,c
  5672  001616  3255               	rrcf	___fladd@grs^0,f,c
  5673  001618                     l4570:
  5674  001618  A046               	btfss	___fladd@b^0,0,c
  5675  00161A  EF11  F00B         	goto	u5241
  5676  00161E  EF13  F00B         	goto	u5240
  5677  001622                     u5241:
  5678  001622  EF14  F00B         	goto	l4574
  5679  001626                     u5240:
  5680  001626  8E55               	bsf	___fladd@grs^0,7,c
  5681  001628                     l4574:
  5682  001628  3449               	rlcf	(___fladd@b+3)^0,w,c
  5683  00162A  3249               	rrcf	(___fladd@b+3)^0,f,c
  5684  00162C  3248               	rrcf	(___fladd@b+2)^0,f,c
  5685  00162E  3247               	rrcf	(___fladd@b+1)^0,f,c
  5686  001630  3246               	rrcf	___fladd@b^0,f,c
  5687  001632  2A54               	incf	___fladd@bexp^0,f,c
  5688  001634                     l773:
  5689  001634  5053               	movf	___fladd@aexp^0,w,c
  5690  001636  5C54               	subwf	___fladd@bexp^0,w,c
  5691  001638  A0D8               	btfss	status,0,c
  5692  00163A  EF21  F00B         	goto	u5251
  5693  00163E  EF23  F00B         	goto	u5250
  5694  001642                     u5251:
  5695  001642  EFFD  F00A         	goto	l774
  5696  001646                     u5250:
  5697  001646                     l772:
  5698  001646  BC52               	btfsc	___fladd@signs^0,6,c
  5699  001648  EF28  F00B         	goto	u5261
  5700  00164C  EF2A  F00B         	goto	u5260
  5701  001650                     u5261:
  5702  001650  EF6A  F00B         	goto	l4602
  5703  001654                     u5260:
  5704  001654  5054               	movf	___fladd@bexp^0,w,c
  5705  001656  A4D8               	btfss	status,2,c
  5706  001658  EF30  F00B         	goto	u5271
  5707  00165C  EF32  F00B         	goto	u5270
  5708  001660                     u5271:
  5709  001660  EF3C  F00B         	goto	l4584
  5710  001664                     u5270:
  5711  001664  0E00               	movlw	0
  5712  001666  6E46               	movwf	?___fladd^0,c
  5713  001668  0E00               	movlw	0
  5714  00166A  6E47               	movwf	(?___fladd+1)^0,c
  5715  00166C  0E00               	movlw	0
  5716  00166E  6E48               	movwf	(?___fladd+2)^0,c
  5717  001670  0E00               	movlw	0
  5718  001672  6E49               	movwf	(?___fladd+3)^0,c
  5719  001674  EF8B  F00C         	goto	l781
  5720  001678                     l4584:
  5721  001678  504A               	movf	___fladd@a^0,w,c
  5722  00167A  2646               	addwf	___fladd@b^0,f,c
  5723  00167C  504B               	movf	(___fladd@a+1)^0,w,c
  5724  00167E  2247               	addwfc	(___fladd@b+1)^0,f,c
  5725  001680  504C               	movf	(___fladd@a+2)^0,w,c
  5726  001682  2248               	addwfc	(___fladd@b+2)^0,f,c
  5727  001684  504D               	movf	(___fladd@a+3)^0,w,c
  5728  001686  2249               	addwfc	(___fladd@b+3)^0,f,c
  5729  001688  A049               	btfss	(___fladd@b+3)^0,0,c
  5730  00168A  EF49  F00B         	goto	u5281
  5731  00168E  EF4B  F00B         	goto	u5280
  5732  001692                     u5281:
  5733  001692  EFF7  F00B         	goto	l4638
  5734  001696                     u5280:
  5735  001696  A055               	btfss	___fladd@grs^0,0,c
  5736  001698  EF50  F00B         	goto	u5291
  5737  00169C  EF52  F00B         	goto	u5290
  5738  0016A0                     u5291:
  5739  0016A0  EF58  F00B         	goto	l4592
  5740  0016A4                     u5290:
  5741  0016A4  90D8               	bcf	status,0,c
  5742  0016A6  3055               	rrcf	___fladd@grs^0,w,c
  5743  0016A8  0901               	iorlw	1
  5744  0016AA  6E55               	movwf	___fladd@grs^0,c
  5745  0016AC  EF5A  F00B         	goto	l4594
  5746  0016B0                     l4592:
  5747  0016B0  90D8               	bcf	status,0,c
  5748  0016B2  3255               	rrcf	___fladd@grs^0,f,c
  5749  0016B4                     l4594:
  5750  0016B4  A046               	btfss	___fladd@b^0,0,c
  5751  0016B6  EF5F  F00B         	goto	u5301
  5752  0016BA  EF61  F00B         	goto	u5300
  5753  0016BE                     u5301:
  5754  0016BE  EF62  F00B         	goto	l4598
  5755  0016C2                     u5300:
  5756  0016C2  8E55               	bsf	___fladd@grs^0,7,c
  5757  0016C4                     l4598:
  5758  0016C4  3449               	rlcf	(___fladd@b+3)^0,w,c
  5759  0016C6  3249               	rrcf	(___fladd@b+3)^0,f,c
  5760  0016C8  3248               	rrcf	(___fladd@b+2)^0,f,c
  5761  0016CA  3247               	rrcf	(___fladd@b+1)^0,f,c
  5762  0016CC  3246               	rrcf	___fladd@b^0,f,c
  5763  0016CE  2A54               	incf	___fladd@bexp^0,f,c
  5764  0016D0  EFF7  F00B         	goto	l4638
  5765  0016D4                     l4602:
  5766  0016D4  504A               	movf	___fladd@a^0,w,c
  5767  0016D6  5C46               	subwf	___fladd@b^0,w,c
  5768  0016D8  504B               	movf	(___fladd@a+1)^0,w,c
  5769  0016DA  5847               	subwfb	(___fladd@b+1)^0,w,c
  5770  0016DC  504C               	movf	(___fladd@a+2)^0,w,c
  5771  0016DE  5848               	subwfb	(___fladd@b+2)^0,w,c
  5772  0016E0  5049               	movf	(___fladd@b+3)^0,w,c
  5773  0016E2  0A80               	xorlw	128
  5774  0016E4  6E4E               	movwf	??___fladd^0,c
  5775  0016E6  504D               	movf	(___fladd@a+3)^0,w,c
  5776  0016E8  0A80               	xorlw	128
  5777  0016EA  584E               	subwfb	??___fladd^0,w,c
  5778  0016EC  B0D8               	btfsc	status,0,c
  5779  0016EE  EF7B  F00B         	goto	u5311
  5780  0016F2  EF7D  F00B         	goto	u5310
  5781  0016F6                     u5311:
  5782  0016F6  EFA8  F00B         	goto	l4612
  5783  0016FA                     u5310:
  5784  0016FA  5046               	movf	___fladd@b^0,w,c
  5785  0016FC  5C4A               	subwf	___fladd@a^0,w,c
  5786  0016FE  6E4E               	movwf	??___fladd^0,c
  5787  001700  5047               	movf	(___fladd@b+1)^0,w,c
  5788  001702  584B               	subwfb	(___fladd@a+1)^0,w,c
  5789  001704  6E4F               	movwf	(??___fladd+1)^0,c
  5790  001706  5048               	movf	(___fladd@b+2)^0,w,c
  5791  001708  584C               	subwfb	(___fladd@a+2)^0,w,c
  5792  00170A  6E50               	movwf	(??___fladd+2)^0,c
  5793  00170C  5049               	movf	(___fladd@b+3)^0,w,c
  5794  00170E  584D               	subwfb	(___fladd@a+3)^0,w,c
  5795  001710  6E51               	movwf	(??___fladd+3)^0,c
  5796  001712  0EFF               	movlw	255
  5797  001714  244E               	addwf	??___fladd^0,w,c
  5798  001716  6E46               	movwf	___fladd@b^0,c
  5799  001718  0EFF               	movlw	255
  5800  00171A  204F               	addwfc	(??___fladd+1)^0,w,c
  5801  00171C  6E47               	movwf	(___fladd@b+1)^0,c
  5802  00171E  0EFF               	movlw	255
  5803  001720  2050               	addwfc	(??___fladd+2)^0,w,c
  5804  001722  6E48               	movwf	(___fladd@b+2)^0,c
  5805  001724  0EFF               	movlw	255
  5806  001726  2051               	addwfc	(??___fladd+3)^0,w,c
  5807  001728  6E49               	movwf	(___fladd@b+3)^0,c
  5808  00172A  0E80               	movlw	128
  5809  00172C  1A52               	xorwf	___fladd@signs^0,f,c
  5810  00172E  6C55               	negf	___fladd@grs^0,c
  5811  001730  5055               	movf	___fladd@grs^0,w,c
  5812  001732  A4D8               	btfss	status,2,c
  5813  001734  EF9E  F00B         	goto	u5321
  5814  001738  EFA0  F00B         	goto	u5320
  5815  00173C                     u5321:
  5816  00173C  EFB0  F00B         	goto	l789
  5817  001740                     u5320:
  5818  001740  0E01               	movlw	1
  5819  001742  2646               	addwf	___fladd@b^0,f,c
  5820  001744  0E00               	movlw	0
  5821  001746  2247               	addwfc	(___fladd@b+1)^0,f,c
  5822  001748  2248               	addwfc	(___fladd@b+2)^0,f,c
  5823  00174A  2249               	addwfc	(___fladd@b+3)^0,f,c
  5824  00174C  EFB0  F00B         	goto	l789
  5825  001750                     l4612:
  5826  001750  504A               	movf	___fladd@a^0,w,c
  5827  001752  5E46               	subwf	___fladd@b^0,f,c
  5828  001754  504B               	movf	(___fladd@a+1)^0,w,c
  5829  001756  5A47               	subwfb	(___fladd@b+1)^0,f,c
  5830  001758  504C               	movf	(___fladd@a+2)^0,w,c
  5831  00175A  5A48               	subwfb	(___fladd@b+2)^0,f,c
  5832  00175C  504D               	movf	(___fladd@a+3)^0,w,c
  5833  00175E  5A49               	subwfb	(___fladd@b+3)^0,f,c
  5834  001760                     l789:
  5835  001760  5046               	movf	___fladd@b^0,w,c
  5836  001762  1047               	iorwf	(___fladd@b+1)^0,w,c
  5837  001764  1048               	iorwf	(___fladd@b+2)^0,w,c
  5838  001766  1049               	iorwf	(___fladd@b+3)^0,w,c
  5839  001768  A4D8               	btfss	status,2,c
  5840  00176A  EFB9  F00B         	goto	u5331
  5841  00176E  EFBB  F00B         	goto	u5330
  5842  001772                     u5331:
  5843  001772  EFF0  F00B         	goto	l4636
  5844  001776                     u5330:
  5845  001776  5055               	movf	___fladd@grs^0,w,c
  5846  001778  A4D8               	btfss	status,2,c
  5847  00177A  EFC1  F00B         	goto	u5341
  5848  00177E  EFC3  F00B         	goto	u5340
  5849  001782                     u5341:
  5850  001782  EFF0  F00B         	goto	l4636
  5851  001786                     u5340:
  5852  001786  0E00               	movlw	0
  5853  001788  6E46               	movwf	?___fladd^0,c
  5854  00178A  0E00               	movlw	0
  5855  00178C  6E47               	movwf	(?___fladd+1)^0,c
  5856  00178E  0E00               	movlw	0
  5857  001790  6E48               	movwf	(?___fladd+2)^0,c
  5858  001792  0E00               	movlw	0
  5859  001794  6E49               	movwf	(?___fladd+3)^0,c
  5860  001796  EF8B  F00C         	goto	l781
  5861  00179A                     l4620:
  5862  00179A  90D8               	bcf	status,0,c
  5863  00179C  3646               	rlcf	___fladd@b^0,f,c
  5864  00179E  3647               	rlcf	(___fladd@b+1)^0,f,c
  5865  0017A0  3648               	rlcf	(___fladd@b+2)^0,f,c
  5866  0017A2  3649               	rlcf	(___fladd@b+3)^0,f,c
  5867  0017A4  AE55               	btfss	___fladd@grs^0,7,c
  5868  0017A6  EFD7  F00B         	goto	u5351
  5869  0017AA  EFD9  F00B         	goto	u5350
  5870  0017AE                     u5351:
  5871  0017AE  EFDA  F00B         	goto	l4626
  5872  0017B2                     u5350:
  5873  0017B2  8046               	bsf	___fladd@b^0,0,c
  5874  0017B4                     l4626:
  5875  0017B4  A055               	btfss	___fladd@grs^0,0,c
  5876  0017B6  EFDF  F00B         	goto	u5361
  5877  0017BA  EFE1  F00B         	goto	u5360
  5878  0017BE                     u5361:
  5879  0017BE  EFE5  F00B         	goto	l4630
  5880  0017C2                     u5360:
  5881  0017C2  80D8               	bsf	status,0,c
  5882  0017C4  3655               	rlcf	___fladd@grs^0,f,c
  5883  0017C6  EFE7  F00B         	goto	l4632
  5884  0017CA                     l4630:
  5885  0017CA  90D8               	bcf	status,0,c
  5886  0017CC  3655               	rlcf	___fladd@grs^0,f,c
  5887  0017CE                     l4632:
  5888  0017CE  5054               	movf	___fladd@bexp^0,w,c
  5889  0017D0  B4D8               	btfsc	status,2,c
  5890  0017D2  EFED  F00B         	goto	u5371
  5891  0017D6  EFEF  F00B         	goto	u5370
  5892  0017DA                     u5371:
  5893  0017DA  EFF0  F00B         	goto	l4636
  5894  0017DE                     u5370:
  5895  0017DE  0654               	decf	___fladd@bexp^0,f,c
  5896  0017E0                     l4636:
  5897  0017E0  AE48               	btfss	(___fladd@b+2)^0,7,c
  5898  0017E2  EFF5  F00B         	goto	u5381
  5899  0017E6  EFF7  F00B         	goto	u5380
  5900  0017EA                     u5381:
  5901  0017EA  EFCD  F00B         	goto	l4620
  5902  0017EE                     u5380:
  5903  0017EE                     l4638:
  5904  0017EE  0E00               	movlw	0
  5905  0017F0  6E53               	movwf	___fladd@aexp^0,c
  5906  0017F2  AE55               	btfss	___fladd@grs^0,7,c
  5907  0017F4  EFFE  F00B         	goto	u5391
  5908  0017F8  EF00  F00C         	goto	u5390
  5909  0017FC                     u5391:
  5910  0017FC  EF18  F00C         	goto	l798
  5911  001800                     u5390:
  5912  001800  C055  F04E         	movff	___fladd@grs,??___fladd
  5913  001804  0E7F               	movlw	127
  5914  001806  164E               	andwf	??___fladd^0,f,c
  5915  001808  B4D8               	btfsc	status,2,c
  5916  00180A  EF09  F00C         	goto	u5401
  5917  00180E  EF0B  F00C         	goto	u5400
  5918  001812                     u5401:
  5919  001812  EF0F  F00C         	goto	l799
  5920  001816                     u5400:
  5921  001816                     l4644:
  5922  001816  0E01               	movlw	1
  5923  001818  6E53               	movwf	___fladd@aexp^0,c
  5924  00181A  EF18  F00C         	goto	l798
  5925  00181E                     l799:
  5926  00181E  A046               	btfss	___fladd@b^0,0,c
  5927  001820  EF14  F00C         	goto	u5411
  5928  001824  EF16  F00C         	goto	u5410
  5929  001828                     u5411:
  5930  001828  EF18  F00C         	goto	l798
  5931  00182C                     u5410:
  5932  00182C  EF0B  F00C         	goto	l4644
  5933  001830                     l798:
  5934  001830  5053               	movf	___fladd@aexp^0,w,c
  5935  001832  B4D8               	btfsc	status,2,c
  5936  001834  EF1E  F00C         	goto	u5421
  5937  001838  EF20  F00C         	goto	u5420
  5938  00183C                     u5421:
  5939  00183C  EF4B  F00C         	goto	l4656
  5940  001840                     u5420:
  5941  001840  0E01               	movlw	1
  5942  001842  2646               	addwf	___fladd@b^0,f,c
  5943  001844  0E00               	movlw	0
  5944  001846  2247               	addwfc	(___fladd@b+1)^0,f,c
  5945  001848  2248               	addwfc	(___fladd@b+2)^0,f,c
  5946  00184A  2249               	addwfc	(___fladd@b+3)^0,f,c
  5947  00184C  A049               	btfss	(___fladd@b+3)^0,0,c
  5948  00184E  EF2B  F00C         	goto	u5431
  5949  001852  EF2D  F00C         	goto	u5430
  5950  001856                     u5431:
  5951  001856  EF4B  F00C         	goto	l4656
  5952  00185A                     u5430:
  5953  00185A  C046  F04E         	movff	___fladd@b,??___fladd
  5954  00185E  C047  F04F         	movff	___fladd@b+1,??___fladd+1
  5955  001862  C048  F050         	movff	___fladd@b+2,??___fladd+2
  5956  001866  C049  F051         	movff	___fladd@b+3,??___fladd+3
  5957  00186A  3451               	rlcf	(??___fladd+3)^0,w,c
  5958  00186C  3251               	rrcf	(??___fladd+3)^0,f,c
  5959  00186E  3250               	rrcf	(??___fladd+2)^0,f,c
  5960  001870  324F               	rrcf	(??___fladd+1)^0,f,c
  5961  001872  324E               	rrcf	??___fladd^0,f,c
  5962  001874  C04E  F046         	movff	??___fladd,___fladd@b
  5963  001878  C04F  F047         	movff	??___fladd+1,___fladd@b+1
  5964  00187C  C050  F048         	movff	??___fladd+2,___fladd@b+2
  5965  001880  C051  F049         	movff	??___fladd+3,___fladd@b+3
  5966  001884  2854               	incf	___fladd@bexp^0,w,c
  5967  001886  B4D8               	btfsc	status,2,c
  5968  001888  EF48  F00C         	goto	u5441
  5969  00188C  EF4A  F00C         	goto	u5440
  5970  001890                     u5441:
  5971  001890  EF4B  F00C         	goto	l4656
  5972  001894                     u5440:
  5973  001894  2A54               	incf	___fladd@bexp^0,f,c
  5974  001896                     l4656:
  5975  001896  2854               	incf	___fladd@bexp^0,w,c
  5976  001898  B4D8               	btfsc	status,2,c
  5977  00189A  EF51  F00C         	goto	u5451
  5978  00189E  EF53  F00C         	goto	u5450
  5979  0018A2                     u5451:
  5980  0018A2  EF5B  F00C         	goto	l4660
  5981  0018A6                     u5450:
  5982  0018A6  5054               	movf	___fladd@bexp^0,w,c
  5983  0018A8  A4D8               	btfss	status,2,c
  5984  0018AA  EF59  F00C         	goto	u5461
  5985  0018AE  EF5B  F00C         	goto	u5460
  5986  0018B2                     u5461:
  5987  0018B2  EF6D  F00C         	goto	l4664
  5988  0018B6                     u5460:
  5989  0018B6                     l4660:
  5990  0018B6  0E00               	movlw	0
  5991  0018B8  6E46               	movwf	___fladd@b^0,c
  5992  0018BA  0E00               	movlw	0
  5993  0018BC  6E47               	movwf	(___fladd@b+1)^0,c
  5994  0018BE  0E00               	movlw	0
  5995  0018C0  6E48               	movwf	(___fladd@b+2)^0,c
  5996  0018C2  0E00               	movlw	0
  5997  0018C4  6E49               	movwf	(___fladd@b+3)^0,c
  5998  0018C6  5054               	movf	___fladd@bexp^0,w,c
  5999  0018C8  A4D8               	btfss	status,2,c
  6000  0018CA  EF69  F00C         	goto	u5471
  6001  0018CE  EF6B  F00C         	goto	u5470
  6002  0018D2                     u5471:
  6003  0018D2  EF6D  F00C         	goto	l4664
  6004  0018D6                     u5470:
  6005  0018D6  0E00               	movlw	0
  6006  0018D8  6E52               	movwf	___fladd@signs^0,c
  6007  0018DA                     l4664:
  6008  0018DA  A054               	btfss	___fladd@bexp^0,0,c
  6009  0018DC  EF72  F00C         	goto	u5481
  6010  0018E0  EF74  F00C         	goto	u5480
  6011  0018E4                     u5481:
  6012  0018E4  EF77  F00C         	goto	l4668
  6013  0018E8                     u5480:
  6014  0018E8  8E48               	bsf	(___fladd@b+2)^0,7,c
  6015  0018EA  EF78  F00C         	goto	l4670
  6016  0018EE                     l4668:
  6017  0018EE  9E48               	bcf	(___fladd@b+2)^0,7,c
  6018  0018F0                     l4670:
  6019  0018F0  90D8               	bcf	status,0,c
  6020  0018F2  3054               	rrcf	___fladd@bexp^0,w,c
  6021  0018F4  6E49               	movwf	(___fladd@b+3)^0,c
  6022  0018F6  AE52               	btfss	___fladd@signs^0,7,c
  6023  0018F8  EF80  F00C         	goto	u5491
  6024  0018FC  EF82  F00C         	goto	u5490
  6025  001900                     u5491:
  6026  001900  EF83  F00C         	goto	l4676
  6027  001904                     u5490:
  6028  001904  8E49               	bsf	(___fladd@b+3)^0,7,c
  6029  001906                     l4676:
  6030  001906  C046  F046         	movff	___fladd@b,?___fladd
  6031  00190A  C047  F047         	movff	___fladd@b+1,?___fladd+1
  6032  00190E  C048  F048         	movff	___fladd@b+2,?___fladd+2
  6033  001912  C049  F049         	movff	___fladd@b+3,?___fladd+3
  6034  001916                     l781:
  6035  001916  0012               	return		;funcret
  6036  001918                     __end_of___fladd:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function ___flneg *****************
  6040 ;; Defined at:
  6041 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flneg.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;  f1              4    5[COMRAM] unsigned char 
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  4    5[COMRAM] unsigned char 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2, status,0
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6055 ;;      Params:         4       0       0       0       0       0       0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6058 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6059 ;;Total ram usage:        4 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 2
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_efgtoa
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text19
  6070  003AFA                     __ptext19:
  6071                           	callstack 0
  6072  003AFA                     ___flneg:
  6073                           	callstack 24
  6074  003AFA  5006               	movf	___flneg@f1^0,w,c
  6075  003AFC  1007               	iorwf	(___flneg@f1+1)^0,w,c
  6076  003AFE  1008               	iorwf	(___flneg@f1+2)^0,w,c
  6077  003B00  1009               	iorwf	(___flneg@f1+3)^0,w,c
  6078  003B02  B4D8               	btfsc	status,2,c
  6079  003B04  EF86  F01D         	goto	u6161
  6080  003B08  EF88  F01D         	goto	u6160
  6081  003B0C                     u6161:
  6082  003B0C  EF90  F01D         	goto	l5104
  6083  003B10                     u6160:
  6084  003B10  0E00               	movlw	0
  6085  003B12  1A06               	xorwf	___flneg@f1^0,f,c
  6086  003B14  0E00               	movlw	0
  6087  003B16  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  6088  003B18  0E00               	movlw	0
  6089  003B1A  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  6090  003B1C  0E80               	movlw	128
  6091  003B1E  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  6092  003B20                     l5104:
  6093  003B20  C006  F006         	movff	___flneg@f1,?___flneg
  6094  003B24  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  6095  003B28  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  6096  003B2C  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  6097  003B30  0012               	return		;funcret
  6098  003B32                     __end_of___flneg:
  6099                           	callstack 0
  6100                           
  6101 ;; *************** function ___flmul *****************
  6102 ;; Defined at:
  6103 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcmul.c"
  6104 ;; Parameters:    Size  Location     Type
  6105 ;;  b               4   19[COMRAM] unsigned char 
  6106 ;;  a               4   23[COMRAM] unsigned char 
  6107 ;; Auto vars:     Size  Location     Type
  6108 ;;  prod            4   38[COMRAM] struct .
  6109 ;;  grs             4   33[COMRAM] unsigned long 
  6110 ;;  temp            2   42[COMRAM] struct .
  6111 ;;  bexp            1   37[COMRAM] unsigned char 
  6112 ;;  aexp            1   32[COMRAM] unsigned char 
  6113 ;;  sign            1   31[COMRAM] unsigned char 
  6114 ;; Return value:  Size  Location     Type
  6115 ;;                  4   19[COMRAM] unsigned char 
  6116 ;; Registers used:
  6117 ;;		wreg, status,2, status,0, prodl, prodh
  6118 ;; Tracked objects:
  6119 ;;		On entry : 0/0
  6120 ;;		On exit  : 0/0
  6121 ;;		Unchanged: 0/0
  6122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6123 ;;      Params:         8       0       0       0       0       0       0       0       0
  6124 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6125 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6126 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6127 ;;Total ram usage:       25 bytes
  6128 ;; Hardware stack levels used: 1
  6129 ;; Hardware stack levels required when called: 2
  6130 ;; This function calls:
  6131 ;;		Nothing
  6132 ;; This function is called by:
  6133 ;;		_main
  6134 ;;		_efgtoa
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           
  6138                           	psect	text20
  6139  001D52                     __ptext20:
  6140                           	callstack 0
  6141  001D52                     ___flmul:
  6142                           	callstack 24
  6143  001D52  5017               	movf	(___flmul@b+3)^0,w,c
  6144  001D54  0B80               	andlw	128
  6145  001D56  6E20               	movwf	___flmul@sign^0,c
  6146  001D58  5017               	movf	(___flmul@b+3)^0,w,c
  6147  001D5A  2417               	addwf	(___flmul@b+3)^0,w,c
  6148  001D5C  6E26               	movwf	___flmul@bexp^0,c
  6149  001D5E  AE16               	btfss	(___flmul@b+2)^0,7,c
  6150  001D60  EFB4  F00E         	goto	u5771
  6151  001D64  EFB6  F00E         	goto	u5770
  6152  001D68                     u5771:
  6153  001D68  EFB7  F00E         	goto	l4852
  6154  001D6C                     u5770:
  6155  001D6C  8026               	bsf	___flmul@bexp^0,0,c
  6156  001D6E                     l4852:
  6157  001D6E  5026               	movf	___flmul@bexp^0,w,c
  6158  001D70  B4D8               	btfsc	status,2,c
  6159  001D72  EFBD  F00E         	goto	u5781
  6160  001D76  EFBF  F00E         	goto	u5780
  6161  001D7A                     u5781:
  6162  001D7A  EFD2  F00E         	goto	l4860
  6163  001D7E                     u5780:
  6164  001D7E  2826               	incf	___flmul@bexp^0,w,c
  6165  001D80  A4D8               	btfss	status,2,c
  6166  001D82  EFC5  F00E         	goto	u5791
  6167  001D86  EFC7  F00E         	goto	u5790
  6168  001D8A                     u5791:
  6169  001D8A  EFCF  F00E         	goto	l4858
  6170  001D8E                     u5790:
  6171  001D8E  0E00               	movlw	0
  6172  001D90  6E14               	movwf	___flmul@b^0,c
  6173  001D92  0E00               	movlw	0
  6174  001D94  6E15               	movwf	(___flmul@b+1)^0,c
  6175  001D96  0E00               	movlw	0
  6176  001D98  6E16               	movwf	(___flmul@b+2)^0,c
  6177  001D9A  0E00               	movlw	0
  6178  001D9C  6E17               	movwf	(___flmul@b+3)^0,c
  6179  001D9E                     l4858:
  6180  001D9E  8E16               	bsf	(___flmul@b+2)^0,7,c
  6181  001DA0  EFDA  F00E         	goto	l4862
  6182  001DA4                     l4860:
  6183  001DA4  0E00               	movlw	0
  6184  001DA6  6E14               	movwf	___flmul@b^0,c
  6185  001DA8  0E00               	movlw	0
  6186  001DAA  6E15               	movwf	(___flmul@b+1)^0,c
  6187  001DAC  0E00               	movlw	0
  6188  001DAE  6E16               	movwf	(___flmul@b+2)^0,c
  6189  001DB0  0E00               	movlw	0
  6190  001DB2  6E17               	movwf	(___flmul@b+3)^0,c
  6191  001DB4                     l4862:
  6192  001DB4  501B               	movf	(___flmul@a+3)^0,w,c
  6193  001DB6  0B80               	andlw	128
  6194  001DB8  1A20               	xorwf	___flmul@sign^0,f,c
  6195  001DBA  501B               	movf	(___flmul@a+3)^0,w,c
  6196  001DBC  241B               	addwf	(___flmul@a+3)^0,w,c
  6197  001DBE  6E21               	movwf	___flmul@aexp^0,c
  6198  001DC0  AE1A               	btfss	(___flmul@a+2)^0,7,c
  6199  001DC2  EFE5  F00E         	goto	u5801
  6200  001DC6  EFE7  F00E         	goto	u5800
  6201  001DCA                     u5801:
  6202  001DCA  EFE8  F00E         	goto	l4870
  6203  001DCE                     u5800:
  6204  001DCE  8021               	bsf	___flmul@aexp^0,0,c
  6205  001DD0                     l4870:
  6206  001DD0  5021               	movf	___flmul@aexp^0,w,c
  6207  001DD2  B4D8               	btfsc	status,2,c
  6208  001DD4  EFEE  F00E         	goto	u5811
  6209  001DD8  EFF0  F00E         	goto	u5810
  6210  001DDC                     u5811:
  6211  001DDC  EF03  F00F         	goto	l4878
  6212  001DE0                     u5810:
  6213  001DE0  2821               	incf	___flmul@aexp^0,w,c
  6214  001DE2  A4D8               	btfss	status,2,c
  6215  001DE4  EFF6  F00E         	goto	u5821
  6216  001DE8  EFF8  F00E         	goto	u5820
  6217  001DEC                     u5821:
  6218  001DEC  EF00  F00F         	goto	l4876
  6219  001DF0                     u5820:
  6220  001DF0  0E00               	movlw	0
  6221  001DF2  6E18               	movwf	___flmul@a^0,c
  6222  001DF4  0E00               	movlw	0
  6223  001DF6  6E19               	movwf	(___flmul@a+1)^0,c
  6224  001DF8  0E00               	movlw	0
  6225  001DFA  6E1A               	movwf	(___flmul@a+2)^0,c
  6226  001DFC  0E00               	movlw	0
  6227  001DFE  6E1B               	movwf	(___flmul@a+3)^0,c
  6228  001E00                     l4876:
  6229  001E00  8E1A               	bsf	(___flmul@a+2)^0,7,c
  6230  001E02  EF0B  F00F         	goto	l858
  6231  001E06                     l4878:
  6232  001E06  0E00               	movlw	0
  6233  001E08  6E18               	movwf	___flmul@a^0,c
  6234  001E0A  0E00               	movlw	0
  6235  001E0C  6E19               	movwf	(___flmul@a+1)^0,c
  6236  001E0E  0E00               	movlw	0
  6237  001E10  6E1A               	movwf	(___flmul@a+2)^0,c
  6238  001E12  0E00               	movlw	0
  6239  001E14  6E1B               	movwf	(___flmul@a+3)^0,c
  6240  001E16                     l858:
  6241  001E16  5021               	movf	___flmul@aexp^0,w,c
  6242  001E18  B4D8               	btfsc	status,2,c
  6243  001E1A  EF11  F00F         	goto	u5831
  6244  001E1E  EF13  F00F         	goto	u5830
  6245  001E22                     u5831:
  6246  001E22  EF1B  F00F         	goto	l4882
  6247  001E26                     u5830:
  6248  001E26  5026               	movf	___flmul@bexp^0,w,c
  6249  001E28  A4D8               	btfss	status,2,c
  6250  001E2A  EF19  F00F         	goto	u5841
  6251  001E2E  EF1B  F00F         	goto	u5840
  6252  001E32                     u5841:
  6253  001E32  EF25  F00F         	goto	l4886
  6254  001E36                     u5840:
  6255  001E36                     l4882:
  6256  001E36  0E00               	movlw	0
  6257  001E38  6E14               	movwf	?___flmul^0,c
  6258  001E3A  0E00               	movlw	0
  6259  001E3C  6E15               	movwf	(?___flmul+1)^0,c
  6260  001E3E  0E00               	movlw	0
  6261  001E40  6E16               	movwf	(?___flmul+2)^0,c
  6262  001E42  0E00               	movlw	0
  6263  001E44  6E17               	movwf	(?___flmul+3)^0,c
  6264  001E46  EFBD  F010         	goto	l862
  6265  001E4A                     l4886:
  6266  001E4A  501A               	movf	(___flmul@a+2)^0,w,c
  6267  001E4C  0214               	mulwf	___flmul@b^0,c
  6268  001E4E  CFF3 F02B          	movff	prodl,___flmul@temp
  6269  001E52  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6270  001E56  502B               	movf	___flmul@temp^0,w,c
  6271  001E58  6E22               	movwf	___flmul@grs^0,c
  6272  001E5A  6A23               	clrf	(___flmul@grs+1)^0,c
  6273  001E5C  6A24               	clrf	(___flmul@grs+2)^0,c
  6274  001E5E  6A25               	clrf	(___flmul@grs+3)^0,c
  6275  001E60  502C               	movf	(___flmul@temp+1)^0,w,c
  6276  001E62  6E27               	movwf	___flmul@prod^0,c
  6277  001E64  6A28               	clrf	(___flmul@prod+1)^0,c
  6278  001E66  6A29               	clrf	(___flmul@prod+2)^0,c
  6279  001E68  6A2A               	clrf	(___flmul@prod+3)^0,c
  6280  001E6A  5019               	movf	(___flmul@a+1)^0,w,c
  6281  001E6C  0215               	mulwf	(___flmul@b+1)^0,c
  6282  001E6E  CFF3 F02B          	movff	prodl,___flmul@temp
  6283  001E72  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6284  001E76  502B               	movf	___flmul@temp^0,w,c
  6285  001E78  2622               	addwf	___flmul@grs^0,f,c
  6286  001E7A  0E00               	movlw	0
  6287  001E7C  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6288  001E7E  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6289  001E80  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6290  001E82  502C               	movf	(___flmul@temp+1)^0,w,c
  6291  001E84  2627               	addwf	___flmul@prod^0,f,c
  6292  001E86  0E00               	movlw	0
  6293  001E88  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6294  001E8A  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6295  001E8C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6296  001E8E  5018               	movf	___flmul@a^0,w,c
  6297  001E90  0216               	mulwf	(___flmul@b+2)^0,c
  6298  001E92  CFF3 F02B          	movff	prodl,___flmul@temp
  6299  001E96  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6300  001E9A  502B               	movf	___flmul@temp^0,w,c
  6301  001E9C  2622               	addwf	___flmul@grs^0,f,c
  6302  001E9E  0E00               	movlw	0
  6303  001EA0  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6304  001EA2  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6305  001EA4  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6306  001EA6  502C               	movf	(___flmul@temp+1)^0,w,c
  6307  001EA8  2627               	addwf	___flmul@prod^0,f,c
  6308  001EAA  0E00               	movlw	0
  6309  001EAC  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6310  001EAE  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6311  001EB0  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6312  001EB2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6313  001EB6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6314  001EBA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6315  001EBE  6A22               	clrf	___flmul@grs^0,c
  6316  001EC0  5018               	movf	___flmul@a^0,w,c
  6317  001EC2  0215               	mulwf	(___flmul@b+1)^0,c
  6318  001EC4  CFF3 F02B          	movff	prodl,___flmul@temp
  6319  001EC8  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6320  001ECC  502B               	movf	___flmul@temp^0,w,c
  6321  001ECE  2622               	addwf	___flmul@grs^0,f,c
  6322  001ED0  502C               	movf	(___flmul@temp+1)^0,w,c
  6323  001ED2  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6324  001ED4  0E00               	movlw	0
  6325  001ED6  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6326  001ED8  0E00               	movlw	0
  6327  001EDA  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6328  001EDC  5019               	movf	(___flmul@a+1)^0,w,c
  6329  001EDE  0214               	mulwf	___flmul@b^0,c
  6330  001EE0  CFF3 F02B          	movff	prodl,___flmul@temp
  6331  001EE4  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6332  001EE8  502B               	movf	___flmul@temp^0,w,c
  6333  001EEA  2622               	addwf	___flmul@grs^0,f,c
  6334  001EEC  502C               	movf	(___flmul@temp+1)^0,w,c
  6335  001EEE  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6336  001EF0  0E00               	movlw	0
  6337  001EF2  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6338  001EF4  0E00               	movlw	0
  6339  001EF6  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6340  001EF8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6341  001EFC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6342  001F00  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6343  001F04  6A22               	clrf	___flmul@grs^0,c
  6344  001F06  5018               	movf	___flmul@a^0,w,c
  6345  001F08  0214               	mulwf	___flmul@b^0,c
  6346  001F0A  CFF3 F02B          	movff	prodl,___flmul@temp
  6347  001F0E  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6348  001F12  502B               	movf	___flmul@temp^0,w,c
  6349  001F14  2622               	addwf	___flmul@grs^0,f,c
  6350  001F16  502C               	movf	(___flmul@temp+1)^0,w,c
  6351  001F18  2223               	addwfc	(___flmul@grs+1)^0,f,c
  6352  001F1A  0E00               	movlw	0
  6353  001F1C  2224               	addwfc	(___flmul@grs+2)^0,f,c
  6354  001F1E  0E00               	movlw	0
  6355  001F20  2225               	addwfc	(___flmul@grs+3)^0,f,c
  6356  001F22  501A               	movf	(___flmul@a+2)^0,w,c
  6357  001F24  0215               	mulwf	(___flmul@b+1)^0,c
  6358  001F26  CFF3 F02B          	movff	prodl,___flmul@temp
  6359  001F2A  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6360  001F2E  502B               	movf	___flmul@temp^0,w,c
  6361  001F30  2627               	addwf	___flmul@prod^0,f,c
  6362  001F32  502C               	movf	(___flmul@temp+1)^0,w,c
  6363  001F34  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6364  001F36  0E00               	movlw	0
  6365  001F38  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6366  001F3A  0E00               	movlw	0
  6367  001F3C  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6368  001F3E  5019               	movf	(___flmul@a+1)^0,w,c
  6369  001F40  0216               	mulwf	(___flmul@b+2)^0,c
  6370  001F42  CFF3 F02B          	movff	prodl,___flmul@temp
  6371  001F46  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6372  001F4A  502B               	movf	___flmul@temp^0,w,c
  6373  001F4C  2627               	addwf	___flmul@prod^0,f,c
  6374  001F4E  502C               	movf	(___flmul@temp+1)^0,w,c
  6375  001F50  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6376  001F52  0E00               	movlw	0
  6377  001F54  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6378  001F56  0E00               	movlw	0
  6379  001F58  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6380  001F5A  501A               	movf	(___flmul@a+2)^0,w,c
  6381  001F5C  0216               	mulwf	(___flmul@b+2)^0,c
  6382  001F5E  CFF3 F02B          	movff	prodl,___flmul@temp
  6383  001F62  CFF4 F02C          	movff	prodh,___flmul@temp+1
  6384  001F66  502B               	movf	___flmul@temp^0,w,c
  6385  001F68  6E1C               	movwf	??___flmul^0,c
  6386  001F6A  502C               	movf	(___flmul@temp+1)^0,w,c
  6387  001F6C  6E1D               	movwf	(??___flmul+1)^0,c
  6388  001F6E  6A1E               	clrf	(??___flmul+2)^0,c
  6389  001F70  6A1F               	clrf	(??___flmul+3)^0,c
  6390  001F72  C01E  F01F         	movff	??___flmul+2,??___flmul+3
  6391  001F76  C01D  F01E         	movff	??___flmul+1,??___flmul+2
  6392  001F7A  C01C  F01D         	movff	??___flmul,??___flmul+1
  6393  001F7E  6A1C               	clrf	??___flmul^0,c
  6394  001F80  501C               	movf	??___flmul^0,w,c
  6395  001F82  2627               	addwf	___flmul@prod^0,f,c
  6396  001F84  501D               	movf	(??___flmul+1)^0,w,c
  6397  001F86  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6398  001F88  501E               	movf	(??___flmul+2)^0,w,c
  6399  001F8A  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6400  001F8C  501F               	movf	(??___flmul+3)^0,w,c
  6401  001F8E  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6402  001F90  C022  F01C         	movff	___flmul@grs,??___flmul
  6403  001F94  C023  F01D         	movff	___flmul@grs+1,??___flmul+1
  6404  001F98  C024  F01E         	movff	___flmul@grs+2,??___flmul+2
  6405  001F9C  C025  F01F         	movff	___flmul@grs+3,??___flmul+3
  6406  001FA0  0E19               	movlw	25
  6407  001FA2  EFD8  F00F         	goto	u5850
  6408  001FA6                     u5855:
  6409  001FA6  90D8               	bcf	status,0,c
  6410  001FA8  321F               	rrcf	(??___flmul+3)^0,f,c
  6411  001FAA  321E               	rrcf	(??___flmul+2)^0,f,c
  6412  001FAC  321D               	rrcf	(??___flmul+1)^0,f,c
  6413  001FAE  321C               	rrcf	??___flmul^0,f,c
  6414  001FB0                     u5850:
  6415  001FB0  2EE8               	decfsz	wreg,f,c
  6416  001FB2  EFD3  F00F         	goto	u5855
  6417  001FB6  501C               	movf	??___flmul^0,w,c
  6418  001FB8  2627               	addwf	___flmul@prod^0,f,c
  6419  001FBA  501D               	movf	(??___flmul+1)^0,w,c
  6420  001FBC  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6421  001FBE  501E               	movf	(??___flmul+2)^0,w,c
  6422  001FC0  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6423  001FC2  501F               	movf	(??___flmul+3)^0,w,c
  6424  001FC4  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6425  001FC6  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
  6426  001FCA  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
  6427  001FCE  C022  F023         	movff	___flmul@grs,___flmul@grs+1
  6428  001FD2  6A22               	clrf	___flmul@grs^0,c
  6429  001FD4  5021               	movf	___flmul@aexp^0,w,c
  6430  001FD6  C026  F01C         	movff	___flmul@bexp,??___flmul
  6431  001FDA  6A1D               	clrf	(??___flmul+1)^0,c
  6432  001FDC  261C               	addwf	??___flmul^0,f,c
  6433  001FDE  0E00               	movlw	0
  6434  001FE0  221D               	addwfc	(??___flmul+1)^0,f,c
  6435  001FE2  0E82               	movlw	130
  6436  001FE4  241C               	addwf	??___flmul^0,w,c
  6437  001FE6  6E2B               	movwf	___flmul@temp^0,c
  6438  001FE8  0EFF               	movlw	255
  6439  001FEA  201D               	addwfc	(??___flmul+1)^0,w,c
  6440  001FEC  6E2C               	movwf	(___flmul@temp+1)^0,c
  6441  001FEE  EF0E  F010         	goto	l4934
  6442  001FF2                     l4928:
  6443  001FF2  90D8               	bcf	status,0,c
  6444  001FF4  3627               	rlcf	___flmul@prod^0,f,c
  6445  001FF6  3628               	rlcf	(___flmul@prod+1)^0,f,c
  6446  001FF8  3629               	rlcf	(___flmul@prod+2)^0,f,c
  6447  001FFA  362A               	rlcf	(___flmul@prod+3)^0,f,c
  6448  001FFC  AE25               	btfss	(___flmul@grs+3)^0,7,c
  6449  001FFE  EF03  F010         	goto	u5861
  6450  002002  EF05  F010         	goto	u5860
  6451  002006                     u5861:
  6452  002006  EF06  F010         	goto	l865
  6453  00200A                     u5860:
  6454  00200A  8027               	bsf	___flmul@prod^0,0,c
  6455  00200C                     l865:
  6456  00200C  90D8               	bcf	status,0,c
  6457  00200E  3622               	rlcf	___flmul@grs^0,f,c
  6458  002010  3623               	rlcf	(___flmul@grs+1)^0,f,c
  6459  002012  3624               	rlcf	(___flmul@grs+2)^0,f,c
  6460  002014  3625               	rlcf	(___flmul@grs+3)^0,f,c
  6461  002016  062B               	decf	___flmul@temp^0,f,c
  6462  002018  A0D8               	btfss	status,0,c
  6463  00201A  062C               	decf	(___flmul@temp+1)^0,f,c
  6464  00201C                     l4934:
  6465  00201C  AE29               	btfss	(___flmul@prod+2)^0,7,c
  6466  00201E  EF13  F010         	goto	u5871
  6467  002022  EF15  F010         	goto	u5870
  6468  002026                     u5871:
  6469  002026  EFF9  F00F         	goto	l4928
  6470  00202A                     u5870:
  6471  00202A  0E00               	movlw	0
  6472  00202C  6E21               	movwf	___flmul@aexp^0,c
  6473  00202E  AE25               	btfss	(___flmul@grs+3)^0,7,c
  6474  002030  EF1C  F010         	goto	u5881
  6475  002034  EF1E  F010         	goto	u5880
  6476  002038                     u5881:
  6477  002038  EF42  F010         	goto	l867
  6478  00203C                     u5880:
  6479  00203C  0EFF               	movlw	255
  6480  00203E  1422               	andwf	___flmul@grs^0,w,c
  6481  002040  6E1C               	movwf	??___flmul^0,c
  6482  002042  0EFF               	movlw	255
  6483  002044  1423               	andwf	(___flmul@grs+1)^0,w,c
  6484  002046  6E1D               	movwf	(??___flmul+1)^0,c
  6485  002048  0EFF               	movlw	255
  6486  00204A  1424               	andwf	(___flmul@grs+2)^0,w,c
  6487  00204C  6E1E               	movwf	(??___flmul+2)^0,c
  6488  00204E  0E7F               	movlw	127
  6489  002050  1425               	andwf	(___flmul@grs+3)^0,w,c
  6490  002052  6E1F               	movwf	(??___flmul+3)^0,c
  6491  002054  501C               	movf	??___flmul^0,w,c
  6492  002056  101D               	iorwf	(??___flmul+1)^0,w,c
  6493  002058  101E               	iorwf	(??___flmul+2)^0,w,c
  6494  00205A  101F               	iorwf	(??___flmul+3)^0,w,c
  6495  00205C  B4D8               	btfsc	status,2,c
  6496  00205E  EF33  F010         	goto	u5891
  6497  002062  EF35  F010         	goto	u5890
  6498  002066                     u5891:
  6499  002066  EF39  F010         	goto	l868
  6500  00206A                     u5890:
  6501  00206A                     l4942:
  6502  00206A  0E01               	movlw	1
  6503  00206C  6E21               	movwf	___flmul@aexp^0,c
  6504  00206E  EF42  F010         	goto	l867
  6505  002072                     l868:
  6506  002072  A027               	btfss	___flmul@prod^0,0,c
  6507  002074  EF3E  F010         	goto	u5901
  6508  002078  EF40  F010         	goto	u5900
  6509  00207C                     u5901:
  6510  00207C  EF42  F010         	goto	l867
  6511  002080                     u5900:
  6512  002080  EF35  F010         	goto	l4942
  6513  002084                     l867:
  6514  002084  5021               	movf	___flmul@aexp^0,w,c
  6515  002086  B4D8               	btfsc	status,2,c
  6516  002088  EF48  F010         	goto	u5911
  6517  00208C  EF4A  F010         	goto	u5910
  6518  002090                     u5911:
  6519  002090  EF6E  F010         	goto	l4954
  6520  002094                     u5910:
  6521  002094  0E01               	movlw	1
  6522  002096  2627               	addwf	___flmul@prod^0,f,c
  6523  002098  0E00               	movlw	0
  6524  00209A  2228               	addwfc	(___flmul@prod+1)^0,f,c
  6525  00209C  2229               	addwfc	(___flmul@prod+2)^0,f,c
  6526  00209E  222A               	addwfc	(___flmul@prod+3)^0,f,c
  6527  0020A0  A02A               	btfss	(___flmul@prod+3)^0,0,c
  6528  0020A2  EF55  F010         	goto	u5921
  6529  0020A6  EF57  F010         	goto	u5920
  6530  0020AA                     u5921:
  6531  0020AA  EF6E  F010         	goto	l4954
  6532  0020AE                     u5920:
  6533  0020AE  C027  F01C         	movff	___flmul@prod,??___flmul
  6534  0020B2  C028  F01D         	movff	___flmul@prod+1,??___flmul+1
  6535  0020B6  C029  F01E         	movff	___flmul@prod+2,??___flmul+2
  6536  0020BA  C02A  F01F         	movff	___flmul@prod+3,??___flmul+3
  6537  0020BE  341F               	rlcf	(??___flmul+3)^0,w,c
  6538  0020C0  321F               	rrcf	(??___flmul+3)^0,f,c
  6539  0020C2  321E               	rrcf	(??___flmul+2)^0,f,c
  6540  0020C4  321D               	rrcf	(??___flmul+1)^0,f,c
  6541  0020C6  321C               	rrcf	??___flmul^0,f,c
  6542  0020C8  C01C  F027         	movff	??___flmul,___flmul@prod
  6543  0020CC  C01D  F028         	movff	??___flmul+1,___flmul@prod+1
  6544  0020D0  C01E  F029         	movff	??___flmul+2,___flmul@prod+2
  6545  0020D4  C01F  F02A         	movff	??___flmul+3,___flmul@prod+3
  6546  0020D8  4A2B               	infsnz	___flmul@temp^0,f,c
  6547  0020DA  2A2C               	incf	(___flmul@temp+1)^0,f,c
  6548  0020DC                     l4954:
  6549  0020DC  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6550  0020DE  EF79  F010         	goto	u5931
  6551  0020E2  502C               	movf	(___flmul@temp+1)^0,w,c
  6552  0020E4  E108               	bnz	u5930
  6553  0020E6  282B               	incf	___flmul@temp^0,w,c
  6554  0020E8  A0D8               	btfss	status,0,c
  6555  0020EA  EF79  F010         	goto	u5931
  6556  0020EE  EF7B  F010         	goto	u5930
  6557  0020F2                     u5931:
  6558  0020F2  EF85  F010         	goto	l4958
  6559  0020F6                     u5930:
  6560  0020F6  0E00               	movlw	0
  6561  0020F8  6E27               	movwf	___flmul@prod^0,c
  6562  0020FA  0E00               	movlw	0
  6563  0020FC  6E28               	movwf	(___flmul@prod+1)^0,c
  6564  0020FE  0E80               	movlw	128
  6565  002100  6E29               	movwf	(___flmul@prod+2)^0,c
  6566  002102  0E7F               	movlw	127
  6567  002104  6E2A               	movwf	(___flmul@prod+3)^0,c
  6568  002106  EFB3  F010         	goto	l4970
  6569  00210A                     l4958:
  6570  00210A  BE2C               	btfsc	(___flmul@temp+1)^0,7,c
  6571  00210C  EF92  F010         	goto	u5940
  6572  002110  502C               	movf	(___flmul@temp+1)^0,w,c
  6573  002112  E106               	bnz	u5941
  6574  002114  042B               	decf	___flmul@temp^0,w,c
  6575  002116  B0D8               	btfsc	status,0,c
  6576  002118  EF90  F010         	goto	u5941
  6577  00211C  EF92  F010         	goto	u5940
  6578  002120                     u5941:
  6579  002120  EF9E  F010         	goto	l875
  6580  002124                     u5940:
  6581  002124  0E00               	movlw	0
  6582  002126  6E27               	movwf	___flmul@prod^0,c
  6583  002128  0E00               	movlw	0
  6584  00212A  6E28               	movwf	(___flmul@prod+1)^0,c
  6585  00212C  0E00               	movlw	0
  6586  00212E  6E29               	movwf	(___flmul@prod+2)^0,c
  6587  002130  0E00               	movlw	0
  6588  002132  6E2A               	movwf	(___flmul@prod+3)^0,c
  6589  002134  0E00               	movlw	0
  6590  002136  6E20               	movwf	___flmul@sign^0,c
  6591  002138  EFB3  F010         	goto	l4970
  6592  00213C                     l875:
  6593  00213C  C02B  F026         	movff	___flmul@temp,___flmul@bexp
  6594  002140  0EFF               	movlw	255
  6595  002142  1627               	andwf	___flmul@prod^0,f,c
  6596  002144  0EFF               	movlw	255
  6597  002146  1628               	andwf	(___flmul@prod+1)^0,f,c
  6598  002148  0E7F               	movlw	127
  6599  00214A  1629               	andwf	(___flmul@prod+2)^0,f,c
  6600  00214C  0E00               	movlw	0
  6601  00214E  162A               	andwf	(___flmul@prod+3)^0,f,c
  6602  002150  A026               	btfss	___flmul@bexp^0,0,c
  6603  002152  EFAD  F010         	goto	u5951
  6604  002156  EFAF  F010         	goto	u5950
  6605  00215A                     u5951:
  6606  00215A  EFB0  F010         	goto	l4968
  6607  00215E                     u5950:
  6608  00215E  8E29               	bsf	(___flmul@prod+2)^0,7,c
  6609  002160                     l4968:
  6610  002160  90D8               	bcf	status,0,c
  6611  002162  3026               	rrcf	___flmul@bexp^0,w,c
  6612  002164  6E2A               	movwf	(___flmul@prod+3)^0,c
  6613  002166                     l4970:
  6614  002166  5020               	movf	___flmul@sign^0,w,c
  6615  002168  122A               	iorwf	(___flmul@prod+3)^0,f,c
  6616  00216A  C027  F014         	movff	___flmul@prod,?___flmul
  6617  00216E  C028  F015         	movff	___flmul@prod+1,?___flmul+1
  6618  002172  C029  F016         	movff	___flmul@prod+2,?___flmul+2
  6619  002176  C02A  F017         	movff	___flmul@prod+3,?___flmul+3
  6620  00217A                     l862:
  6621  00217A  0012               	return		;funcret
  6622  00217C                     __end_of___flmul:
  6623                           	callstack 0
  6624                           
  6625 ;; *************** function ___flge *****************
  6626 ;; Defined at:
  6627 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\flge.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  ff1             4   44[COMRAM] unsigned char 
  6630 ;;  ff2             4   48[COMRAM] unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;		None
  6633 ;; Return value:  Size  Location     Type
  6634 ;;		None               void
  6635 ;; Registers used:
  6636 ;;		wreg, status,2, status,0
  6637 ;; Tracked objects:
  6638 ;;		On entry : 0/0
  6639 ;;		On exit  : 0/0
  6640 ;;		Unchanged: 0/0
  6641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6642 ;;      Params:         8       0       0       0       0       0       0       0       0
  6643 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6644 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6645 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6646 ;;Total ram usage:       12 bytes
  6647 ;; Hardware stack levels used: 1
  6648 ;; Hardware stack levels required when called: 2
  6649 ;; This function calls:
  6650 ;;		Nothing
  6651 ;; This function is called by:
  6652 ;;		_main
  6653 ;;		_efgtoa
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           	psect	text21
  6658  002FB0                     __ptext21:
  6659                           	callstack 0
  6660  002FB0                     ___flge:
  6661                           	callstack 24
  6662  002FB0  0E00               	movlw	0
  6663  002FB2  142D               	andwf	___flge@ff1^0,w,c
  6664  002FB4  6E35               	movwf	??___flge^0,c
  6665  002FB6  0E00               	movlw	0
  6666  002FB8  142E               	andwf	(___flge@ff1+1)^0,w,c
  6667  002FBA  6E36               	movwf	(??___flge+1)^0,c
  6668  002FBC  0E80               	movlw	128
  6669  002FBE  142F               	andwf	(___flge@ff1+2)^0,w,c
  6670  002FC0  6E37               	movwf	(??___flge+2)^0,c
  6671  002FC2  0E7F               	movlw	127
  6672  002FC4  1430               	andwf	(___flge@ff1+3)^0,w,c
  6673  002FC6  6E38               	movwf	(??___flge+3)^0,c
  6674  002FC8  5035               	movf	??___flge^0,w,c
  6675  002FCA  1036               	iorwf	(??___flge+1)^0,w,c
  6676  002FCC  1037               	iorwf	(??___flge+2)^0,w,c
  6677  002FCE  1038               	iorwf	(??___flge+3)^0,w,c
  6678  002FD0  A4D8               	btfss	status,2,c
  6679  002FD2  EFED  F017         	goto	u6111
  6680  002FD6  EFEF  F017         	goto	u6110
  6681  002FDA                     u6111:
  6682  002FDA  EFF7  F017         	goto	l5082
  6683  002FDE                     u6110:
  6684  002FDE  0E00               	movlw	0
  6685  002FE0  6E2D               	movwf	___flge@ff1^0,c
  6686  002FE2  0E00               	movlw	0
  6687  002FE4  6E2E               	movwf	(___flge@ff1+1)^0,c
  6688  002FE6  0E00               	movlw	0
  6689  002FE8  6E2F               	movwf	(___flge@ff1+2)^0,c
  6690  002FEA  0E00               	movlw	0
  6691  002FEC  6E30               	movwf	(___flge@ff1+3)^0,c
  6692  002FEE                     l5082:
  6693  002FEE  0E00               	movlw	0
  6694  002FF0  1431               	andwf	___flge@ff2^0,w,c
  6695  002FF2  6E35               	movwf	??___flge^0,c
  6696  002FF4  0E00               	movlw	0
  6697  002FF6  1432               	andwf	(___flge@ff2+1)^0,w,c
  6698  002FF8  6E36               	movwf	(??___flge+1)^0,c
  6699  002FFA  0E80               	movlw	128
  6700  002FFC  1433               	andwf	(___flge@ff2+2)^0,w,c
  6701  002FFE  6E37               	movwf	(??___flge+2)^0,c
  6702  003000  0E7F               	movlw	127
  6703  003002  1434               	andwf	(___flge@ff2+3)^0,w,c
  6704  003004  6E38               	movwf	(??___flge+3)^0,c
  6705  003006  5035               	movf	??___flge^0,w,c
  6706  003008  1036               	iorwf	(??___flge+1)^0,w,c
  6707  00300A  1037               	iorwf	(??___flge+2)^0,w,c
  6708  00300C  1038               	iorwf	(??___flge+3)^0,w,c
  6709  00300E  A4D8               	btfss	status,2,c
  6710  003010  EF0C  F018         	goto	u6121
  6711  003014  EF0E  F018         	goto	u6120
  6712  003018                     u6121:
  6713  003018  EF16  F018         	goto	l5086
  6714  00301C                     u6120:
  6715  00301C  0E00               	movlw	0
  6716  00301E  6E31               	movwf	___flge@ff2^0,c
  6717  003020  0E00               	movlw	0
  6718  003022  6E32               	movwf	(___flge@ff2+1)^0,c
  6719  003024  0E00               	movlw	0
  6720  003026  6E33               	movwf	(___flge@ff2+2)^0,c
  6721  003028  0E00               	movlw	0
  6722  00302A  6E34               	movwf	(___flge@ff2+3)^0,c
  6723  00302C                     l5086:
  6724  00302C  AE30               	btfss	(___flge@ff1+3)^0,7,c
  6725  00302E  EF1B  F018         	goto	u6131
  6726  003032  EF1D  F018         	goto	u6130
  6727  003036                     u6131:
  6728  003036  EF26  F018         	goto	l5090
  6729  00303A                     u6130:
  6730  00303A  6C2D               	negf	___flge@ff1^0,c
  6731  00303C  1E2E               	comf	(___flge@ff1+1)^0,f,c
  6732  00303E  B0D8               	btfsc	status,0,c
  6733  003040  2A2E               	incf	(___flge@ff1+1)^0,f,c
  6734  003042  1E2F               	comf	(___flge@ff1+2)^0,f,c
  6735  003044  B0D8               	btfsc	status,0,c
  6736  003046  2A2F               	incf	(___flge@ff1+2)^0,f,c
  6737  003048  0E80               	movlw	128
  6738  00304A  5630               	subfwb	(___flge@ff1+3)^0,f,c
  6739  00304C                     l5090:
  6740  00304C  AE34               	btfss	(___flge@ff2+3)^0,7,c
  6741  00304E  EF2B  F018         	goto	u6141
  6742  003052  EF2D  F018         	goto	u6140
  6743  003056                     u6141:
  6744  003056  EF36  F018         	goto	l509
  6745  00305A                     u6140:
  6746  00305A  6C31               	negf	___flge@ff2^0,c
  6747  00305C  1E32               	comf	(___flge@ff2+1)^0,f,c
  6748  00305E  B0D8               	btfsc	status,0,c
  6749  003060  2A32               	incf	(___flge@ff2+1)^0,f,c
  6750  003062  1E33               	comf	(___flge@ff2+2)^0,f,c
  6751  003064  B0D8               	btfsc	status,0,c
  6752  003066  2A33               	incf	(___flge@ff2+2)^0,f,c
  6753  003068  0E80               	movlw	128
  6754  00306A  5634               	subfwb	(___flge@ff2+3)^0,f,c
  6755  00306C                     l509:
  6756  00306C  0E00               	movlw	0
  6757  00306E  1A2D               	xorwf	___flge@ff1^0,f,c
  6758  003070  0E00               	movlw	0
  6759  003072  1A2E               	xorwf	(___flge@ff1+1)^0,f,c
  6760  003074  0E00               	movlw	0
  6761  003076  1A2F               	xorwf	(___flge@ff1+2)^0,f,c
  6762  003078  0E80               	movlw	128
  6763  00307A  1A30               	xorwf	(___flge@ff1+3)^0,f,c
  6764  00307C  0E00               	movlw	0
  6765  00307E  1A31               	xorwf	___flge@ff2^0,f,c
  6766  003080  0E00               	movlw	0
  6767  003082  1A32               	xorwf	(___flge@ff2+1)^0,f,c
  6768  003084  0E00               	movlw	0
  6769  003086  1A33               	xorwf	(___flge@ff2+2)^0,f,c
  6770  003088  0E80               	movlw	128
  6771  00308A  1A34               	xorwf	(___flge@ff2+3)^0,f,c
  6772  00308C  5031               	movf	___flge@ff2^0,w,c
  6773  00308E  5C2D               	subwf	___flge@ff1^0,w,c
  6774  003090  5032               	movf	(___flge@ff2+1)^0,w,c
  6775  003092  582E               	subwfb	(___flge@ff1+1)^0,w,c
  6776  003094  5033               	movf	(___flge@ff2+2)^0,w,c
  6777  003096  582F               	subwfb	(___flge@ff1+2)^0,w,c
  6778  003098  5034               	movf	(___flge@ff2+3)^0,w,c
  6779  00309A  5830               	subwfb	(___flge@ff1+3)^0,w,c
  6780  00309C  B0D8               	btfsc	status,0,c
  6781  00309E  EF53  F018         	goto	u6151
  6782  0030A2  EF55  F018         	goto	u6150
  6783  0030A6                     u6151:
  6784  0030A6  EF58  F018         	goto	l5096
  6785  0030AA                     u6150:
  6786  0030AA  90D8               	bcf	status,0,c
  6787  0030AC  EF59  F018         	goto	l514
  6788  0030B0                     l5096:
  6789  0030B0  80D8               	bsf	status,0,c
  6790  0030B2                     l514:
  6791  0030B2  0012               	return		;funcret
  6792  0030B4                     __end_of___flge:
  6793                           	callstack 0
  6794                           
  6795 ;; *************** function ___fleq *****************
  6796 ;; Defined at:
  6797 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\fleq.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  ff1             4    5[COMRAM] unsigned char 
  6800 ;;  ff2             4    9[COMRAM] unsigned char 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;		None
  6803 ;; Return value:  Size  Location     Type
  6804 ;;		None               void
  6805 ;; Registers used:
  6806 ;;		wreg, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6812 ;;      Params:         8       0       0       0       0       0       0       0       0
  6813 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6814 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6815 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6816 ;;Total ram usage:       12 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; Hardware stack levels required when called: 2
  6819 ;; This function calls:
  6820 ;;		Nothing
  6821 ;; This function is called by:
  6822 ;;		_efgtoa
  6823 ;; This function uses a non-reentrant model
  6824 ;;
  6825                           
  6826                           	psect	text22
  6827  003744                     __ptext22:
  6828                           	callstack 0
  6829  003744                     ___fleq:
  6830                           	callstack 24
  6831  003744  0E00               	movlw	0
  6832  003746  1406               	andwf	___fleq@ff1^0,w,c
  6833  003748  6E0E               	movwf	??___fleq^0,c
  6834  00374A  0E00               	movlw	0
  6835  00374C  1407               	andwf	(___fleq@ff1+1)^0,w,c
  6836  00374E  6E0F               	movwf	(??___fleq+1)^0,c
  6837  003750  0E80               	movlw	128
  6838  003752  1408               	andwf	(___fleq@ff1+2)^0,w,c
  6839  003754  6E10               	movwf	(??___fleq+2)^0,c
  6840  003756  0E7F               	movlw	127
  6841  003758  1409               	andwf	(___fleq@ff1+3)^0,w,c
  6842  00375A  6E11               	movwf	(??___fleq+3)^0,c
  6843  00375C  500E               	movf	??___fleq^0,w,c
  6844  00375E  100F               	iorwf	(??___fleq+1)^0,w,c
  6845  003760  1010               	iorwf	(??___fleq+2)^0,w,c
  6846  003762  1011               	iorwf	(??___fleq+3)^0,w,c
  6847  003764  A4D8               	btfss	status,2,c
  6848  003766  EFB7  F01B         	goto	u6081
  6849  00376A  EFB9  F01B         	goto	u6080
  6850  00376E                     u6081:
  6851  00376E  EFC1  F01B         	goto	l5066
  6852  003772                     u6080:
  6853  003772  0E00               	movlw	0
  6854  003774  6E06               	movwf	___fleq@ff1^0,c
  6855  003776  0E00               	movlw	0
  6856  003778  6E07               	movwf	(___fleq@ff1+1)^0,c
  6857  00377A  0E00               	movlw	0
  6858  00377C  6E08               	movwf	(___fleq@ff1+2)^0,c
  6859  00377E  0E00               	movlw	0
  6860  003780  6E09               	movwf	(___fleq@ff1+3)^0,c
  6861  003782                     l5066:
  6862  003782  0E00               	movlw	0
  6863  003784  140A               	andwf	___fleq@ff2^0,w,c
  6864  003786  6E0E               	movwf	??___fleq^0,c
  6865  003788  0E00               	movlw	0
  6866  00378A  140B               	andwf	(___fleq@ff2+1)^0,w,c
  6867  00378C  6E0F               	movwf	(??___fleq+1)^0,c
  6868  00378E  0E80               	movlw	128
  6869  003790  140C               	andwf	(___fleq@ff2+2)^0,w,c
  6870  003792  6E10               	movwf	(??___fleq+2)^0,c
  6871  003794  0E7F               	movlw	127
  6872  003796  140D               	andwf	(___fleq@ff2+3)^0,w,c
  6873  003798  6E11               	movwf	(??___fleq+3)^0,c
  6874  00379A  500E               	movf	??___fleq^0,w,c
  6875  00379C  100F               	iorwf	(??___fleq+1)^0,w,c
  6876  00379E  1010               	iorwf	(??___fleq+2)^0,w,c
  6877  0037A0  1011               	iorwf	(??___fleq+3)^0,w,c
  6878  0037A2  A4D8               	btfss	status,2,c
  6879  0037A4  EFD6  F01B         	goto	u6091
  6880  0037A8  EFD8  F01B         	goto	u6090
  6881  0037AC                     u6091:
  6882  0037AC  EFE0  F01B         	goto	l5070
  6883  0037B0                     u6090:
  6884  0037B0  0E00               	movlw	0
  6885  0037B2  6E0A               	movwf	___fleq@ff2^0,c
  6886  0037B4  0E00               	movlw	0
  6887  0037B6  6E0B               	movwf	(___fleq@ff2+1)^0,c
  6888  0037B8  0E00               	movlw	0
  6889  0037BA  6E0C               	movwf	(___fleq@ff2+2)^0,c
  6890  0037BC  0E00               	movlw	0
  6891  0037BE  6E0D               	movwf	(___fleq@ff2+3)^0,c
  6892  0037C0                     l5070:
  6893  0037C0  500A               	movf	___fleq@ff2^0,w,c
  6894  0037C2  1806               	xorwf	___fleq@ff1^0,w,c
  6895  0037C4  E10F               	bnz	u6100
  6896  0037C6  500B               	movf	(___fleq@ff2+1)^0,w,c
  6897  0037C8  1807               	xorwf	(___fleq@ff1+1)^0,w,c
  6898  0037CA  E10C               	bnz	u6100
  6899  0037CC  500C               	movf	(___fleq@ff2+2)^0,w,c
  6900  0037CE  1808               	xorwf	(___fleq@ff1+2)^0,w,c
  6901  0037D0  E109               	bnz	u6100
  6902  0037D2  500D               	movf	(___fleq@ff2+3)^0,w,c
  6903  0037D4  1809               	xorwf	(___fleq@ff1+3)^0,w,c
  6904  0037D6  B4D8               	btfsc	status,2,c
  6905  0037D8  EFF0  F01B         	goto	u6101
  6906  0037DC  EFF2  F01B         	goto	u6100
  6907  0037E0                     u6101:
  6908  0037E0  EFF5  F01B         	goto	l5074
  6909  0037E4                     u6100:
  6910  0037E4  90D8               	bcf	status,0,c
  6911  0037E6  EFF6  F01B         	goto	l503
  6912  0037EA                     l5074:
  6913  0037EA  80D8               	bsf	status,0,c
  6914  0037EC                     l503:
  6915  0037EC  0012               	return		;funcret
  6916  0037EE                     __end_of___fleq:
  6917                           	callstack 0
  6918                           
  6919 ;; *************** function ___fldiv *****************
  6920 ;; Defined at:
  6921 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\sprcdiv.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  b               4   44[COMRAM] unsigned char 
  6924 ;;  a               4   48[COMRAM] unsigned char 
  6925 ;; Auto vars:     Size  Location     Type
  6926 ;;  grs             4   63[COMRAM] unsigned long 
  6927 ;;  rem             4   56[COMRAM] unsigned long 
  6928 ;;  new_exp         2   61[COMRAM] short 
  6929 ;;  aexp            1   68[COMRAM] unsigned char 
  6930 ;;  bexp            1   67[COMRAM] unsigned char 
  6931 ;;  sign            1   60[COMRAM] unsigned char 
  6932 ;; Return value:  Size  Location     Type
  6933 ;;                  4   44[COMRAM] unsigned char 
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6941 ;;      Params:         8       0       0       0       0       0       0       0       0
  6942 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6943 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6944 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6945 ;;Total ram usage:       25 bytes
  6946 ;; Hardware stack levels used: 1
  6947 ;; Hardware stack levels required when called: 2
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_main
  6952 ;;		_efgtoa
  6953 ;; This function uses a non-reentrant model
  6954 ;;
  6955                           
  6956                           	psect	text23
  6957  00217C                     __ptext23:
  6958                           	callstack 0
  6959  00217C                     ___fldiv:
  6960                           	callstack 24
  6961  00217C  5030               	movf	(___fldiv@b+3)^0,w,c
  6962  00217E  0B80               	andlw	128
  6963  002180  6E3D               	movwf	___fldiv@sign^0,c
  6964  002182  5030               	movf	(___fldiv@b+3)^0,w,c
  6965  002184  2430               	addwf	(___fldiv@b+3)^0,w,c
  6966  002186  6E44               	movwf	___fldiv@bexp^0,c
  6967  002188  AE2F               	btfss	(___fldiv@b+2)^0,7,c
  6968  00218A  EFC9  F010         	goto	u5541
  6969  00218E  EFCB  F010         	goto	u5540
  6970  002192                     u5541:
  6971  002192  EFCC  F010         	goto	l4714
  6972  002196                     u5540:
  6973  002196  8044               	bsf	___fldiv@bexp^0,0,c
  6974  002198                     l4714:
  6975  002198  5044               	movf	___fldiv@bexp^0,w,c
  6976  00219A  B4D8               	btfsc	status,2,c
  6977  00219C  EFD2  F010         	goto	u5551
  6978  0021A0  EFD4  F010         	goto	u5550
  6979  0021A4                     u5551:
  6980  0021A4  EFE9  F010         	goto	l4724
  6981  0021A8                     u5550:
  6982  0021A8  2844               	incf	___fldiv@bexp^0,w,c
  6983  0021AA  A4D8               	btfss	status,2,c
  6984  0021AC  EFDA  F010         	goto	u5561
  6985  0021B0  EFDC  F010         	goto	u5560
  6986  0021B4                     u5561:
  6987  0021B4  EFE4  F010         	goto	l4720
  6988  0021B8                     u5560:
  6989  0021B8  0E00               	movlw	0
  6990  0021BA  6E2D               	movwf	___fldiv@b^0,c
  6991  0021BC  0E00               	movlw	0
  6992  0021BE  6E2E               	movwf	(___fldiv@b+1)^0,c
  6993  0021C0  0E00               	movlw	0
  6994  0021C2  6E2F               	movwf	(___fldiv@b+2)^0,c
  6995  0021C4  0E00               	movlw	0
  6996  0021C6  6E30               	movwf	(___fldiv@b+3)^0,c
  6997  0021C8                     l4720:
  6998  0021C8  8E2F               	bsf	(___fldiv@b+2)^0,7,c
  6999  0021CA  0E00               	movlw	0
  7000  0021CC  6E30               	movwf	(___fldiv@b+3)^0,c
  7001  0021CE  EFF1  F010         	goto	l4726
  7002  0021D2                     l4724:
  7003  0021D2  0E00               	movlw	0
  7004  0021D4  6E2D               	movwf	___fldiv@b^0,c
  7005  0021D6  0E00               	movlw	0
  7006  0021D8  6E2E               	movwf	(___fldiv@b+1)^0,c
  7007  0021DA  0E00               	movlw	0
  7008  0021DC  6E2F               	movwf	(___fldiv@b+2)^0,c
  7009  0021DE  0E00               	movlw	0
  7010  0021E0  6E30               	movwf	(___fldiv@b+3)^0,c
  7011  0021E2                     l4726:
  7012  0021E2  5034               	movf	(___fldiv@a+3)^0,w,c
  7013  0021E4  0B80               	andlw	128
  7014  0021E6  1A3D               	xorwf	___fldiv@sign^0,f,c
  7015  0021E8  5034               	movf	(___fldiv@a+3)^0,w,c
  7016  0021EA  2434               	addwf	(___fldiv@a+3)^0,w,c
  7017  0021EC  6E45               	movwf	___fldiv@aexp^0,c
  7018  0021EE  AE33               	btfss	(___fldiv@a+2)^0,7,c
  7019  0021F0  EFFC  F010         	goto	u5571
  7020  0021F4  EFFE  F010         	goto	u5570
  7021  0021F8                     u5571:
  7022  0021F8  EFFF  F010         	goto	l4734
  7023  0021FC                     u5570:
  7024  0021FC  8045               	bsf	___fldiv@aexp^0,0,c
  7025  0021FE                     l4734:
  7026  0021FE  5045               	movf	___fldiv@aexp^0,w,c
  7027  002200  B4D8               	btfsc	status,2,c
  7028  002202  EF05  F011         	goto	u5581
  7029  002206  EF07  F011         	goto	u5580
  7030  00220A                     u5581:
  7031  00220A  EF1C  F011         	goto	l4744
  7032  00220E                     u5580:
  7033  00220E  2845               	incf	___fldiv@aexp^0,w,c
  7034  002210  A4D8               	btfss	status,2,c
  7035  002212  EF0D  F011         	goto	u5591
  7036  002216  EF0F  F011         	goto	u5590
  7037  00221A                     u5591:
  7038  00221A  EF17  F011         	goto	l4740
  7039  00221E                     u5590:
  7040  00221E  0E00               	movlw	0
  7041  002220  6E31               	movwf	___fldiv@a^0,c
  7042  002222  0E00               	movlw	0
  7043  002224  6E32               	movwf	(___fldiv@a+1)^0,c
  7044  002226  0E00               	movlw	0
  7045  002228  6E33               	movwf	(___fldiv@a+2)^0,c
  7046  00222A  0E00               	movlw	0
  7047  00222C  6E34               	movwf	(___fldiv@a+3)^0,c
  7048  00222E                     l4740:
  7049  00222E  8E33               	bsf	(___fldiv@a+2)^0,7,c
  7050  002230  0E00               	movlw	0
  7051  002232  6E34               	movwf	(___fldiv@a+3)^0,c
  7052  002234  EF24  F011         	goto	l4746
  7053  002238                     l4744:
  7054  002238  0E00               	movlw	0
  7055  00223A  6E31               	movwf	___fldiv@a^0,c
  7056  00223C  0E00               	movlw	0
  7057  00223E  6E32               	movwf	(___fldiv@a+1)^0,c
  7058  002240  0E00               	movlw	0
  7059  002242  6E33               	movwf	(___fldiv@a+2)^0,c
  7060  002244  0E00               	movlw	0
  7061  002246  6E34               	movwf	(___fldiv@a+3)^0,c
  7062  002248                     l4746:
  7063  002248  5031               	movf	___fldiv@a^0,w,c
  7064  00224A  1032               	iorwf	(___fldiv@a+1)^0,w,c
  7065  00224C  1033               	iorwf	(___fldiv@a+2)^0,w,c
  7066  00224E  1034               	iorwf	(___fldiv@a+3)^0,w,c
  7067  002250  A4D8               	btfss	status,2,c
  7068  002252  EF2D  F011         	goto	u5601
  7069  002256  EF2F  F011         	goto	u5600
  7070  00225A                     u5601:
  7071  00225A  EF47  F011         	goto	l4758
  7072  00225E                     u5600:
  7073  00225E  0E00               	movlw	0
  7074  002260  6E2D               	movwf	___fldiv@b^0,c
  7075  002262  0E00               	movlw	0
  7076  002264  6E2E               	movwf	(___fldiv@b+1)^0,c
  7077  002266  0E00               	movlw	0
  7078  002268  6E2F               	movwf	(___fldiv@b+2)^0,c
  7079  00226A  0E00               	movlw	0
  7080  00226C  6E30               	movwf	(___fldiv@b+3)^0,c
  7081  00226E  0E80               	movlw	128
  7082  002270  122F               	iorwf	(___fldiv@b+2)^0,f,c
  7083  002272  0E7F               	movlw	127
  7084  002274  1230               	iorwf	(___fldiv@b+3)^0,f,c
  7085  002276                     l4752:
  7086  002276  503D               	movf	___fldiv@sign^0,w,c
  7087  002278  1230               	iorwf	(___fldiv@b+3)^0,f,c
  7088  00227A  C02D  F02D         	movff	___fldiv@b,?___fldiv
  7089  00227E  C02E  F02E         	movff	___fldiv@b+1,?___fldiv+1
  7090  002282  C02F  F02F         	movff	___fldiv@b+2,?___fldiv+2
  7091  002286  C030  F030         	movff	___fldiv@b+3,?___fldiv+3
  7092  00228A  EF8A  F012         	goto	l826
  7093  00228E                     l4758:
  7094  00228E  5044               	movf	___fldiv@bexp^0,w,c
  7095  002290  A4D8               	btfss	status,2,c
  7096  002292  EF4D  F011         	goto	u5611
  7097  002296  EF4F  F011         	goto	u5610
  7098  00229A                     u5611:
  7099  00229A  EF59  F011         	goto	l4766
  7100  00229E                     u5610:
  7101  00229E  0E00               	movlw	0
  7102  0022A0  6E2D               	movwf	?___fldiv^0,c
  7103  0022A2  0E00               	movlw	0
  7104  0022A4  6E2E               	movwf	(?___fldiv+1)^0,c
  7105  0022A6  0E00               	movlw	0
  7106  0022A8  6E2F               	movwf	(?___fldiv+2)^0,c
  7107  0022AA  0E00               	movlw	0
  7108  0022AC  6E30               	movwf	(?___fldiv+3)^0,c
  7109  0022AE  EF8A  F012         	goto	l826
  7110  0022B2                     l4766:
  7111  0022B2  5045               	movf	___fldiv@aexp^0,w,c
  7112  0022B4  C044  F035         	movff	___fldiv@bexp,??___fldiv
  7113  0022B8  6A36               	clrf	(??___fldiv+1)^0,c
  7114  0022BA  5E35               	subwf	??___fldiv^0,f,c
  7115  0022BC  0E00               	movlw	0
  7116  0022BE  5A36               	subwfb	(??___fldiv+1)^0,f,c
  7117  0022C0  0E7F               	movlw	127
  7118  0022C2  2435               	addwf	??___fldiv^0,w,c
  7119  0022C4  6E3E               	movwf	___fldiv@new_exp^0,c
  7120  0022C6  0E00               	movlw	0
  7121  0022C8  2036               	addwfc	(??___fldiv+1)^0,w,c
  7122  0022CA  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
  7123  0022CC  C02D  F039         	movff	___fldiv@b,___fldiv@rem
  7124  0022D0  C02E  F03A         	movff	___fldiv@b+1,___fldiv@rem+1
  7125  0022D4  C02F  F03B         	movff	___fldiv@b+2,___fldiv@rem+2
  7126  0022D8  C030  F03C         	movff	___fldiv@b+3,___fldiv@rem+3
  7127  0022DC  0E00               	movlw	0
  7128  0022DE  6E2D               	movwf	___fldiv@b^0,c
  7129  0022E0  0E00               	movlw	0
  7130  0022E2  6E2E               	movwf	(___fldiv@b+1)^0,c
  7131  0022E4  0E00               	movlw	0
  7132  0022E6  6E2F               	movwf	(___fldiv@b+2)^0,c
  7133  0022E8  0E00               	movlw	0
  7134  0022EA  6E30               	movwf	(___fldiv@b+3)^0,c
  7135  0022EC  0E00               	movlw	0
  7136  0022EE  6E40               	movwf	___fldiv@grs^0,c
  7137  0022F0  0E00               	movlw	0
  7138  0022F2  6E41               	movwf	(___fldiv@grs+1)^0,c
  7139  0022F4  0E00               	movlw	0
  7140  0022F6  6E42               	movwf	(___fldiv@grs+2)^0,c
  7141  0022F8  0E00               	movlw	0
  7142  0022FA  6E43               	movwf	(___fldiv@grs+3)^0,c
  7143  0022FC  0E00               	movlw	0
  7144  0022FE  6E45               	movwf	___fldiv@aexp^0,c
  7145  002300  EFBA  F011         	goto	l828
  7146  002304                     l4776:
  7147  002304  5045               	movf	___fldiv@aexp^0,w,c
  7148  002306  B4D8               	btfsc	status,2,c
  7149  002308  EF88  F011         	goto	u5621
  7150  00230C  EF8A  F011         	goto	u5620
  7151  002310                     u5621:
  7152  002310  EFA1  F011         	goto	l4784
  7153  002314                     u5620:
  7154  002314  90D8               	bcf	status,0,c
  7155  002316  3639               	rlcf	___fldiv@rem^0,f,c
  7156  002318  363A               	rlcf	(___fldiv@rem+1)^0,f,c
  7157  00231A  363B               	rlcf	(___fldiv@rem+2)^0,f,c
  7158  00231C  363C               	rlcf	(___fldiv@rem+3)^0,f,c
  7159  00231E  90D8               	bcf	status,0,c
  7160  002320  362D               	rlcf	___fldiv@b^0,f,c
  7161  002322  362E               	rlcf	(___fldiv@b+1)^0,f,c
  7162  002324  362F               	rlcf	(___fldiv@b+2)^0,f,c
  7163  002326  3630               	rlcf	(___fldiv@b+3)^0,f,c
  7164  002328  AE43               	btfss	(___fldiv@grs+3)^0,7,c
  7165  00232A  EF99  F011         	goto	u5631
  7166  00232E  EF9B  F011         	goto	u5630
  7167  002332                     u5631:
  7168  002332  EF9C  F011         	goto	l831
  7169  002336                     u5630:
  7170  002336  802D               	bsf	___fldiv@b^0,0,c
  7171  002338                     l831:
  7172  002338  90D8               	bcf	status,0,c
  7173  00233A  3640               	rlcf	___fldiv@grs^0,f,c
  7174  00233C  3641               	rlcf	(___fldiv@grs+1)^0,f,c
  7175  00233E  3642               	rlcf	(___fldiv@grs+2)^0,f,c
  7176  002340  3643               	rlcf	(___fldiv@grs+3)^0,f,c
  7177  002342                     l4784:
  7178  002342  5031               	movf	___fldiv@a^0,w,c
  7179  002344  5C39               	subwf	___fldiv@rem^0,w,c
  7180  002346  5032               	movf	(___fldiv@a+1)^0,w,c
  7181  002348  583A               	subwfb	(___fldiv@rem+1)^0,w,c
  7182  00234A  5033               	movf	(___fldiv@a+2)^0,w,c
  7183  00234C  583B               	subwfb	(___fldiv@rem+2)^0,w,c
  7184  00234E  5034               	movf	(___fldiv@a+3)^0,w,c
  7185  002350  583C               	subwfb	(___fldiv@rem+3)^0,w,c
  7186  002352  A0D8               	btfss	status,0,c
  7187  002354  EFAE  F011         	goto	u5641
  7188  002358  EFB0  F011         	goto	u5640
  7189  00235C                     u5641:
  7190  00235C  EFB9  F011         	goto	l4790
  7191  002360                     u5640:
  7192  002360  8C43               	bsf	(___fldiv@grs+3)^0,6,c
  7193  002362  5031               	movf	___fldiv@a^0,w,c
  7194  002364  5E39               	subwf	___fldiv@rem^0,f,c
  7195  002366  5032               	movf	(___fldiv@a+1)^0,w,c
  7196  002368  5A3A               	subwfb	(___fldiv@rem+1)^0,f,c
  7197  00236A  5033               	movf	(___fldiv@a+2)^0,w,c
  7198  00236C  5A3B               	subwfb	(___fldiv@rem+2)^0,f,c
  7199  00236E  5034               	movf	(___fldiv@a+3)^0,w,c
  7200  002370  5A3C               	subwfb	(___fldiv@rem+3)^0,f,c
  7201  002372                     l4790:
  7202  002372  2A45               	incf	___fldiv@aexp^0,f,c
  7203  002374                     l828:
  7204  002374  0E19               	movlw	25
  7205  002376  6445               	cpfsgt	___fldiv@aexp^0,c
  7206  002378  EFC0  F011         	goto	u5651
  7207  00237C  EFC2  F011         	goto	u5650
  7208  002380                     u5651:
  7209  002380  EF82  F011         	goto	l4776
  7210  002384                     u5650:
  7211  002384  5039               	movf	___fldiv@rem^0,w,c
  7212  002386  103A               	iorwf	(___fldiv@rem+1)^0,w,c
  7213  002388  103B               	iorwf	(___fldiv@rem+2)^0,w,c
  7214  00238A  103C               	iorwf	(___fldiv@rem+3)^0,w,c
  7215  00238C  B4D8               	btfsc	status,2,c
  7216  00238E  EFCB  F011         	goto	u5661
  7217  002392  EFCD  F011         	goto	u5660
  7218  002396                     u5661:
  7219  002396  EFE5  F011         	goto	l4802
  7220  00239A                     u5660:
  7221  00239A  8040               	bsf	___fldiv@grs^0,0,c
  7222  00239C  EFE5  F011         	goto	l4802
  7223  0023A0                     l4796:
  7224  0023A0  90D8               	bcf	status,0,c
  7225  0023A2  362D               	rlcf	___fldiv@b^0,f,c
  7226  0023A4  362E               	rlcf	(___fldiv@b+1)^0,f,c
  7227  0023A6  362F               	rlcf	(___fldiv@b+2)^0,f,c
  7228  0023A8  3630               	rlcf	(___fldiv@b+3)^0,f,c
  7229  0023AA  AE43               	btfss	(___fldiv@grs+3)^0,7,c
  7230  0023AC  EFDA  F011         	goto	u5671
  7231  0023B0  EFDC  F011         	goto	u5670
  7232  0023B4                     u5671:
  7233  0023B4  EFDD  F011         	goto	l837
  7234  0023B8                     u5670:
  7235  0023B8  802D               	bsf	___fldiv@b^0,0,c
  7236  0023BA                     l837:
  7237  0023BA  90D8               	bcf	status,0,c
  7238  0023BC  3640               	rlcf	___fldiv@grs^0,f,c
  7239  0023BE  3641               	rlcf	(___fldiv@grs+1)^0,f,c
  7240  0023C0  3642               	rlcf	(___fldiv@grs+2)^0,f,c
  7241  0023C2  3643               	rlcf	(___fldiv@grs+3)^0,f,c
  7242  0023C4  063E               	decf	___fldiv@new_exp^0,f,c
  7243  0023C6  A0D8               	btfss	status,0,c
  7244  0023C8  063F               	decf	(___fldiv@new_exp+1)^0,f,c
  7245  0023CA                     l4802:
  7246  0023CA  AE2F               	btfss	(___fldiv@b+2)^0,7,c
  7247  0023CC  EFEA  F011         	goto	u5681
  7248  0023D0  EFEC  F011         	goto	u5680
  7249  0023D4                     u5681:
  7250  0023D4  EFD0  F011         	goto	l4796
  7251  0023D8                     u5680:
  7252  0023D8  0E00               	movlw	0
  7253  0023DA  6E45               	movwf	___fldiv@aexp^0,c
  7254  0023DC  AE43               	btfss	(___fldiv@grs+3)^0,7,c
  7255  0023DE  EFF3  F011         	goto	u5691
  7256  0023E2  EFF5  F011         	goto	u5690
  7257  0023E6                     u5691:
  7258  0023E6  EF19  F012         	goto	l839
  7259  0023EA                     u5690:
  7260  0023EA  0EFF               	movlw	255
  7261  0023EC  1440               	andwf	___fldiv@grs^0,w,c
  7262  0023EE  6E35               	movwf	??___fldiv^0,c
  7263  0023F0  0EFF               	movlw	255
  7264  0023F2  1441               	andwf	(___fldiv@grs+1)^0,w,c
  7265  0023F4  6E36               	movwf	(??___fldiv+1)^0,c
  7266  0023F6  0EFF               	movlw	255
  7267  0023F8  1442               	andwf	(___fldiv@grs+2)^0,w,c
  7268  0023FA  6E37               	movwf	(??___fldiv+2)^0,c
  7269  0023FC  0E7F               	movlw	127
  7270  0023FE  1443               	andwf	(___fldiv@grs+3)^0,w,c
  7271  002400  6E38               	movwf	(??___fldiv+3)^0,c
  7272  002402  5035               	movf	??___fldiv^0,w,c
  7273  002404  1036               	iorwf	(??___fldiv+1)^0,w,c
  7274  002406  1037               	iorwf	(??___fldiv+2)^0,w,c
  7275  002408  1038               	iorwf	(??___fldiv+3)^0,w,c
  7276  00240A  B4D8               	btfsc	status,2,c
  7277  00240C  EF0A  F012         	goto	u5701
  7278  002410  EF0C  F012         	goto	u5700
  7279  002414                     u5701:
  7280  002414  EF10  F012         	goto	l840
  7281  002418                     u5700:
  7282  002418                     l4810:
  7283  002418  0E01               	movlw	1
  7284  00241A  6E45               	movwf	___fldiv@aexp^0,c
  7285  00241C  EF19  F012         	goto	l839
  7286  002420                     l840:
  7287  002420  A02D               	btfss	___fldiv@b^0,0,c
  7288  002422  EF15  F012         	goto	u5711
  7289  002426  EF17  F012         	goto	u5710
  7290  00242A                     u5711:
  7291  00242A  EF19  F012         	goto	l839
  7292  00242E                     u5710:
  7293  00242E  EF0C  F012         	goto	l4810
  7294  002432                     l839:
  7295  002432  5045               	movf	___fldiv@aexp^0,w,c
  7296  002434  B4D8               	btfsc	status,2,c
  7297  002436  EF1F  F012         	goto	u5721
  7298  00243A  EF21  F012         	goto	u5720
  7299  00243E                     u5721:
  7300  00243E  EF45  F012         	goto	l4822
  7301  002442                     u5720:
  7302  002442  0E01               	movlw	1
  7303  002444  262D               	addwf	___fldiv@b^0,f,c
  7304  002446  0E00               	movlw	0
  7305  002448  222E               	addwfc	(___fldiv@b+1)^0,f,c
  7306  00244A  222F               	addwfc	(___fldiv@b+2)^0,f,c
  7307  00244C  2230               	addwfc	(___fldiv@b+3)^0,f,c
  7308  00244E  A030               	btfss	(___fldiv@b+3)^0,0,c
  7309  002450  EF2C  F012         	goto	u5731
  7310  002454  EF2E  F012         	goto	u5730
  7311  002458                     u5731:
  7312  002458  EF45  F012         	goto	l4822
  7313  00245C                     u5730:
  7314  00245C  C02D  F035         	movff	___fldiv@b,??___fldiv
  7315  002460  C02E  F036         	movff	___fldiv@b+1,??___fldiv+1
  7316  002464  C02F  F037         	movff	___fldiv@b+2,??___fldiv+2
  7317  002468  C030  F038         	movff	___fldiv@b+3,??___fldiv+3
  7318  00246C  3438               	rlcf	(??___fldiv+3)^0,w,c
  7319  00246E  3238               	rrcf	(??___fldiv+3)^0,f,c
  7320  002470  3237               	rrcf	(??___fldiv+2)^0,f,c
  7321  002472  3236               	rrcf	(??___fldiv+1)^0,f,c
  7322  002474  3235               	rrcf	??___fldiv^0,f,c
  7323  002476  C035  F02D         	movff	??___fldiv,___fldiv@b
  7324  00247A  C036  F02E         	movff	??___fldiv+1,___fldiv@b+1
  7325  00247E  C037  F02F         	movff	??___fldiv+2,___fldiv@b+2
  7326  002482  C038  F030         	movff	??___fldiv+3,___fldiv@b+3
  7327  002486  4A3E               	infsnz	___fldiv@new_exp^0,f,c
  7328  002488  2A3F               	incf	(___fldiv@new_exp+1)^0,f,c
  7329  00248A                     l4822:
  7330  00248A  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7331  00248C  EF50  F012         	goto	u5741
  7332  002490  503F               	movf	(___fldiv@new_exp+1)^0,w,c
  7333  002492  E108               	bnz	u5740
  7334  002494  283E               	incf	___fldiv@new_exp^0,w,c
  7335  002496  A0D8               	btfss	status,0,c
  7336  002498  EF50  F012         	goto	u5741
  7337  00249C  EF52  F012         	goto	u5740
  7338  0024A0                     u5741:
  7339  0024A0  EF5D  F012         	goto	l4826
  7340  0024A4                     u5740:
  7341  0024A4  0E00               	movlw	0
  7342  0024A6  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
  7343  0024A8  683E               	setf	___fldiv@new_exp^0,c
  7344  0024AA  0E00               	movlw	0
  7345  0024AC  6E2D               	movwf	___fldiv@b^0,c
  7346  0024AE  0E00               	movlw	0
  7347  0024B0  6E2E               	movwf	(___fldiv@b+1)^0,c
  7348  0024B2  0E00               	movlw	0
  7349  0024B4  6E2F               	movwf	(___fldiv@b+2)^0,c
  7350  0024B6  0E00               	movlw	0
  7351  0024B8  6E30               	movwf	(___fldiv@b+3)^0,c
  7352  0024BA                     l4826:
  7353  0024BA  BE3F               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7354  0024BC  EF6A  F012         	goto	u5750
  7355  0024C0  503F               	movf	(___fldiv@new_exp+1)^0,w,c
  7356  0024C2  E106               	bnz	u5751
  7357  0024C4  043E               	decf	___fldiv@new_exp^0,w,c
  7358  0024C6  B0D8               	btfsc	status,0,c
  7359  0024C8  EF68  F012         	goto	u5751
  7360  0024CC  EF6A  F012         	goto	u5750
  7361  0024D0                     u5751:
  7362  0024D0  EF78  F012         	goto	l4830
  7363  0024D4                     u5750:
  7364  0024D4  0E00               	movlw	0
  7365  0024D6  6E3F               	movwf	(___fldiv@new_exp+1)^0,c
  7366  0024D8  0E00               	movlw	0
  7367  0024DA  6E3E               	movwf	___fldiv@new_exp^0,c
  7368  0024DC  0E00               	movlw	0
  7369  0024DE  6E2D               	movwf	___fldiv@b^0,c
  7370  0024E0  0E00               	movlw	0
  7371  0024E2  6E2E               	movwf	(___fldiv@b+1)^0,c
  7372  0024E4  0E00               	movlw	0
  7373  0024E6  6E2F               	movwf	(___fldiv@b+2)^0,c
  7374  0024E8  0E00               	movlw	0
  7375  0024EA  6E30               	movwf	(___fldiv@b+3)^0,c
  7376  0024EC  0E00               	movlw	0
  7377  0024EE  6E3D               	movwf	___fldiv@sign^0,c
  7378  0024F0                     l4830:
  7379  0024F0  C03E  F044         	movff	___fldiv@new_exp,___fldiv@bexp
  7380  0024F4  A044               	btfss	___fldiv@bexp^0,0,c
  7381  0024F6  EF7F  F012         	goto	u5761
  7382  0024FA  EF81  F012         	goto	u5760
  7383  0024FE                     u5761:
  7384  0024FE  EF84  F012         	goto	l4836
  7385  002502                     u5760:
  7386  002502  8E2F               	bsf	(___fldiv@b+2)^0,7,c
  7387  002504  EF85  F012         	goto	l4838
  7388  002508                     l4836:
  7389  002508  9E2F               	bcf	(___fldiv@b+2)^0,7,c
  7390  00250A                     l4838:
  7391  00250A  90D8               	bcf	status,0,c
  7392  00250C  3044               	rrcf	___fldiv@bexp^0,w,c
  7393  00250E  6E30               	movwf	(___fldiv@b+3)^0,c
  7394  002510  EF3B  F011         	goto	l4752
  7395  002514                     l826:
  7396  002514  0012               	return		;funcret
  7397  002516                     __end_of___fldiv:
  7398                           	callstack 0
  7399                           
  7400 ;; *************** function ___awmod *****************
  7401 ;; Defined at:
  7402 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awmod.c"
  7403 ;; Parameters:    Size  Location     Type
  7404 ;;  dividend        2    5[COMRAM] int 
  7405 ;;  divisor         2    7[COMRAM] int 
  7406 ;; Auto vars:     Size  Location     Type
  7407 ;;  sign            1   10[COMRAM] unsigned char 
  7408 ;;  counter         1    9[COMRAM] unsigned char 
  7409 ;; Return value:  Size  Location     Type
  7410 ;;                  2    5[COMRAM] int 
  7411 ;; Registers used:
  7412 ;;		wreg, status,2, status,0
  7413 ;; Tracked objects:
  7414 ;;		On entry : 0/0
  7415 ;;		On exit  : 0/0
  7416 ;;		Unchanged: 0/0
  7417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7418 ;;      Params:         4       0       0       0       0       0       0       0       0
  7419 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7420 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7421 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7422 ;;Total ram usage:        6 bytes
  7423 ;; Hardware stack levels used: 1
  7424 ;; Hardware stack levels required when called: 2
  7425 ;; This function calls:
  7426 ;;		Nothing
  7427 ;; This function is called by:
  7428 ;;		_efgtoa
  7429 ;; This function uses a non-reentrant model
  7430 ;;
  7431                           
  7432                           	psect	text24
  7433  003694                     __ptext24:
  7434                           	callstack 0
  7435  003694                     ___awmod:
  7436                           	callstack 24
  7437  003694  0E00               	movlw	0
  7438  003696  6E0B               	movwf	___awmod@sign^0,c
  7439  003698  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  7440  00369A  EF53  F01B         	goto	u6020
  7441  00369E  EF51  F01B         	goto	u6021
  7442  0036A2                     u6021:
  7443  0036A2  EF59  F01B         	goto	l5034
  7444  0036A6                     u6020:
  7445  0036A6  6C06               	negf	___awmod@dividend^0,c
  7446  0036A8  1E07               	comf	(___awmod@dividend+1)^0,f,c
  7447  0036AA  B0D8               	btfsc	status,0,c
  7448  0036AC  2A07               	incf	(___awmod@dividend+1)^0,f,c
  7449  0036AE  0E01               	movlw	1
  7450  0036B0  6E0B               	movwf	___awmod@sign^0,c
  7451  0036B2                     l5034:
  7452  0036B2  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  7453  0036B4  EF60  F01B         	goto	u6030
  7454  0036B8  EF5E  F01B         	goto	u6031
  7455  0036BC                     u6031:
  7456  0036BC  EF64  F01B         	goto	l5038
  7457  0036C0                     u6030:
  7458  0036C0  6C08               	negf	___awmod@divisor^0,c
  7459  0036C2  1E09               	comf	(___awmod@divisor+1)^0,f,c
  7460  0036C4  B0D8               	btfsc	status,0,c
  7461  0036C6  2A09               	incf	(___awmod@divisor+1)^0,f,c
  7462  0036C8                     l5038:
  7463  0036C8  5008               	movf	___awmod@divisor^0,w,c
  7464  0036CA  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  7465  0036CC  B4D8               	btfsc	status,2,c
  7466  0036CE  EF6B  F01B         	goto	u6041
  7467  0036D2  EF6D  F01B         	goto	u6040
  7468  0036D6                     u6041:
  7469  0036D6  EF91  F01B         	goto	l5054
  7470  0036DA                     u6040:
  7471  0036DA  0E01               	movlw	1
  7472  0036DC  6E0A               	movwf	___awmod@counter^0,c
  7473  0036DE  EF75  F01B         	goto	l5044
  7474  0036E2                     l5042:
  7475  0036E2  90D8               	bcf	status,0,c
  7476  0036E4  3608               	rlcf	___awmod@divisor^0,f,c
  7477  0036E6  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  7478  0036E8  2A0A               	incf	___awmod@counter^0,f,c
  7479  0036EA                     l5044:
  7480  0036EA  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  7481  0036EC  EF7A  F01B         	goto	u6051
  7482  0036F0  EF7C  F01B         	goto	u6050
  7483  0036F4                     u6051:
  7484  0036F4  EF71  F01B         	goto	l5042
  7485  0036F8                     u6050:
  7486  0036F8                     l5046:
  7487  0036F8  5008               	movf	___awmod@divisor^0,w,c
  7488  0036FA  5C06               	subwf	___awmod@dividend^0,w,c
  7489  0036FC  5009               	movf	(___awmod@divisor+1)^0,w,c
  7490  0036FE  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  7491  003700  A0D8               	btfss	status,0,c
  7492  003702  EF85  F01B         	goto	u6061
  7493  003706  EF87  F01B         	goto	u6060
  7494  00370A                     u6061:
  7495  00370A  EF8B  F01B         	goto	l5050
  7496  00370E                     u6060:
  7497  00370E  5008               	movf	___awmod@divisor^0,w,c
  7498  003710  5E06               	subwf	___awmod@dividend^0,f,c
  7499  003712  5009               	movf	(___awmod@divisor+1)^0,w,c
  7500  003714  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  7501  003716                     l5050:
  7502  003716  90D8               	bcf	status,0,c
  7503  003718  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  7504  00371A  3208               	rrcf	___awmod@divisor^0,f,c
  7505  00371C  2E0A               	decfsz	___awmod@counter^0,f,c
  7506  00371E  EF7C  F01B         	goto	l5046
  7507  003722                     l5054:
  7508  003722  500B               	movf	___awmod@sign^0,w,c
  7509  003724  B4D8               	btfsc	status,2,c
  7510  003726  EF97  F01B         	goto	u6071
  7511  00372A  EF99  F01B         	goto	u6070
  7512  00372E                     u6071:
  7513  00372E  EF9D  F01B         	goto	l5058
  7514  003732                     u6070:
  7515  003732  6C06               	negf	___awmod@dividend^0,c
  7516  003734  1E07               	comf	(___awmod@dividend+1)^0,f,c
  7517  003736  B0D8               	btfsc	status,0,c
  7518  003738  2A07               	incf	(___awmod@dividend+1)^0,f,c
  7519  00373A                     l5058:
  7520  00373A  C006  F006         	movff	___awmod@dividend,?___awmod
  7521  00373E  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  7522  003742  0012               	return		;funcret
  7523  003744                     __end_of___awmod:
  7524                           	callstack 0
  7525                           
  7526 ;; *************** function ___awdiv *****************
  7527 ;; Defined at:
  7528 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  dividend        2    5[COMRAM] int 
  7531 ;;  divisor         2    7[COMRAM] int 
  7532 ;; Auto vars:     Size  Location     Type
  7533 ;;  quotient        2   11[COMRAM] int 
  7534 ;;  sign            1   10[COMRAM] unsigned char 
  7535 ;;  counter         1    9[COMRAM] unsigned char 
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  2    5[COMRAM] int 
  7538 ;; Registers used:
  7539 ;;		wreg, status,2, status,0
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7545 ;;      Params:         4       0       0       0       0       0       0       0       0
  7546 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7548 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7549 ;;Total ram usage:        8 bytes
  7550 ;; Hardware stack levels used: 1
  7551 ;; Hardware stack levels required when called: 2
  7552 ;; This function calls:
  7553 ;;		Nothing
  7554 ;; This function is called by:
  7555 ;;		_efgtoa
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text25
  7560  003454                     __ptext25:
  7561                           	callstack 0
  7562  003454                     ___awdiv:
  7563                           	callstack 24
  7564  003454  0E00               	movlw	0
  7565  003456  6E0B               	movwf	___awdiv@sign^0,c
  7566  003458  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  7567  00345A  EF33  F01A         	goto	u5960
  7568  00345E  EF31  F01A         	goto	u5961
  7569  003462                     u5961:
  7570  003462  EF39  F01A         	goto	l4990
  7571  003466                     u5960:
  7572  003466  6C08               	negf	___awdiv@divisor^0,c
  7573  003468  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  7574  00346A  B0D8               	btfsc	status,0,c
  7575  00346C  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  7576  00346E  0E01               	movlw	1
  7577  003470  6E0B               	movwf	___awdiv@sign^0,c
  7578  003472                     l4990:
  7579  003472  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  7580  003474  EF40  F01A         	goto	u5970
  7581  003478  EF3E  F01A         	goto	u5971
  7582  00347C                     u5971:
  7583  00347C  EF46  F01A         	goto	l4996
  7584  003480                     u5970:
  7585  003480  6C06               	negf	___awdiv@dividend^0,c
  7586  003482  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  7587  003484  B0D8               	btfsc	status,0,c
  7588  003486  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  7589  003488  0E01               	movlw	1
  7590  00348A  1A0B               	xorwf	___awdiv@sign^0,f,c
  7591  00348C                     l4996:
  7592  00348C  0E00               	movlw	0
  7593  00348E  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  7594  003490  0E00               	movlw	0
  7595  003492  6E0C               	movwf	___awdiv@quotient^0,c
  7596  003494  5008               	movf	___awdiv@divisor^0,w,c
  7597  003496  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  7598  003498  B4D8               	btfsc	status,2,c
  7599  00349A  EF51  F01A         	goto	u5981
  7600  00349E  EF53  F01A         	goto	u5980
  7601  0034A2                     u5981:
  7602  0034A2  EF7B  F01A         	goto	l5018
  7603  0034A6                     u5980:
  7604  0034A6  0E01               	movlw	1
  7605  0034A8  6E0A               	movwf	___awdiv@counter^0,c
  7606  0034AA  EF5B  F01A         	goto	l5004
  7607  0034AE                     l5002:
  7608  0034AE  90D8               	bcf	status,0,c
  7609  0034B0  3608               	rlcf	___awdiv@divisor^0,f,c
  7610  0034B2  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  7611  0034B4  2A0A               	incf	___awdiv@counter^0,f,c
  7612  0034B6                     l5004:
  7613  0034B6  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  7614  0034B8  EF60  F01A         	goto	u5991
  7615  0034BC  EF62  F01A         	goto	u5990
  7616  0034C0                     u5991:
  7617  0034C0  EF57  F01A         	goto	l5002
  7618  0034C4                     u5990:
  7619  0034C4                     l5006:
  7620  0034C4  90D8               	bcf	status,0,c
  7621  0034C6  360C               	rlcf	___awdiv@quotient^0,f,c
  7622  0034C8  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  7623  0034CA  5008               	movf	___awdiv@divisor^0,w,c
  7624  0034CC  5C06               	subwf	___awdiv@dividend^0,w,c
  7625  0034CE  5009               	movf	(___awdiv@divisor+1)^0,w,c
  7626  0034D0  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  7627  0034D2  A0D8               	btfss	status,0,c
  7628  0034D4  EF6E  F01A         	goto	u6001
  7629  0034D8  EF70  F01A         	goto	u6000
  7630  0034DC                     u6001:
  7631  0034DC  EF75  F01A         	goto	l5014
  7632  0034E0                     u6000:
  7633  0034E0  5008               	movf	___awdiv@divisor^0,w,c
  7634  0034E2  5E06               	subwf	___awdiv@dividend^0,f,c
  7635  0034E4  5009               	movf	(___awdiv@divisor+1)^0,w,c
  7636  0034E6  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  7637  0034E8  800C               	bsf	___awdiv@quotient^0,0,c
  7638  0034EA                     l5014:
  7639  0034EA  90D8               	bcf	status,0,c
  7640  0034EC  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  7641  0034EE  3208               	rrcf	___awdiv@divisor^0,f,c
  7642  0034F0  2E0A               	decfsz	___awdiv@counter^0,f,c
  7643  0034F2  EF62  F01A         	goto	l5006
  7644  0034F6                     l5018:
  7645  0034F6  500B               	movf	___awdiv@sign^0,w,c
  7646  0034F8  B4D8               	btfsc	status,2,c
  7647  0034FA  EF81  F01A         	goto	u6011
  7648  0034FE  EF83  F01A         	goto	u6010
  7649  003502                     u6011:
  7650  003502  EF87  F01A         	goto	l5022
  7651  003506                     u6010:
  7652  003506  6C0C               	negf	___awdiv@quotient^0,c
  7653  003508  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  7654  00350A  B0D8               	btfsc	status,0,c
  7655  00350C  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  7656  00350E                     l5022:
  7657  00350E  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  7658  003512  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  7659  003516  0012               	return		;funcret
  7660  003518                     __end_of___awdiv:
  7661                           	callstack 0
  7662                           
  7663 ;; *************** function _atoi *****************
  7664 ;; Defined at:
  7665 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\atoi.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  s               2   12[COMRAM] PTR const unsigned char 
  7668 ;;		 -> STR_2(6), 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  n               2   20[COMRAM] int 
  7671 ;;  neg             2   18[COMRAM] int 
  7672 ;; Return value:  Size  Location     Type
  7673 ;;                  2   12[COMRAM] int 
  7674 ;; Registers used:
  7675 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7676 ;; Tracked objects:
  7677 ;;		On entry : 0/0
  7678 ;;		On exit  : 0/0
  7679 ;;		Unchanged: 0/0
  7680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7681 ;;      Params:         2       0       0       0       0       0       0       0       0
  7682 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7683 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7684 ;;      Totals:        10       0       0       0       0       0       0       0       0
  7685 ;;Total ram usage:       10 bytes
  7686 ;; Hardware stack levels used: 1
  7687 ;; Hardware stack levels required when called: 3
  7688 ;; This function calls:
  7689 ;;		___wmul
  7690 ;;		_isdigit
  7691 ;;		_isspace
  7692 ;; This function is called by:
  7693 ;;		_vfpfcnvrt
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text26
  7698  002C42                     __ptext26:
  7699                           	callstack 0
  7700  002C42                     _atoi:
  7701                           	callstack 24
  7702  002C42  0E00               	movlw	0
  7703  002C44  6E16               	movwf	(atoi@n+1)^0,c
  7704  002C46  0E00               	movlw	0
  7705  002C48  6E15               	movwf	atoi@n^0,c
  7706  002C4A  0E00               	movlw	0
  7707  002C4C  6E14               	movwf	(atoi@neg+1)^0,c
  7708  002C4E  0E00               	movlw	0
  7709  002C50  6E13               	movwf	atoi@neg^0,c
  7710  002C52  EF2D  F016         	goto	l5566
  7711  002C56                     l5562:
  7712  002C56  4A0D               	infsnz	atoi@s^0,f,c
  7713  002C58  2A0E               	incf	(atoi@s+1)^0,f,c
  7714  002C5A                     l5566:
  7715  002C5A  C00D  FFF6         	movff	atoi@s,tblptrl
  7716  002C5E  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7717  002C62                     	if	0	;tblptru may be non-zero
  7718  002C62                     	endif
  7719  002C62                     	if	0	;tblptru may be non-zero
  7720  002C62                     	endif
  7721  002C62  0008               	tblrd		*
  7722  002C64  50F5               	movf	tablat,w,c
  7723  002C66  0A20               	xorlw	32
  7724  002C68  B4D8               	btfsc	status,2,c
  7725  002C6A  EF39  F016         	goto	u7001
  7726  002C6E  EF3B  F016         	goto	u7000
  7727  002C72                     u7001:
  7728  002C72  EF2B  F016         	goto	l5562
  7729  002C76                     u7000:
  7730  002C76  0EF7               	movlw	247
  7731  002C78  6E0F               	movwf	??_atoi^0,c
  7732  002C7A  0EFF               	movlw	255
  7733  002C7C  6E10               	movwf	(??_atoi+1)^0,c
  7734  002C7E  C00D  FFF6         	movff	atoi@s,tblptrl
  7735  002C82  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7736  002C86                     	if	0	;tblptru may be non-zero
  7737  002C86                     	endif
  7738  002C86                     	if	0	;tblptru may be non-zero
  7739  002C86                     	endif
  7740  002C86  0008               	tblrd		*
  7741  002C88  50F5               	movf	tablat,w,c
  7742  002C8A  6E11               	movwf	(??_atoi+2)^0,c
  7743  002C8C  6A12               	clrf	(??_atoi+3)^0,c
  7744  002C8E  500F               	movf	??_atoi^0,w,c
  7745  002C90  2611               	addwf	(??_atoi+2)^0,f,c
  7746  002C92  5010               	movf	(??_atoi+1)^0,w,c
  7747  002C94  2212               	addwfc	(??_atoi+3)^0,f,c
  7748  002C96  5012               	movf	(??_atoi+3)^0,w,c
  7749  002C98  E109               	bnz	u7010
  7750  002C9A  0E05               	movlw	5
  7751  002C9C  5C11               	subwf	(??_atoi+2)^0,w,c
  7752  002C9E  A0D8               	btfss	status,0,c
  7753  002CA0  EF54  F016         	goto	u7011
  7754  002CA4  EF56  F016         	goto	u7010
  7755  002CA8                     u7011:
  7756  002CA8  EF2B  F016         	goto	l5562
  7757  002CAC                     u7010:
  7758  002CAC  EF60  F016         	goto	l5574
  7759  002CB0                     l5570:
  7760  002CB0  0E00               	movlw	0
  7761  002CB2  6E14               	movwf	(atoi@neg+1)^0,c
  7762  002CB4  0E01               	movlw	1
  7763  002CB6  6E13               	movwf	atoi@neg^0,c
  7764  002CB8                     l5572:
  7765  002CB8  4A0D               	infsnz	atoi@s^0,f,c
  7766  002CBA  2A0E               	incf	(atoi@s+1)^0,f,c
  7767  002CBC  EF95  F016         	goto	l5582
  7768  002CC0                     l5574:
  7769  002CC0  C00D  FFF6         	movff	atoi@s,tblptrl
  7770  002CC4  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7771  002CC8                     	if	0	;tblptru may be non-zero
  7772  002CC8                     	endif
  7773  002CC8                     	if	0	;tblptru may be non-zero
  7774  002CC8                     	endif
  7775  002CC8  0008               	tblrd		*
  7776  002CCA  50F5               	movf	tablat,w,c
  7777  002CCC  6E0F               	movwf	??_atoi^0,c
  7778  002CCE  6A10               	clrf	(??_atoi+1)^0,c
  7779                           
  7780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7781                           ; Switch size 1, requested type "simple"
  7782                           ; Number of cases is 1, Range of values is 0 to 0
  7783                           ; switch strategies available:
  7784                           ; Name         Instructions Cycles
  7785                           ; simple_byte            4     3 (average)
  7786                           ;	Chosen strategy is simple_byte
  7787  002CD0  5010               	movf	(??_atoi+1)^0,w,c
  7788  002CD2  0A00               	xorlw	0	; case 0
  7789  002CD4  B4D8               	btfsc	status,2,c
  7790  002CD6  EF6F  F016         	goto	l5832
  7791  002CDA  EF95  F016         	goto	l5582
  7792  002CDE                     l5832:
  7793                           
  7794                           ; Switch size 1, requested type "simple"
  7795                           ; Number of cases is 2, Range of values is 43 to 45
  7796                           ; switch strategies available:
  7797                           ; Name         Instructions Cycles
  7798                           ; simple_byte            7     4 (average)
  7799                           ;	Chosen strategy is simple_byte
  7800  002CDE  500F               	movf	??_atoi^0,w,c
  7801  002CE0  0A2B               	xorlw	43	; case 43
  7802  002CE2  B4D8               	btfsc	status,2,c
  7803  002CE4  EF5C  F016         	goto	l5572
  7804  002CE8  0A06               	xorlw	6	; case 45
  7805  002CEA  B4D8               	btfsc	status,2,c
  7806  002CEC  EF58  F016         	goto	l5570
  7807  002CF0  EF95  F016         	goto	l5582
  7808  002CF4                     l5576:
  7809  002CF4  C015  F006         	movff	atoi@n,___wmul@multiplier
  7810  002CF8  C016  F007         	movff	atoi@n+1,___wmul@multiplier+1
  7811  002CFC  0E00               	movlw	0
  7812  002CFE  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  7813  002D00  0E0A               	movlw	10
  7814  002D02  6E08               	movwf	___wmul@multiplicand^0,c
  7815  002D04  ECFB  F01D         	call	___wmul	;wreg free
  7816  002D08  C00D  FFF6         	movff	atoi@s,tblptrl
  7817  002D0C  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7818  002D10                     	if	0	;tblptru may be non-zero
  7819  002D10                     	endif
  7820  002D10                     	if	0	;tblptru may be non-zero
  7821  002D10                     	endif
  7822  002D10  0008               	tblrd		*
  7823  002D12  50F5               	movf	tablat,w,c
  7824  002D14  5E06               	subwf	?___wmul^0,f,c
  7825  002D16  0E00               	movlw	0
  7826  002D18  5A07               	subwfb	(?___wmul+1)^0,f,c
  7827  002D1A  0E30               	movlw	48
  7828  002D1C  2406               	addwf	?___wmul^0,w,c
  7829  002D1E  6E15               	movwf	atoi@n^0,c
  7830  002D20  0E00               	movlw	0
  7831  002D22  2007               	addwfc	(?___wmul+1)^0,w,c
  7832  002D24  6E16               	movwf	(atoi@n+1)^0,c
  7833  002D26  EF5C  F016         	goto	l5572
  7834  002D2A                     l5582:
  7835  002D2A  0ED0               	movlw	208
  7836  002D2C  6E0F               	movwf	??_atoi^0,c
  7837  002D2E  0EFF               	movlw	255
  7838  002D30  6E10               	movwf	(??_atoi+1)^0,c
  7839  002D32  C00D  FFF6         	movff	atoi@s,tblptrl
  7840  002D36  C00E  FFF7         	movff	atoi@s+1,tblptrh
  7841  002D3A                     	if	0	;tblptru may be non-zero
  7842  002D3A                     	endif
  7843  002D3A                     	if	0	;tblptru may be non-zero
  7844  002D3A                     	endif
  7845  002D3A  0008               	tblrd		*
  7846  002D3C  50F5               	movf	tablat,w,c
  7847  002D3E  6E11               	movwf	(??_atoi+2)^0,c
  7848  002D40  6A12               	clrf	(??_atoi+3)^0,c
  7849  002D42  500F               	movf	??_atoi^0,w,c
  7850  002D44  2611               	addwf	(??_atoi+2)^0,f,c
  7851  002D46  5010               	movf	(??_atoi+1)^0,w,c
  7852  002D48  2212               	addwfc	(??_atoi+3)^0,f,c
  7853  002D4A  5012               	movf	(??_atoi+3)^0,w,c
  7854  002D4C  E109               	bnz	u7020
  7855  002D4E  0E0A               	movlw	10
  7856  002D50  5C11               	subwf	(??_atoi+2)^0,w,c
  7857  002D52  A0D8               	btfss	status,0,c
  7858  002D54  EFAE  F016         	goto	u7021
  7859  002D58  EFB0  F016         	goto	u7020
  7860  002D5C                     u7021:
  7861  002D5C  EF7A  F016         	goto	l5576
  7862  002D60                     u7020:
  7863  002D60  5013               	movf	atoi@neg^0,w,c
  7864  002D62  1014               	iorwf	(atoi@neg+1)^0,w,c
  7865  002D64  A4D8               	btfss	status,2,c
  7866  002D66  EFB7  F016         	goto	u7031
  7867  002D6A  EFB9  F016         	goto	u7030
  7868  002D6E                     u7031:
  7869  002D6E  EFC7  F016         	goto	l1115
  7870  002D72                     u7030:
  7871  002D72  C015  F00F         	movff	atoi@n,??_atoi
  7872  002D76  C016  F010         	movff	atoi@n+1,??_atoi+1
  7873  002D7A  1E0F               	comf	??_atoi^0,f,c
  7874  002D7C  1E10               	comf	(??_atoi+1)^0,f,c
  7875  002D7E  4A0F               	infsnz	??_atoi^0,f,c
  7876  002D80  2A10               	incf	(??_atoi+1)^0,f,c
  7877  002D82  C00F  F00D         	movff	??_atoi,?_atoi
  7878  002D86  C010  F00E         	movff	??_atoi+1,?_atoi+1
  7879  002D8A  EFCB  F016         	goto	l1118
  7880  002D8E                     l1115:
  7881  002D8E  C015  F00D         	movff	atoi@n,?_atoi
  7882  002D92  C016  F00E         	movff	atoi@n+1,?_atoi+1
  7883  002D96                     l1118:
  7884  002D96  0012               	return		;funcret
  7885  002D98                     __end_of_atoi:
  7886                           	callstack 0
  7887                           
  7888 ;; *************** function _isspace *****************
  7889 ;; Defined at:
  7890 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isspace.c"
  7891 ;; Parameters:    Size  Location     Type
  7892 ;;  c               2    5[COMRAM] int 
  7893 ;; Auto vars:     Size  Location     Type
  7894 ;;		None
  7895 ;; Return value:  Size  Location     Type
  7896 ;;                  2    5[COMRAM] int 
  7897 ;; Registers used:
  7898 ;;		wreg, status,2, status,0
  7899 ;; Tracked objects:
  7900 ;;		On entry : 0/0
  7901 ;;		On exit  : 0/0
  7902 ;;		Unchanged: 0/0
  7903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7904 ;;      Params:         2       0       0       0       0       0       0       0       0
  7905 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7906 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7907 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7908 ;;Total ram usage:        7 bytes
  7909 ;; Hardware stack levels used: 1
  7910 ;; Hardware stack levels required when called: 2
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_atoi
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text27
  7919  003952                     __ptext27:
  7920                           	callstack 0
  7921  003952                     _isspace:
  7922                           	callstack 24
  7923  003952  0E01               	movlw	1
  7924  003954  6E0C               	movwf	_isspace$1978^0,c
  7925  003956  0E20               	movlw	32
  7926  003958  1806               	xorwf	isspace@c^0,w,c
  7927  00395A  1007               	iorwf	(isspace@c+1)^0,w,c
  7928  00395C  B4D8               	btfsc	status,2,c
  7929  00395E  EFB3  F01C         	goto	u6501
  7930  003962  EFB5  F01C         	goto	u6500
  7931  003966                     u6501:
  7932  003966  EFCE  F01C         	goto	l5250
  7933  00396A                     u6500:
  7934  00396A  0EF7               	movlw	247
  7935  00396C  6E08               	movwf	??_isspace^0,c
  7936  00396E  0EFF               	movlw	255
  7937  003970  6E09               	movwf	(??_isspace+1)^0,c
  7938  003972  C006  F00A         	movff	isspace@c,??_isspace+2
  7939  003976  C007  F00B         	movff	isspace@c+1,??_isspace+3
  7940  00397A  5008               	movf	??_isspace^0,w,c
  7941  00397C  260A               	addwf	(??_isspace+2)^0,f,c
  7942  00397E  5009               	movf	(??_isspace+1)^0,w,c
  7943  003980  220B               	addwfc	(??_isspace+3)^0,f,c
  7944  003982  500B               	movf	(??_isspace+3)^0,w,c
  7945  003984  E109               	bnz	u6510
  7946  003986  0E05               	movlw	5
  7947  003988  5C0A               	subwf	(??_isspace+2)^0,w,c
  7948  00398A  A0D8               	btfss	status,0,c
  7949  00398C  EFCA  F01C         	goto	u6511
  7950  003990  EFCC  F01C         	goto	u6510
  7951  003994                     u6511:
  7952  003994  EFCE  F01C         	goto	l5250
  7953  003998                     u6510:
  7954  003998  0E00               	movlw	0
  7955  00399A  6E0C               	movwf	_isspace$1978^0,c
  7956  00399C                     l5250:
  7957  00399C  C00C  F006         	movff	_isspace$1978,?_isspace
  7958  0039A0  6A07               	clrf	(?_isspace+1)^0,c
  7959  0039A2  0012               	return		;funcret
  7960  0039A4                     __end_of_isspace:
  7961                           	callstack 0
  7962                           
  7963 ;; *************** function _isdigit *****************
  7964 ;; Defined at:
  7965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\isdigit.c"
  7966 ;; Parameters:    Size  Location     Type
  7967 ;;  c               2    5[COMRAM] int 
  7968 ;; Auto vars:     Size  Location     Type
  7969 ;;		None
  7970 ;; Return value:  Size  Location     Type
  7971 ;;                  2    5[COMRAM] int 
  7972 ;; Registers used:
  7973 ;;		wreg, status,2, status,0
  7974 ;; Tracked objects:
  7975 ;;		On entry : 0/0
  7976 ;;		On exit  : 0/0
  7977 ;;		Unchanged: 0/0
  7978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7979 ;;      Params:         2       0       0       0       0       0       0       0       0
  7980 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7981 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7982 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7983 ;;Total ram usage:        6 bytes
  7984 ;; Hardware stack levels used: 1
  7985 ;; Hardware stack levels required when called: 2
  7986 ;; This function calls:
  7987 ;;		Nothing
  7988 ;; This function is called by:
  7989 ;;		_vfpfcnvrt
  7990 ;;		_atoi
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text28
  7995  003B32                     __ptext28:
  7996                           	callstack 0
  7997  003B32                     _isdigit:
  7998                           	callstack 25
  7999  003B32  0ED0               	movlw	208
  8000  003B34  6E08               	movwf	??_isdigit^0,c
  8001  003B36  0EFF               	movlw	255
  8002  003B38  6E09               	movwf	(??_isdigit+1)^0,c
  8003  003B3A  C006  F00A         	movff	isdigit@c,??_isdigit+2
  8004  003B3E  C007  F00B         	movff	isdigit@c+1,??_isdigit+3
  8005  003B42  5008               	movf	??_isdigit^0,w,c
  8006  003B44  260A               	addwf	(??_isdigit+2)^0,f,c
  8007  003B46  5009               	movf	(??_isdigit+1)^0,w,c
  8008  003B48  220B               	addwfc	(??_isdigit+3)^0,f,c
  8009  003B4A  500B               	movf	(??_isdigit+3)^0,w,c
  8010  003B4C  E10A               	bnz	u6480
  8011  003B4E  0E0A               	movlw	10
  8012  003B50  5C0A               	subwf	(??_isdigit+2)^0,w,c
  8013  003B52  A0D8               	btfss	status,0,c
  8014  003B54  EFAE  F01D         	goto	u6481
  8015  003B58  EFB1  F01D         	goto	u6480
  8016  003B5C                     u6481:
  8017  003B5C  0E01               	movlw	1
  8018  003B5E  EFB2  F01D         	goto	u6490
  8019  003B62                     u6480:
  8020  003B62  0E00               	movlw	0
  8021  003B64                     u6490:
  8022  003B64  6E06               	movwf	?_isdigit^0,c
  8023  003B66  6A07               	clrf	(?_isdigit+1)^0,c
  8024  003B68  0012               	return		;funcret
  8025  003B6A                     __end_of_isdigit:
  8026                           	callstack 0
  8027                           
  8028 ;; *************** function ___wmul *****************
  8029 ;; Defined at:
  8030 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
  8031 ;; Parameters:    Size  Location     Type
  8032 ;;  multiplier      2    5[COMRAM] unsigned int 
  8033 ;;  multiplicand    2    7[COMRAM] unsigned int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  product         2    9[COMRAM] unsigned int 
  8036 ;; Return value:  Size  Location     Type
  8037 ;;                  2    5[COMRAM] unsigned int 
  8038 ;; Registers used:
  8039 ;;		wreg, status,2, status,0, prodl, prodh
  8040 ;; Tracked objects:
  8041 ;;		On entry : 0/0
  8042 ;;		On exit  : 0/0
  8043 ;;		Unchanged: 0/0
  8044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8045 ;;      Params:         4       0       0       0       0       0       0       0       0
  8046 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8047 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8048 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8049 ;;Total ram usage:        6 bytes
  8050 ;; Hardware stack levels used: 1
  8051 ;; Hardware stack levels required when called: 2
  8052 ;; This function calls:
  8053 ;;		Nothing
  8054 ;; This function is called by:
  8055 ;;		_atoi
  8056 ;; This function uses a non-reentrant model
  8057 ;;
  8058                           
  8059                           	psect	text29
  8060  003BF6                     __ptext29:
  8061                           	callstack 0
  8062  003BF6                     ___wmul:
  8063                           	callstack 24
  8064  003BF6  5006               	movf	___wmul@multiplier^0,w,c
  8065  003BF8  0208               	mulwf	___wmul@multiplicand^0,c
  8066  003BFA  CFF3 F00A          	movff	prodl,___wmul@product
  8067  003BFE  CFF4 F00B          	movff	prodh,___wmul@product+1
  8068  003C02  5006               	movf	___wmul@multiplier^0,w,c
  8069  003C04  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  8070  003C06  50F3               	movf	243,w,c
  8071  003C08  260B               	addwf	(___wmul@product+1)^0,f,c
  8072  003C0A  5007               	movf	(___wmul@multiplier+1)^0,w,c
  8073  003C0C  0208               	mulwf	___wmul@multiplicand^0,c
  8074  003C0E  50F3               	movf	243,w,c
  8075  003C10  260B               	addwf	(___wmul@product+1)^0,f,c
  8076  003C12  C00A  F006         	movff	___wmul@product,?___wmul
  8077  003C16  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  8078  003C1A  0012               	return		;funcret
  8079  003C1C                     __end_of___wmul:
  8080                           	callstack 0
  8081                           
  8082 ;; *************** function ___xxtofl *****************
  8083 ;; Defined at:
  8084 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\xxtofl.c"
  8085 ;; Parameters:    Size  Location     Type
  8086 ;;  sign            1    wreg     unsigned char 
  8087 ;;  val             4    5[COMRAM] long 
  8088 ;; Auto vars:     Size  Location     Type
  8089 ;;  sign            1   13[COMRAM] unsigned char 
  8090 ;;  arg             4   15[COMRAM] unsigned long 
  8091 ;;  exp             1   14[COMRAM] unsigned char 
  8092 ;; Return value:  Size  Location     Type
  8093 ;;                  4    5[COMRAM] unsigned char 
  8094 ;; Registers used:
  8095 ;;		wreg, status,2, status,0
  8096 ;; Tracked objects:
  8097 ;;		On entry : 0/0
  8098 ;;		On exit  : 0/0
  8099 ;;		Unchanged: 0/0
  8100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8101 ;;      Params:         4       0       0       0       0       0       0       0       0
  8102 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8103 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8104 ;;      Totals:        14       0       0       0       0       0       0       0       0
  8105 ;;Total ram usage:       14 bytes
  8106 ;; Hardware stack levels used: 1
  8107 ;; Hardware stack levels required when called: 2
  8108 ;; This function calls:
  8109 ;;		Nothing
  8110 ;; This function is called by:
  8111 ;;		_main
  8112 ;; This function uses a non-reentrant model
  8113 ;;
  8114                           
  8115                           	psect	text30
  8116  002A8E                     __ptext30:
  8117                           	callstack 0
  8118  002A8E                     ___xxtofl:
  8119                           	callstack 28
  8120                           
  8121                           ;incstack = 0
  8122                           ;___xxtofl@sign stored from wreg
  8123  002A8E  6E0E               	movwf	___xxtofl@sign^0,c
  8124  002A90  500E               	movf	___xxtofl@sign^0,w,c
  8125  002A92  B4D8               	btfsc	status,2,c
  8126  002A94  EF4E  F015         	goto	u4801
  8127  002A98  EF50  F015         	goto	u4800
  8128  002A9C                     u4801:
  8129  002A9C  EF72  F015         	goto	l899
  8130  002AA0                     u4800:
  8131  002AA0  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  8132  002AA2  EF57  F015         	goto	u4810
  8133  002AA6  EF55  F015         	goto	u4811
  8134  002AAA                     u4811:
  8135  002AAA  EF72  F015         	goto	l899
  8136  002AAE                     u4810:
  8137  002AAE  C006  F00A         	movff	___xxtofl@val,??___xxtofl
  8138  002AB2  C007  F00B         	movff	___xxtofl@val+1,??___xxtofl+1
  8139  002AB6  C008  F00C         	movff	___xxtofl@val+2,??___xxtofl+2
  8140  002ABA  C009  F00D         	movff	___xxtofl@val+3,??___xxtofl+3
  8141  002ABE  1E0A               	comf	??___xxtofl^0,f,c
  8142  002AC0  1E0B               	comf	(??___xxtofl+1)^0,f,c
  8143  002AC2  1E0C               	comf	(??___xxtofl+2)^0,f,c
  8144  002AC4  1E0D               	comf	(??___xxtofl+3)^0,f,c
  8145  002AC6  2A0A               	incf	??___xxtofl^0,f,c
  8146  002AC8  0E00               	movlw	0
  8147  002ACA  220B               	addwfc	(??___xxtofl+1)^0,f,c
  8148  002ACC  220C               	addwfc	(??___xxtofl+2)^0,f,c
  8149  002ACE  220D               	addwfc	(??___xxtofl+3)^0,f,c
  8150  002AD0  C00A  F010         	movff	??___xxtofl,___xxtofl@arg
  8151  002AD4  C00B  F011         	movff	??___xxtofl+1,___xxtofl@arg+1
  8152  002AD8  C00C  F012         	movff	??___xxtofl+2,___xxtofl@arg+2
  8153  002ADC  C00D  F013         	movff	??___xxtofl+3,___xxtofl@arg+3
  8154  002AE0  EF7A  F015         	goto	l4284
  8155  002AE4                     l899:
  8156  002AE4  C006  F010         	movff	___xxtofl@val,___xxtofl@arg
  8157  002AE8  C007  F011         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8158  002AEC  C008  F012         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8159  002AF0  C009  F013         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8160  002AF4                     l4284:
  8161  002AF4  5006               	movf	___xxtofl@val^0,w,c
  8162  002AF6  1007               	iorwf	(___xxtofl@val+1)^0,w,c
  8163  002AF8  1008               	iorwf	(___xxtofl@val+2)^0,w,c
  8164  002AFA  1009               	iorwf	(___xxtofl@val+3)^0,w,c
  8165  002AFC  A4D8               	btfss	status,2,c
  8166  002AFE  EF83  F015         	goto	u4821
  8167  002B02  EF85  F015         	goto	u4820
  8168  002B06                     u4821:
  8169  002B06  EF8F  F015         	goto	l4290
  8170  002B0A                     u4820:
  8171  002B0A  0E00               	movlw	0
  8172  002B0C  6E06               	movwf	?___xxtofl^0,c
  8173  002B0E  0E00               	movlw	0
  8174  002B10  6E07               	movwf	(?___xxtofl+1)^0,c
  8175  002B12  0E00               	movlw	0
  8176  002B14  6E08               	movwf	(?___xxtofl+2)^0,c
  8177  002B16  0E00               	movlw	0
  8178  002B18  6E09               	movwf	(?___xxtofl+3)^0,c
  8179  002B1A  EF20  F016         	goto	l902
  8180  002B1E                     l4290:
  8181  002B1E  0E96               	movlw	150
  8182  002B20  6E0F               	movwf	___xxtofl@exp^0,c
  8183  002B22  EF99  F015         	goto	l4294
  8184  002B26                     l4292:
  8185  002B26  2A0F               	incf	___xxtofl@exp^0,f,c
  8186  002B28  90D8               	bcf	status,0,c
  8187  002B2A  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  8188  002B2C  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  8189  002B2E  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  8190  002B30  3210               	rrcf	___xxtofl@arg^0,f,c
  8191  002B32                     l4294:
  8192  002B32  0E00               	movlw	0
  8193  002B34  1410               	andwf	___xxtofl@arg^0,w,c
  8194  002B36  6E0A               	movwf	??___xxtofl^0,c
  8195  002B38  0E00               	movlw	0
  8196  002B3A  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  8197  002B3C  6E0B               	movwf	(??___xxtofl+1)^0,c
  8198  002B3E  0E00               	movlw	0
  8199  002B40  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  8200  002B42  6E0C               	movwf	(??___xxtofl+2)^0,c
  8201  002B44  0EFE               	movlw	254
  8202  002B46  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  8203  002B48  6E0D               	movwf	(??___xxtofl+3)^0,c
  8204  002B4A  500A               	movf	??___xxtofl^0,w,c
  8205  002B4C  100B               	iorwf	(??___xxtofl+1)^0,w,c
  8206  002B4E  100C               	iorwf	(??___xxtofl+2)^0,w,c
  8207  002B50  100D               	iorwf	(??___xxtofl+3)^0,w,c
  8208  002B52  A4D8               	btfss	status,2,c
  8209  002B54  EFAE  F015         	goto	u4831
  8210  002B58  EFB0  F015         	goto	u4830
  8211  002B5C                     u4831:
  8212  002B5C  EF93  F015         	goto	l4292
  8213  002B60                     u4830:
  8214  002B60  EFBE  F015         	goto	l906
  8215  002B64                     l4296:
  8216  002B64  2A0F               	incf	___xxtofl@exp^0,f,c
  8217  002B66  0E01               	movlw	1
  8218  002B68  2610               	addwf	___xxtofl@arg^0,f,c
  8219  002B6A  0E00               	movlw	0
  8220  002B6C  2211               	addwfc	(___xxtofl@arg+1)^0,f,c
  8221  002B6E  2212               	addwfc	(___xxtofl@arg+2)^0,f,c
  8222  002B70  2213               	addwfc	(___xxtofl@arg+3)^0,f,c
  8223  002B72  90D8               	bcf	status,0,c
  8224  002B74  3213               	rrcf	(___xxtofl@arg+3)^0,f,c
  8225  002B76  3212               	rrcf	(___xxtofl@arg+2)^0,f,c
  8226  002B78  3211               	rrcf	(___xxtofl@arg+1)^0,f,c
  8227  002B7A  3210               	rrcf	___xxtofl@arg^0,f,c
  8228  002B7C                     l906:
  8229  002B7C  0E00               	movlw	0
  8230  002B7E  1410               	andwf	___xxtofl@arg^0,w,c
  8231  002B80  6E0A               	movwf	??___xxtofl^0,c
  8232  002B82  0E00               	movlw	0
  8233  002B84  1411               	andwf	(___xxtofl@arg+1)^0,w,c
  8234  002B86  6E0B               	movwf	(??___xxtofl+1)^0,c
  8235  002B88  0E00               	movlw	0
  8236  002B8A  1412               	andwf	(___xxtofl@arg+2)^0,w,c
  8237  002B8C  6E0C               	movwf	(??___xxtofl+2)^0,c
  8238  002B8E  0EFF               	movlw	255
  8239  002B90  1413               	andwf	(___xxtofl@arg+3)^0,w,c
  8240  002B92  6E0D               	movwf	(??___xxtofl+3)^0,c
  8241  002B94  500A               	movf	??___xxtofl^0,w,c
  8242  002B96  100B               	iorwf	(??___xxtofl+1)^0,w,c
  8243  002B98  100C               	iorwf	(??___xxtofl+2)^0,w,c
  8244  002B9A  100D               	iorwf	(??___xxtofl+3)^0,w,c
  8245  002B9C  A4D8               	btfss	status,2,c
  8246  002B9E  EFD3  F015         	goto	u4841
  8247  002BA2  EFD5  F015         	goto	u4840
  8248  002BA6                     u4841:
  8249  002BA6  EFB2  F015         	goto	l4296
  8250  002BAA                     u4840:
  8251  002BAA  EFDD  F015         	goto	l4304
  8252  002BAE                     l4302:
  8253  002BAE  060F               	decf	___xxtofl@exp^0,f,c
  8254  002BB0  90D8               	bcf	status,0,c
  8255  002BB2  3610               	rlcf	___xxtofl@arg^0,f,c
  8256  002BB4  3611               	rlcf	(___xxtofl@arg+1)^0,f,c
  8257  002BB6  3612               	rlcf	(___xxtofl@arg+2)^0,f,c
  8258  002BB8  3613               	rlcf	(___xxtofl@arg+3)^0,f,c
  8259  002BBA                     l4304:
  8260  002BBA  BE12               	btfsc	(___xxtofl@arg+2)^0,7,c
  8261  002BBC  EFE2  F015         	goto	u4851
  8262  002BC0  EFE4  F015         	goto	u4850
  8263  002BC4                     u4851:
  8264  002BC4  EFEC  F015         	goto	l913
  8265  002BC8                     u4850:
  8266  002BC8  0E02               	movlw	2
  8267  002BCA  600F               	cpfslt	___xxtofl@exp^0,c
  8268  002BCC  EFEA  F015         	goto	u4861
  8269  002BD0  EFEC  F015         	goto	u4860
  8270  002BD4                     u4861:
  8271  002BD4  EFD7  F015         	goto	l4302
  8272  002BD8                     u4860:
  8273  002BD8                     l913:
  8274  002BD8  B00F               	btfsc	___xxtofl@exp^0,0,c
  8275  002BDA  EFF1  F015         	goto	u4871
  8276  002BDE  EFF3  F015         	goto	u4870
  8277  002BE2                     u4871:
  8278  002BE2  EFF4  F015         	goto	l4310
  8279  002BE6                     u4870:
  8280  002BE6  9E12               	bcf	(___xxtofl@arg+2)^0,7,c
  8281  002BE8                     l4310:
  8282  002BE8  90D8               	bcf	status,0,c
  8283  002BEA  320F               	rrcf	___xxtofl@exp^0,f,c
  8284  002BEC  C00F  F00A         	movff	___xxtofl@exp,??___xxtofl
  8285  002BF0  6A0B               	clrf	(??___xxtofl+1)^0,c
  8286  002BF2  6A0C               	clrf	(??___xxtofl+2)^0,c
  8287  002BF4  6A0D               	clrf	(??___xxtofl+3)^0,c
  8288  002BF6  C00A  F00D         	movff	??___xxtofl,??___xxtofl+3
  8289  002BFA  6A0C               	clrf	(??___xxtofl+2)^0,c
  8290  002BFC  6A0B               	clrf	(??___xxtofl+1)^0,c
  8291  002BFE  6A0A               	clrf	??___xxtofl^0,c
  8292  002C00  500A               	movf	??___xxtofl^0,w,c
  8293  002C02  1210               	iorwf	___xxtofl@arg^0,f,c
  8294  002C04  500B               	movf	(??___xxtofl+1)^0,w,c
  8295  002C06  1211               	iorwf	(___xxtofl@arg+1)^0,f,c
  8296  002C08  500C               	movf	(??___xxtofl+2)^0,w,c
  8297  002C0A  1212               	iorwf	(___xxtofl@arg+2)^0,f,c
  8298  002C0C  500D               	movf	(??___xxtofl+3)^0,w,c
  8299  002C0E  1213               	iorwf	(___xxtofl@arg+3)^0,f,c
  8300  002C10  500E               	movf	___xxtofl@sign^0,w,c
  8301  002C12  B4D8               	btfsc	status,2,c
  8302  002C14  EF0E  F016         	goto	u4881
  8303  002C18  EF10  F016         	goto	u4880
  8304  002C1C                     u4881:
  8305  002C1C  EF18  F016         	goto	l4320
  8306  002C20                     u4880:
  8307  002C20  BE09               	btfsc	(___xxtofl@val+3)^0,7,c
  8308  002C22  EF17  F016         	goto	u4890
  8309  002C26  EF15  F016         	goto	u4891
  8310  002C2A                     u4891:
  8311  002C2A  EF18  F016         	goto	l4320
  8312  002C2E                     u4890:
  8313  002C2E  8E13               	bsf	(___xxtofl@arg+3)^0,7,c
  8314  002C30                     l4320:
  8315  002C30  C010  F006         	movff	___xxtofl@arg,?___xxtofl
  8316  002C34  C011  F007         	movff	___xxtofl@arg+1,?___xxtofl+1
  8317  002C38  C012  F008         	movff	___xxtofl@arg+2,?___xxtofl+2
  8318  002C3C  C013  F009         	movff	___xxtofl@arg+3,?___xxtofl+3
  8319  002C40                     l902:
  8320  002C40  0012               	return		;funcret
  8321  002C42                     __end_of___xxtofl:
  8322                           	callstack 0
  8323                           
  8324 ;; *************** function _Timer1_enable *****************
  8325 ;; Defined at:
  8326 ;;		line 21 in file "TIMER1.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;		None
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;		None
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0
  8341 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8343 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8344 ;;Total ram usage:        0 bytes
  8345 ;; Hardware stack levels used: 1
  8346 ;; Hardware stack levels required when called: 2
  8347 ;; This function calls:
  8348 ;;		Nothing
  8349 ;; This function is called by:
  8350 ;;		_main
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text31
  8355  003CC8                     __ptext31:
  8356                           	callstack 0
  8357  003CC8                     _Timer1_enable:
  8358                           	callstack 28
  8359  003CC8                     
  8360                           ;TIMER1.c: 23:     T1CONbits.TMR1ON = 0;
  8361  003CC8  90CD               	bcf	205,0,c	;volatile
  8362                           
  8363                           ;TIMER1.c: 25:     T1CONbits.RD16 = 1;
  8364  003CCA  8ECD               	bsf	205,7,c	;volatile
  8365                           
  8366                           ;TIMER1.c: 27:     T1CONbits.TMR1CS = 0;
  8367  003CCC  92CD               	bcf	205,1,c	;volatile
  8368                           
  8369                           ;TIMER1.c: 30:     T1CONbits.T1CKPS1 = 1;
  8370  003CCE  8ACD               	bsf	205,5,c	;volatile
  8371                           
  8372                           ;TIMER1.c: 31:     T1CONbits.T1CKPS0 = 1;
  8373  003CD0  88CD               	bsf	205,4,c	;volatile
  8374                           
  8375                           ;TIMER1.c: 34:     T1CONbits.T1OSCEN = 0;
  8376  003CD2  96CD               	bcf	205,3,c	;volatile
  8377  003CD4                     
  8378                           ;TIMER1.c: 36:     TMR1H = 0x6;
  8379  003CD4  0E06               	movlw	6
  8380  003CD6  6ECF               	movwf	207,c	;volatile
  8381                           
  8382                           ;TIMER1.c: 37:     TMR1L = 0xF9;
  8383  003CD8  0EF9               	movlw	249
  8384  003CDA  6ECE               	movwf	206,c	;volatile
  8385  003CDC                     
  8386                           ;TIMER1.c: 39:     T1CONbits.TMR1ON = 1;
  8387  003CDC  80CD               	bsf	205,0,c	;volatile
  8388  003CDE  0012               	return		;funcret
  8389  003CE0                     __end_of_Timer1_enable:
  8390                           	callstack 0
  8391                           
  8392 ;; *************** function _Timer0_enable *****************
  8393 ;; Defined at:
  8394 ;;		line 23 in file "TIMER0.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;		None
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;		None
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  1    wreg      void 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8408 ;;      Params:         0       0       0       0       0       0       0       0       0
  8409 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8411 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8412 ;;Total ram usage:        0 bytes
  8413 ;; Hardware stack levels used: 1
  8414 ;; Hardware stack levels required when called: 2
  8415 ;; This function calls:
  8416 ;;		Nothing
  8417 ;; This function is called by:
  8418 ;;		_main
  8419 ;; This function uses a non-reentrant model
  8420 ;;
  8421                           
  8422                           	psect	text32
  8423  003C5A                     __ptext32:
  8424                           	callstack 0
  8425  003C5A                     _Timer0_enable:
  8426                           	callstack 28
  8427  003C5A                     
  8428                           ;TIMER0.c: 25:     T0CONbits.T0SE = 0;
  8429  003C5A  9ED5               	bcf	213,7,c	;volatile
  8430                           
  8431                           ;TIMER0.c: 27:     T0CONbits.PSA = 0;
  8432  003C5C  9CD5               	bcf	213,6,c	;volatile
  8433                           
  8434                           ;TIMER0.c: 29:     T0CONbits.T0PS2 = 1;
  8435  003C5E  9AD5               	bcf	213,5,c	;volatile
  8436                           
  8437                           ;TIMER0.c: 31:     T0CONbits.T0PS0 = 1;
  8438  003C60  98D5               	bcf	213,4,c	;volatile
  8439                           
  8440                           ;TIMER0.c: 33:     TMR0H = 0x48;
  8441  003C62  96D5               	bcf	213,3,c	;volatile
  8442                           
  8443                           ;TIMER0.c: 35: 
  8444  003C64  84D5               	bsf	213,2,c	;volatile
  8445                           
  8446                           ;TIMER0.c: 36:     T0CONbits.TMR0ON = 1;
  8447  003C66  82D5               	bsf	213,1,c	;volatile
  8448                           
  8449                           ;TIMER0.c: 37: 
  8450  003C68  80D5               	bsf	213,0,c	;volatile
  8451  003C6A                     
  8452                           ;TIMER0.c: 39: 
  8453  003C6A  0E48               	movlw	72
  8454  003C6C  6ED7               	movwf	215,c	;volatile
  8455                           
  8456                           ;TIMER0.c: 40: void Interrupt_global(void){
  8457  003C6E  0EE4               	movlw	228
  8458  003C70  6ED6               	movwf	214,c	;volatile
  8459  003C72                     
  8460                           ;TIMER0.c: 42:     RCONbits.IPEN = 1;
  8461  003C72  8ED5               	bsf	213,7,c	;volatile
  8462  003C74  0012               	return		;funcret
  8463  003C76                     __end_of_Timer0_enable:
  8464                           	callstack 0
  8465                           
  8466 ;; *************** function _Master_Mode *****************
  8467 ;; Defined at:
  8468 ;;		line 12 in file "I2C.c"
  8469 ;; Parameters:    Size  Location     Type
  8470 ;;		None
  8471 ;; Auto vars:     Size  Location     Type
  8472 ;;		None
  8473 ;; Return value:  Size  Location     Type
  8474 ;;                  1    wreg      void 
  8475 ;; Registers used:
  8476 ;;		wreg, status,2
  8477 ;; Tracked objects:
  8478 ;;		On entry : 0/0
  8479 ;;		On exit  : 0/0
  8480 ;;		Unchanged: 0/0
  8481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8482 ;;      Params:         0       0       0       0       0       0       0       0       0
  8483 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8485 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8486 ;;Total ram usage:        0 bytes
  8487 ;; Hardware stack levels used: 1
  8488 ;; Hardware stack levels required when called: 2
  8489 ;; This function calls:
  8490 ;;		Nothing
  8491 ;; This function is called by:
  8492 ;;		_main
  8493 ;; This function uses a non-reentrant model
  8494 ;;
  8495                           
  8496                           	psect	text33
  8497  003CAE                     __ptext33:
  8498                           	callstack 0
  8499  003CAE                     _Master_Mode:
  8500                           	callstack 28
  8501  003CAE                     
  8502                           ;I2C.c: 14:     TRISBbits.RB0 = 1;
  8503  003CAE  8093               	bsf	147,0,c	;volatile
  8504                           
  8505                           ;I2C.c: 15:     TRISBbits.RB1 = 1;
  8506  003CB0  8293               	bsf	147,1,c	;volatile
  8507                           
  8508                           ;I2C.c: 17:     SSPSTATbits.SMP = 1;
  8509  003CB2  8EC7               	bsf	199,7,c	;volatile
  8510                           
  8511                           ;I2C.c: 19:     SSPCON1bits.SSPEN = 1;
  8512  003CB4  8AC6               	bsf	198,5,c	;volatile
  8513                           
  8514                           ;I2C.c: 21:     SSPCON1bits.SSPM3 = 1;
  8515  003CB6  86C6               	bsf	198,3,c	;volatile
  8516                           
  8517                           ;I2C.c: 22:     SSPCON1bits.SSPM2 = 0;
  8518  003CB8  94C6               	bcf	198,2,c	;volatile
  8519                           
  8520                           ;I2C.c: 23:     SSPCON1bits.SSPM1 = 0;
  8521  003CBA  92C6               	bcf	198,1,c	;volatile
  8522                           
  8523                           ;I2C.c: 24:     SSPCON1bits.SSPM0 = 0;
  8524  003CBC  90C6               	bcf	198,0,c	;volatile
  8525  003CBE                     
  8526                           ;I2C.c: 35:     SSPADD = (uint8_t)(((48000000UL/4)/100000UL) - 1);
  8527  003CBE  0E77               	movlw	119
  8528  003CC0  6EC8               	movwf	200,c	;volatile
  8529                           
  8530                           ;I2C.c: 36:     SSPCON2 = 0x00;
  8531  003CC2  0E00               	movlw	0
  8532  003CC4  6EC5               	movwf	197,c	;volatile
  8533  003CC6  0012               	return		;funcret
  8534  003CC8                     __end_of_Master_Mode:
  8535                           	callstack 0
  8536                           
  8537 ;; *************** function _LCD_I2C_WriteText *****************
  8538 ;; Defined at:
  8539 ;;		line 109 in file "LCD_I2C.c"
  8540 ;; Parameters:    Size  Location     Type
  8541 ;;  row             1    wreg     unsigned char 
  8542 ;;  col             1   15[COMRAM] unsigned char 
  8543 ;;  string          2   16[COMRAM] PTR unsigned char 
  8544 ;;		 -> STR_6(13), STR_5(15), STR_4(13), STR_3(2), 
  8545 ;;		 -> bufferTx(20), STR_1(6), 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  row             1   20[COMRAM] unsigned char 
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8557 ;;      Params:         3       0       0       0       0       0       0       0       0
  8558 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8559 ;;      Temps:          2       0       0       0       0       0       0       0       0
  8560 ;;      Totals:         6       0       0       0       0       0       0       0       0
  8561 ;;Total ram usage:        6 bytes
  8562 ;; Hardware stack levels used: 1
  8563 ;; Hardware stack levels required when called: 6
  8564 ;; This function calls:
  8565 ;;		_LCD_I2C_nibble
  8566 ;; This function is called by:
  8567 ;;		_main
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text34
  8572  0030B4                     __ptext34:
  8573                           	callstack 0
  8574  0030B4                     _LCD_I2C_WriteText:
  8575                           	callstack 24
  8576                           
  8577                           ;incstack = 0
  8578                           ;LCD_I2C_WriteText@row stored from wreg
  8579  0030B4  6E15               	movwf	LCD_I2C_WriteText@row^0,c
  8580  0030B6                     
  8581                           ;LCD_I2C.c: 112:     switch (row) {
  8582  0030B6  EF8F  F018         	goto	l4244
  8583  0030BA                     l4222:
  8584  0030BA  5010               	movf	LCD_I2C_WriteText@col^0,w,c
  8585  0030BC  0F80               	addlw	128
  8586  0030BE  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  8587  0030C0                     
  8588                           ;LCD_I2C.c: 114:                 LCD_I2C_nibble(0x00,col);
  8589  0030C0  C010  F00E         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  8590  0030C4  0E00               	movlw	0
  8591  0030C6  EC3B  F01E         	call	_LCD_I2C_nibble
  8592                           
  8593                           ;LCD_I2C.c: 115:                 break;
  8594  0030CA  EFC2  F018         	goto	l4250
  8595  0030CE                     l4226:
  8596  0030CE  5010               	movf	LCD_I2C_WriteText@col^0,w,c
  8597  0030D0  0FC0               	addlw	192
  8598  0030D2  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  8599  0030D4                     
  8600                           ;LCD_I2C.c: 118:                 LCD_I2C_nibble(0x00,col);
  8601  0030D4  C010  F00E         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  8602  0030D8  0E00               	movlw	0
  8603  0030DA  EC3B  F01E         	call	_LCD_I2C_nibble
  8604                           
  8605                           ;LCD_I2C.c: 119:                 break;
  8606  0030DE  EFC2  F018         	goto	l4250
  8607  0030E2                     l4230:
  8608  0030E2  5010               	movf	LCD_I2C_WriteText@col^0,w,c
  8609  0030E4  0F94               	addlw	148
  8610  0030E6  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  8611  0030E8                     
  8612                           ;LCD_I2C.c: 122:                 LCD_I2C_nibble(0x00,col);
  8613  0030E8  C010  F00E         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  8614  0030EC  0E00               	movlw	0
  8615  0030EE  EC3B  F01E         	call	_LCD_I2C_nibble
  8616                           
  8617                           ;LCD_I2C.c: 123:                 break;
  8618  0030F2  EFC2  F018         	goto	l4250
  8619  0030F6                     l4234:
  8620  0030F6  5010               	movf	LCD_I2C_WriteText@col^0,w,c
  8621  0030F8  0FD4               	addlw	212
  8622  0030FA  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  8623  0030FC                     
  8624                           ;LCD_I2C.c: 126:                 LCD_I2C_nibble(0x00,col);
  8625  0030FC  C010  F00E         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  8626  003100  0E00               	movlw	0
  8627  003102  EC3B  F01E         	call	_LCD_I2C_nibble
  8628                           
  8629                           ;LCD_I2C.c: 127:                 break;
  8630  003106  EFC2  F018         	goto	l4250
  8631  00310A                     l4238:
  8632  00310A  5010               	movf	LCD_I2C_WriteText@col^0,w,c
  8633  00310C  0F80               	addlw	128
  8634  00310E  6E10               	movwf	LCD_I2C_WriteText@col^0,c
  8635  003110                     
  8636                           ;LCD_I2C.c: 130:                 LCD_I2C_nibble(0x00,col);
  8637  003110  C010  F00E         	movff	LCD_I2C_WriteText@col,LCD_I2C_nibble@cmd
  8638  003114  0E00               	movlw	0
  8639  003116  EC3B  F01E         	call	_LCD_I2C_nibble
  8640                           
  8641                           ;LCD_I2C.c: 131:                 break;
  8642  00311A  EFC2  F018         	goto	l4250
  8643  00311E                     l4244:
  8644  00311E  5015               	movf	LCD_I2C_WriteText@row^0,w,c
  8645  003120  6E13               	movwf	??_LCD_I2C_WriteText^0,c
  8646  003122  6A14               	clrf	(??_LCD_I2C_WriteText+1)^0,c
  8647                           
  8648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8649                           ; Switch size 1, requested type "simple"
  8650                           ; Number of cases is 1, Range of values is 0 to 0
  8651                           ; switch strategies available:
  8652                           ; Name         Instructions Cycles
  8653                           ; simple_byte            4     3 (average)
  8654                           ;	Chosen strategy is simple_byte
  8655  003124  5014               	movf	(??_LCD_I2C_WriteText+1)^0,w,c
  8656  003126  0A00               	xorlw	0	; case 0
  8657  003128  B4D8               	btfsc	status,2,c
  8658  00312A  EF99  F018         	goto	l5834
  8659  00312E  EF85  F018         	goto	l4238
  8660  003132                     l5834:
  8661                           
  8662                           ; Switch size 1, requested type "simple"
  8663                           ; Number of cases is 4, Range of values is 0 to 3
  8664                           ; switch strategies available:
  8665                           ; Name         Instructions Cycles
  8666                           ; simple_byte           13     7 (average)
  8667                           ;	Chosen strategy is simple_byte
  8668  003132  5013               	movf	??_LCD_I2C_WriteText^0,w,c
  8669  003134  0A00               	xorlw	0	; case 0
  8670  003136  B4D8               	btfsc	status,2,c
  8671  003138  EF5D  F018         	goto	l4222
  8672  00313C  0A01               	xorlw	1	; case 1
  8673  00313E  B4D8               	btfsc	status,2,c
  8674  003140  EF67  F018         	goto	l4226
  8675  003144  0A03               	xorlw	3	; case 2
  8676  003146  B4D8               	btfsc	status,2,c
  8677  003148  EF71  F018         	goto	l4230
  8678  00314C  0A01               	xorlw	1	; case 3
  8679  00314E  B4D8               	btfsc	status,2,c
  8680  003150  EF7B  F018         	goto	l4234
  8681  003154  EF85  F018         	goto	l4238
  8682  003158                     l4246:
  8683                           
  8684                           ;LCD_I2C.c: 138:         LCD_I2C_nibble(0x01,*string++);
  8685  003158  C011  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
  8686  00315C  C012  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
  8687  003160  6AF8               	clrf	tblptru,c
  8688  003162  0E07               	movlw	(high __ramtop+-1)
  8689  003164  64F7               	cpfsgt	tblptrh,c
  8690  003166  D003               	bra	u4767
  8691  003168  0008               	tblrd		*
  8692  00316A  50F5               	movf	tablat,w,c
  8693  00316C  D005               	bra	u4760
  8694  00316E                     u4767:
  8695  00316E  CFF6 FFE1          	movff	tblptrl,fsr1l
  8696  003172  CFF7 FFE2          	movff	tblptrh,fsr1h
  8697  003176  50E7               	movf	indf1,w,c
  8698  003178                     u4760:
  8699  003178  6E0E               	movwf	LCD_I2C_nibble@cmd^0,c
  8700  00317A  0E01               	movlw	1
  8701  00317C  EC3B  F01E         	call	_LCD_I2C_nibble
  8702  003180  4A11               	infsnz	LCD_I2C_WriteText@string^0,f,c
  8703  003182  2A12               	incf	(LCD_I2C_WriteText@string+1)^0,f,c
  8704  003184                     l4250:
  8705                           
  8706                           ;LCD_I2C.c: 137:     while (*string)
  8707  003184  C011  FFF6         	movff	LCD_I2C_WriteText@string,tblptrl
  8708  003188  C012  FFF7         	movff	LCD_I2C_WriteText@string+1,tblptrh
  8709  00318C  6AF8               	clrf	tblptru,c
  8710  00318E  0E07               	movlw	(high __ramtop+-1)
  8711  003190  64F7               	cpfsgt	tblptrh,c
  8712  003192  D003               	bra	u4777
  8713  003194  0008               	tblrd		*
  8714  003196  50F5               	movf	tablat,w,c
  8715  003198  D005               	bra	u4770
  8716  00319A                     u4777:
  8717  00319A  CFF6 FFE1          	movff	tblptrl,fsr1l
  8718  00319E  CFF7 FFE2          	movff	tblptrh,fsr1h
  8719  0031A2  50E7               	movf	indf1,w,c
  8720  0031A4                     u4770:
  8721  0031A4  0900               	iorlw	0
  8722  0031A6  A4D8               	btfss	status,2,c
  8723  0031A8  EFD8  F018         	goto	u4781
  8724  0031AC  EFDA  F018         	goto	u4780
  8725  0031B0                     u4781:
  8726  0031B0  EFAC  F018         	goto	l4246
  8727  0031B4                     u4780:
  8728  0031B4  0012               	return		;funcret
  8729  0031B6                     __end_of_LCD_I2C_WriteText:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _LCD_I2C_Init *****************
  8733 ;; Defined at:
  8734 ;;		line 61 in file "LCD_I2C.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;		None
  8737 ;; Auto vars:     Size  Location     Type
  8738 ;;		None
  8739 ;; Return value:  Size  Location     Type
  8740 ;;                  1    wreg      void 
  8741 ;; Registers used:
  8742 ;;		wreg, status,2, status,0, cstack
  8743 ;; Tracked objects:
  8744 ;;		On entry : 0/0
  8745 ;;		On exit  : 0/0
  8746 ;;		Unchanged: 0/0
  8747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8748 ;;      Params:         0       0       0       0       0       0       0       0       0
  8749 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8750 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8751 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8752 ;;Total ram usage:        1 bytes
  8753 ;; Hardware stack levels used: 1
  8754 ;; Hardware stack levels required when called: 6
  8755 ;; This function calls:
  8756 ;;		_I2C_ADDRESS_SLAVE
  8757 ;;		_I2C_Start
  8758 ;;		_I2C_Stop
  8759 ;;		_I2C_Write_Data
  8760 ;;		_LCD_I2C_Databus
  8761 ;;		_LCD_I2C_nibble
  8762 ;; This function is called by:
  8763 ;;		_main
  8764 ;; This function uses a non-reentrant model
  8765 ;;
  8766                           
  8767                           	psect	text35
  8768  002D98                     __ptext35:
  8769                           	callstack 0
  8770  002D98                     _LCD_I2C_Init:
  8771                           	callstack 24
  8772  002D98                     
  8773                           ;LCD_I2C.c: 64:     I2C_Start();
  8774  002D98  EC79  F01E         	call	_I2C_Start	;wreg free
  8775  002D9C                     
  8776                           ;LCD_I2C.c: 65:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
  8777  002D9C  0E00               	movlw	0
  8778  002D9E  6E06               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
  8779  002DA0  0E4E               	movlw	78
  8780  002DA2  ECD0  F01D         	call	_I2C_ADDRESS_SLAVE
  8781  002DA6                     
  8782                           ;LCD_I2C.c: 66:     I2C_Write_Data(0x00);
  8783  002DA6  0E00               	movlw	0
  8784  002DA8  EC49  F01E         	call	_I2C_Write_Data
  8785  002DAC                     
  8786                           ;LCD_I2C.c: 67:     I2C_Stop();
  8787  002DAC  EC70  F01E         	call	_I2C_Stop	;wreg free
  8788  002DB0                     
  8789                           ;LCD_I2C.c: 68:     _delay((unsigned long)((15)*(20000000UL/4000.0)));
  8790  002DB0  0E62               	movlw	98
  8791  002DB2  6E10               	movwf	??_LCD_I2C_Init^0,c
  8792  002DB4  0E66               	movlw	102
  8793  002DB6                     u7317:
  8794  002DB6  2EE8               	decfsz	wreg,f,c
  8795  002DB8  D7FE               	bra	u7317
  8796  002DBA  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8797  002DBC  D7FC               	bra	u7317
  8798  002DBE                     
  8799                           ;LCD_I2C.c: 86:     LCD_I2C_Databus(0,0x03);
  8800  002DBE  0E03               	movlw	3
  8801  002DC0  6E0B               	movwf	LCD_I2C_Databus@cmd^0,c
  8802  002DC2  0E00               	movlw	0
  8803  002DC4  ECED  F01A         	call	_LCD_I2C_Databus
  8804  002DC8                     
  8805                           ;LCD_I2C.c: 87:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8806  002DC8  0E21               	movlw	33
  8807  002DCA  6E10               	movwf	??_LCD_I2C_Init^0,c
  8808  002DCC  0E76               	movlw	118
  8809  002DCE                     u7327:
  8810  002DCE  2EE8               	decfsz	wreg,f,c
  8811  002DD0  D7FE               	bra	u7327
  8812  002DD2  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8813  002DD4  D7FC               	bra	u7327
  8814  002DD6  D000               	nop2	
  8815  002DD8                     
  8816                           ;LCD_I2C.c: 89:     LCD_I2C_Databus(0,0x03);
  8817  002DD8  0E03               	movlw	3
  8818  002DDA  6E0B               	movwf	LCD_I2C_Databus@cmd^0,c
  8819  002DDC  0E00               	movlw	0
  8820  002DDE  ECED  F01A         	call	_LCD_I2C_Databus
  8821  002DE2                     
  8822                           ;LCD_I2C.c: 90:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8823  002DE2  0E21               	movlw	33
  8824  002DE4  6E10               	movwf	??_LCD_I2C_Init^0,c
  8825  002DE6  0E76               	movlw	118
  8826  002DE8                     u7337:
  8827  002DE8  2EE8               	decfsz	wreg,f,c
  8828  002DEA  D7FE               	bra	u7337
  8829  002DEC  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8830  002DEE  D7FC               	bra	u7337
  8831  002DF0  D000               	nop2	
  8832  002DF2                     
  8833                           ;LCD_I2C.c: 92:     LCD_I2C_Databus(0,0x03);
  8834  002DF2  0E03               	movlw	3
  8835  002DF4  6E0B               	movwf	LCD_I2C_Databus@cmd^0,c
  8836  002DF6  0E00               	movlw	0
  8837  002DF8  ECED  F01A         	call	_LCD_I2C_Databus
  8838  002DFC                     
  8839                           ;LCD_I2C.c: 93:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8840  002DFC  0E21               	movlw	33
  8841  002DFE  6E10               	movwf	??_LCD_I2C_Init^0,c
  8842  002E00  0E76               	movlw	118
  8843  002E02                     u7347:
  8844  002E02  2EE8               	decfsz	wreg,f,c
  8845  002E04  D7FE               	bra	u7347
  8846  002E06  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8847  002E08  D7FC               	bra	u7347
  8848  002E0A  D000               	nop2	
  8849  002E0C                     
  8850                           ;LCD_I2C.c: 95:     LCD_I2C_Databus(0,0x02);
  8851  002E0C  0E02               	movlw	2
  8852  002E0E  6E0B               	movwf	LCD_I2C_Databus@cmd^0,c
  8853  002E10  0E00               	movlw	0
  8854  002E12  ECED  F01A         	call	_LCD_I2C_Databus
  8855  002E16                     
  8856                           ;LCD_I2C.c: 96:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8857  002E16  0E21               	movlw	33
  8858  002E18  6E10               	movwf	??_LCD_I2C_Init^0,c
  8859  002E1A  0E76               	movlw	118
  8860  002E1C                     u7357:
  8861  002E1C  2EE8               	decfsz	wreg,f,c
  8862  002E1E  D7FE               	bra	u7357
  8863  002E20  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8864  002E22  D7FC               	bra	u7357
  8865  002E24  D000               	nop2	
  8866  002E26                     
  8867                           ;LCD_I2C.c: 97:     LCD_I2C_nibble(0,0x028);
  8868  002E26  0E28               	movlw	40
  8869  002E28  6E0E               	movwf	LCD_I2C_nibble@cmd^0,c
  8870  002E2A  0E00               	movlw	0
  8871  002E2C  EC3B  F01E         	call	_LCD_I2C_nibble
  8872  002E30                     
  8873                           ;LCD_I2C.c: 98:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8874  002E30  0E21               	movlw	33
  8875  002E32  6E10               	movwf	??_LCD_I2C_Init^0,c
  8876  002E34  0E76               	movlw	118
  8877  002E36                     u7367:
  8878  002E36  2EE8               	decfsz	wreg,f,c
  8879  002E38  D7FE               	bra	u7367
  8880  002E3A  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8881  002E3C  D7FC               	bra	u7367
  8882  002E3E  D000               	nop2	
  8883  002E40                     
  8884                           ;LCD_I2C.c: 99:     LCD_I2C_nibble(0,0x08);
  8885  002E40  0E08               	movlw	8
  8886  002E42  6E0E               	movwf	LCD_I2C_nibble@cmd^0,c
  8887  002E44  0E00               	movlw	0
  8888  002E46  EC3B  F01E         	call	_LCD_I2C_nibble
  8889  002E4A                     
  8890                           ;LCD_I2C.c: 100:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8891  002E4A  0E21               	movlw	33
  8892  002E4C  6E10               	movwf	??_LCD_I2C_Init^0,c
  8893  002E4E  0E76               	movlw	118
  8894  002E50                     u7377:
  8895  002E50  2EE8               	decfsz	wreg,f,c
  8896  002E52  D7FE               	bra	u7377
  8897  002E54  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8898  002E56  D7FC               	bra	u7377
  8899  002E58  D000               	nop2	
  8900  002E5A                     
  8901                           ;LCD_I2C.c: 101:     LCD_I2C_nibble(0,0x01);
  8902  002E5A  0E01               	movlw	1
  8903  002E5C  6E0E               	movwf	LCD_I2C_nibble@cmd^0,c
  8904  002E5E  0E00               	movlw	0
  8905  002E60  EC3B  F01E         	call	_LCD_I2C_nibble
  8906  002E64                     
  8907                           ;LCD_I2C.c: 102:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8908  002E64  0E21               	movlw	33
  8909  002E66  6E10               	movwf	??_LCD_I2C_Init^0,c
  8910  002E68  0E76               	movlw	118
  8911  002E6A                     u7387:
  8912  002E6A  2EE8               	decfsz	wreg,f,c
  8913  002E6C  D7FE               	bra	u7387
  8914  002E6E  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8915  002E70  D7FC               	bra	u7387
  8916  002E72  D000               	nop2	
  8917  002E74                     
  8918                           ;LCD_I2C.c: 103:     LCD_I2C_nibble(0,0x06);
  8919  002E74  0E06               	movlw	6
  8920  002E76  6E0E               	movwf	LCD_I2C_nibble@cmd^0,c
  8921  002E78  0E00               	movlw	0
  8922  002E7A  EC3B  F01E         	call	_LCD_I2C_nibble
  8923  002E7E                     
  8924                           ;LCD_I2C.c: 104:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8925  002E7E  0E21               	movlw	33
  8926  002E80  6E10               	movwf	??_LCD_I2C_Init^0,c
  8927  002E82  0E76               	movlw	118
  8928  002E84                     u7397:
  8929  002E84  2EE8               	decfsz	wreg,f,c
  8930  002E86  D7FE               	bra	u7397
  8931  002E88  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8932  002E8A  D7FC               	bra	u7397
  8933  002E8C  D000               	nop2	
  8934  002E8E                     
  8935                           ;LCD_I2C.c: 105:     LCD_I2C_nibble(0,0x0F);
  8936  002E8E  0E0F               	movlw	15
  8937  002E90  6E0E               	movwf	LCD_I2C_nibble@cmd^0,c
  8938  002E92  0E00               	movlw	0
  8939  002E94  EC3B  F01E         	call	_LCD_I2C_nibble
  8940  002E98                     
  8941                           ;LCD_I2C.c: 106:     _delay((unsigned long)((5)*(20000000UL/4000.0)));
  8942  002E98  0E21               	movlw	33
  8943  002E9A  6E10               	movwf	??_LCD_I2C_Init^0,c
  8944  002E9C  0E76               	movlw	118
  8945  002E9E                     u7407:
  8946  002E9E  2EE8               	decfsz	wreg,f,c
  8947  002EA0  D7FE               	bra	u7407
  8948  002EA2  2E10               	decfsz	??_LCD_I2C_Init^0,f,c
  8949  002EA4  D7FC               	bra	u7407
  8950  002EA6  D000               	nop2	
  8951  002EA8  0012               	return		;funcret
  8952  002EAA                     __end_of_LCD_I2C_Init:
  8953                           	callstack 0
  8954                           
  8955 ;; *************** function _LCD_I2C_nibble *****************
  8956 ;; Defined at:
  8957 ;;		line 53 in file "LCD_I2C.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  ctrl            1    wreg     unsigned char 
  8960 ;;  cmd             1   13[COMRAM] unsigned char 
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  ctrl            1   14[COMRAM] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  1    wreg      void 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2, status,0, cstack
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8972 ;;      Params:         1       0       0       0       0       0       0       0       0
  8973 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8974 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8975 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8976 ;;Total ram usage:        2 bytes
  8977 ;; Hardware stack levels used: 1
  8978 ;; Hardware stack levels required when called: 5
  8979 ;; This function calls:
  8980 ;;		_LCD_I2C_Databus
  8981 ;; This function is called by:
  8982 ;;		_LCD_I2C_Init
  8983 ;;		_LCD_I2C_WriteText
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text36
  8988  003C76                     __ptext36:
  8989                           	callstack 0
  8990  003C76                     _LCD_I2C_nibble:
  8991                           	callstack 24
  8992                           
  8993                           ;incstack = 0
  8994                           ;LCD_I2C_nibble@ctrl stored from wreg
  8995  003C76  6E0F               	movwf	LCD_I2C_nibble@ctrl^0,c
  8996  003C78                     
  8997                           ;LCD_I2C.c: 55:     LCD_I2C_Databus(ctrl,cmd>>4);
  8998  003C78  380E               	swapf	LCD_I2C_nibble@cmd^0,w,c
  8999  003C7A  0B0F               	andlw	15
  9000  003C7C  6E0B               	movwf	LCD_I2C_Databus@cmd^0,c
  9001  003C7E  500F               	movf	LCD_I2C_nibble@ctrl^0,w,c
  9002  003C80  ECED  F01A         	call	_LCD_I2C_Databus
  9003                           
  9004                           ;LCD_I2C.c: 56:     LCD_I2C_Databus(ctrl,cmd&0x0F);
  9005  003C84  500E               	movf	LCD_I2C_nibble@cmd^0,w,c
  9006  003C86  0B0F               	andlw	15
  9007  003C88  6E0B               	movwf	LCD_I2C_Databus@cmd^0,c
  9008  003C8A  500F               	movf	LCD_I2C_nibble@ctrl^0,w,c
  9009  003C8C  ECED  F01A         	call	_LCD_I2C_Databus
  9010  003C90  0012               	return		;funcret
  9011  003C92                     __end_of_LCD_I2C_nibble:
  9012                           	callstack 0
  9013                           
  9014 ;; *************** function _LCD_I2C_Databus *****************
  9015 ;; Defined at:
  9016 ;;		line 12 in file "LCD_I2C.c"
  9017 ;; Parameters:    Size  Location     Type
  9018 ;;  ctrl            1    wreg     unsigned char 
  9019 ;;  cmd             1   10[COMRAM] unsigned char 
  9020 ;; Auto vars:     Size  Location     Type
  9021 ;;  ctrl            1   11[COMRAM] unsigned char 
  9022 ;;  data            1   12[COMRAM] unsigned char 
  9023 ;; Return value:  Size  Location     Type
  9024 ;;                  1    wreg      void 
  9025 ;; Registers used:
  9026 ;;		wreg, status,2, status,0, cstack
  9027 ;; Tracked objects:
  9028 ;;		On entry : 0/0
  9029 ;;		On exit  : 0/0
  9030 ;;		Unchanged: 0/0
  9031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9032 ;;      Params:         1       0       0       0       0       0       0       0       0
  9033 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9035 ;;      Totals:         3       0       0       0       0       0       0       0       0
  9036 ;;Total ram usage:        3 bytes
  9037 ;; Hardware stack levels used: 1
  9038 ;; Hardware stack levels required when called: 4
  9039 ;; This function calls:
  9040 ;;		_PCF8574_Write
  9041 ;; This function is called by:
  9042 ;;		_LCD_I2C_nibble
  9043 ;;		_LCD_I2C_Init
  9044 ;; This function uses a non-reentrant model
  9045 ;;
  9046                           
  9047                           	psect	text37
  9048  0035DA                     __ptext37:
  9049                           	callstack 0
  9050  0035DA                     _LCD_I2C_Databus:
  9051                           	callstack 24
  9052                           
  9053                           ;incstack = 0
  9054                           ;LCD_I2C_Databus@ctrl stored from wreg
  9055  0035DA  6E0C               	movwf	LCD_I2C_Databus@ctrl^0,c
  9056  0035DC                     
  9057                           ;LCD_I2C.c: 13:     uint8_t data;;LCD_I2C.c: 15:     if((cmd & 1) == 1){
  9058  0035DC  A00B               	btfss	LCD_I2C_Databus@cmd^0,0,c
  9059  0035DE  EFF3  F01A         	goto	u4601
  9060  0035E2  EFF5  F01A         	goto	u4600
  9061  0035E6                     u4601:
  9062  0035E6  EFFA  F01A         	goto	l4018
  9063  0035EA                     u4600:
  9064  0035EA                     
  9065                           ;LCD_I2C.c: 16:         data = data | 0x10;
  9066  0035EA  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9067  0035EC  0910               	iorlw	16
  9068  0035EE  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9069                           
  9070                           ;LCD_I2C.c: 17:     }else{
  9071  0035F0  EFFD  F01A         	goto	l4020
  9072  0035F4                     l4018:
  9073                           
  9074                           ;LCD_I2C.c: 18:         data = data &~ 0x10;
  9075  0035F4  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9076  0035F6  0BEF               	andlw	239
  9077  0035F8  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9078  0035FA                     l4020:
  9079                           
  9080                           ;LCD_I2C.c: 21:     if((cmd & 2) == 2){
  9081  0035FA  A20B               	btfss	LCD_I2C_Databus@cmd^0,1,c
  9082  0035FC  EF02  F01B         	goto	u4611
  9083  003600  EF04  F01B         	goto	u4610
  9084  003604                     u4611:
  9085  003604  EF09  F01B         	goto	l4024
  9086  003608                     u4610:
  9087  003608                     
  9088                           ;LCD_I2C.c: 22:         data = data | 0x20;
  9089  003608  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9090  00360A  0920               	iorlw	32
  9091  00360C  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9092                           
  9093                           ;LCD_I2C.c: 23:     }else{
  9094  00360E  EF0C  F01B         	goto	l4026
  9095  003612                     l4024:
  9096                           
  9097                           ;LCD_I2C.c: 24:         data = data &~ 0x20;
  9098  003612  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9099  003614  0BDF               	andlw	223
  9100  003616  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9101  003618                     l4026:
  9102                           
  9103                           ;LCD_I2C.c: 27:     if((cmd & 4) == 4){
  9104  003618  A40B               	btfss	LCD_I2C_Databus@cmd^0,2,c
  9105  00361A  EF11  F01B         	goto	u4621
  9106  00361E  EF13  F01B         	goto	u4620
  9107  003622                     u4621:
  9108  003622  EF18  F01B         	goto	l4030
  9109  003626                     u4620:
  9110  003626                     
  9111                           ;LCD_I2C.c: 28:         data = data | 0x40;
  9112  003626  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9113  003628  0940               	iorlw	64
  9114  00362A  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9115                           
  9116                           ;LCD_I2C.c: 29:     }else{
  9117  00362C  EF1B  F01B         	goto	l4032
  9118  003630                     l4030:
  9119                           
  9120                           ;LCD_I2C.c: 30:         data = data &~ 0x40;
  9121  003630  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9122  003632  0BBF               	andlw	191
  9123  003634  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9124  003636                     l4032:
  9125                           
  9126                           ;LCD_I2C.c: 33:     if((cmd & 8) == 8){
  9127  003636  A60B               	btfss	LCD_I2C_Databus@cmd^0,3,c
  9128  003638  EF20  F01B         	goto	u4631
  9129  00363C  EF22  F01B         	goto	u4630
  9130  003640                     u4631:
  9131  003640  EF27  F01B         	goto	l4036
  9132  003644                     u4630:
  9133  003644                     
  9134                           ;LCD_I2C.c: 34:         data = data | 0x80;
  9135  003644  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9136  003646  0980               	iorlw	128
  9137  003648  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9138                           
  9139                           ;LCD_I2C.c: 35:     }else{
  9140  00364A  EF2A  F01B         	goto	l4038
  9141  00364E                     l4036:
  9142                           
  9143                           ;LCD_I2C.c: 36:         data = data &~ 0x80;
  9144  00364E  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9145  003650  0B7F               	andlw	127
  9146  003652  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9147  003654                     l4038:
  9148                           
  9149                           ;LCD_I2C.c: 39:     _delay((unsigned long)((60)*(20000000UL/4000000.0)));
  9150  003654  0E64               	movlw	100
  9151  003656                     u7417:
  9152  003656  2EE8               	decfsz	wreg,f,c
  9153  003658  D7FE               	bra	u7417
  9154  00365A                     
  9155                           ;LCD_I2C.c: 42:     if(ctrl == 1){
  9156  00365A  040C               	decf	LCD_I2C_Databus@ctrl^0,w,c
  9157  00365C  A4D8               	btfss	status,2,c
  9158  00365E  EF33  F01B         	goto	u4641
  9159  003662  EF35  F01B         	goto	u4640
  9160  003666                     u4641:
  9161  003666  EF3A  F01B         	goto	l4044
  9162  00366A                     u4640:
  9163  00366A                     
  9164                           ;LCD_I2C.c: 43:         data = data | 0x01;
  9165  00366A  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9166  00366C  0901               	iorlw	1
  9167  00366E  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9168                           
  9169                           ;LCD_I2C.c: 44:     }else{
  9170  003670  EF3D  F01B         	goto	l4046
  9171  003674                     l4044:
  9172                           
  9173                           ;LCD_I2C.c: 45:         data = data &~ 0x01;
  9174  003674  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9175  003676  0BFE               	andlw	254
  9176  003678  6E0D               	movwf	LCD_I2C_Databus@data^0,c
  9177  00367A                     l4046:
  9178                           
  9179                           ;LCD_I2C.c: 48:     PCF8574_Write(data | 0x04);
  9180  00367A  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9181  00367C  0904               	iorlw	4
  9182  00367E  EC1E  F01E         	call	_PCF8574_Write
  9183  003682                     
  9184                           ;LCD_I2C.c: 49:     _delay((unsigned long)((2)*(20000000UL/4000000.0)));
  9185  003682  0E03               	movlw	3
  9186  003684                     u7427:
  9187  003684  2EE8               	decfsz	wreg,f,c
  9188  003686  D7FE               	bra	u7427
  9189  003688  F000               	nop	
  9190  00368A                     
  9191                           ;LCD_I2C.c: 50:     PCF8574_Write(data &~ 0x04);
  9192  00368A  500D               	movf	LCD_I2C_Databus@data^0,w,c
  9193  00368C  0BFB               	andlw	251
  9194  00368E  EC1E  F01E         	call	_PCF8574_Write
  9195  003692  0012               	return		;funcret
  9196  003694                     __end_of_LCD_I2C_Databus:
  9197                           	callstack 0
  9198                           
  9199 ;; *************** function _PCF8574_Write *****************
  9200 ;; Defined at:
  9201 ;;		line 4 in file "LCD_I2C.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;  byte            1    wreg     unsigned char 
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;  byte            1    9[COMRAM] unsigned char 
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      void 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0, cstack
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9215 ;;      Params:         0       0       0       0       0       0       0       0       0
  9216 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9217 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9218 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9219 ;;Total ram usage:        1 bytes
  9220 ;; Hardware stack levels used: 1
  9221 ;; Hardware stack levels required when called: 3
  9222 ;; This function calls:
  9223 ;;		_I2C_ADDRESS_SLAVE
  9224 ;;		_I2C_Start
  9225 ;;		_I2C_Stop
  9226 ;;		_I2C_Write_Data
  9227 ;; This function is called by:
  9228 ;;		_LCD_I2C_Databus
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           	psect	text38
  9233  003C3C                     __ptext38:
  9234                           	callstack 0
  9235  003C3C                     _PCF8574_Write:
  9236                           	callstack 24
  9237                           
  9238                           ;incstack = 0
  9239                           ;PCF8574_Write@byte stored from wreg
  9240  003C3C  6E0A               	movwf	PCF8574_Write@byte^0,c
  9241  003C3E                     
  9242                           ;LCD_I2C.c: 6:     I2C_Start();
  9243  003C3E  EC79  F01E         	call	_I2C_Start	;wreg free
  9244  003C42                     
  9245                           ;LCD_I2C.c: 7:     I2C_ADDRESS_SLAVE((0x40 | (0x07<<1)),0x00);
  9246  003C42  0E00               	movlw	0
  9247  003C44  6E06               	movwf	I2C_ADDRESS_SLAVE@modo^0,c
  9248  003C46  0E4E               	movlw	78
  9249  003C48  ECD0  F01D         	call	_I2C_ADDRESS_SLAVE
  9250  003C4C                     
  9251                           ;LCD_I2C.c: 8:     I2C_Write_Data((byte | 0x08));
  9252  003C4C  500A               	movf	PCF8574_Write@byte^0,w,c
  9253  003C4E  0908               	iorlw	8
  9254  003C50  EC49  F01E         	call	_I2C_Write_Data
  9255                           
  9256                           ;LCD_I2C.c: 9:     I2C_Stop();
  9257  003C54  EC70  F01E         	call	_I2C_Stop	;wreg free
  9258  003C58  0012               	return		;funcret
  9259  003C5A                     __end_of_PCF8574_Write:
  9260                           	callstack 0
  9261                           
  9262 ;; *************** function _I2C_Write_Data *****************
  9263 ;; Defined at:
  9264 ;;		line 65 in file "I2C.c"
  9265 ;; Parameters:    Size  Location     Type
  9266 ;;  data            1    wreg     unsigned char 
  9267 ;; Auto vars:     Size  Location     Type
  9268 ;;  data            1    5[COMRAM] unsigned char 
  9269 ;; Return value:  Size  Location     Type
  9270 ;;                  1    wreg      void 
  9271 ;; Registers used:
  9272 ;;		wreg
  9273 ;; Tracked objects:
  9274 ;;		On entry : 0/0
  9275 ;;		On exit  : 0/0
  9276 ;;		Unchanged: 0/0
  9277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9278 ;;      Params:         0       0       0       0       0       0       0       0       0
  9279 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9280 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9281 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9282 ;;Total ram usage:        1 bytes
  9283 ;; Hardware stack levels used: 1
  9284 ;; Hardware stack levels required when called: 2
  9285 ;; This function calls:
  9286 ;;		Nothing
  9287 ;; This function is called by:
  9288 ;;		_PCF8574_Write
  9289 ;;		_LCD_I2C_Init
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text39
  9294  003C92                     __ptext39:
  9295                           	callstack 0
  9296  003C92                     _I2C_Write_Data:
  9297                           	callstack 24
  9298                           
  9299                           ;incstack = 0
  9300                           ;I2C_Write_Data@data stored from wreg
  9301  003C92  6E06               	movwf	I2C_Write_Data@data^0,c
  9302  003C94                     
  9303                           ;I2C.c: 67:     SSPBUF = data;
  9304  003C94  C006  FFC9         	movff	I2C_Write_Data@data,4041	;volatile
  9305  003C98                     
  9306                           ;I2C.c: 69:     SSPCON2bits.ACKDT = 0;
  9307  003C98  9AC5               	bcf	197,5,c	;volatile
  9308  003C9A                     
  9309                           ;I2C.c: 71:     SSPCON2bits.ACKEN = 1;
  9310  003C9A  88C5               	bsf	197,4,c	;volatile
  9311  003C9C                     
  9312                           ;I2C.c: 73:     PIR1bits.SSPIF = 0;
  9313  003C9C  969E               	bcf	158,3,c	;volatile
  9314  003C9E                     l105:
  9315  003C9E  A69E               	btfss	158,3,c	;volatile
  9316  003CA0  EF54  F01E         	goto	u3031
  9317  003CA4  EF56  F01E         	goto	u3030
  9318  003CA8                     u3031:
  9319  003CA8  EF4F  F01E         	goto	l105
  9320  003CAC                     u3030:
  9321  003CAC  0012               	return		;funcret
  9322  003CAE                     __end_of_I2C_Write_Data:
  9323                           	callstack 0
  9324                           
  9325 ;; *************** function _I2C_Stop *****************
  9326 ;; Defined at:
  9327 ;;		line 78 in file "I2C.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;		None
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      void 
  9334 ;; Registers used:
  9335 ;;		None
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9341 ;;      Params:         0       0       0       0       0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9344 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9345 ;;Total ram usage:        0 bytes
  9346 ;; Hardware stack levels used: 1
  9347 ;; Hardware stack levels required when called: 2
  9348 ;; This function calls:
  9349 ;;		Nothing
  9350 ;; This function is called by:
  9351 ;;		_PCF8574_Write
  9352 ;;		_LCD_I2C_Init
  9353 ;; This function uses a non-reentrant model
  9354 ;;
  9355                           
  9356                           	psect	text40
  9357  003CE0                     __ptext40:
  9358                           	callstack 0
  9359  003CE0                     _I2C_Stop:
  9360                           	callstack 24
  9361  003CE0                     
  9362                           ;I2C.c: 82:     SSPCON2bits.PEN = 1;
  9363  003CE0  84C5               	bsf	197,2,c	;volatile
  9364  003CE2                     l111:
  9365  003CE2  B4C5               	btfsc	197,2,c	;volatile
  9366  003CE4  EF76  F01E         	goto	u3041
  9367  003CE8  EF78  F01E         	goto	u3040
  9368  003CEC                     u3041:
  9369  003CEC  EF71  F01E         	goto	l111
  9370  003CF0                     u3040:
  9371  003CF0  0012               	return		;funcret
  9372  003CF2                     __end_of_I2C_Stop:
  9373                           	callstack 0
  9374                           
  9375 ;; *************** function _I2C_Start *****************
  9376 ;; Defined at:
  9377 ;;		line 39 in file "I2C.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;		None
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		None
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used: 1
  9397 ;; Hardware stack levels required when called: 2
  9398 ;; This function calls:
  9399 ;;		Nothing
  9400 ;; This function is called by:
  9401 ;;		_PCF8574_Write
  9402 ;;		_LCD_I2C_Init
  9403 ;; This function uses a non-reentrant model
  9404 ;;
  9405                           
  9406                           	psect	text41
  9407  003CF2                     __ptext41:
  9408                           	callstack 0
  9409  003CF2                     _I2C_Start:
  9410                           	callstack 24
  9411  003CF2                     
  9412                           ;I2C.c: 43:     SSPCON2bits.SEN = 1;
  9413  003CF2  80C5               	bsf	197,0,c	;volatile
  9414  003CF4                     l93:
  9415  003CF4  B0C5               	btfsc	197,0,c	;volatile
  9416  003CF6  EF7F  F01E         	goto	u3011
  9417  003CFA  EF81  F01E         	goto	u3010
  9418  003CFE                     u3011:
  9419  003CFE  EF7A  F01E         	goto	l93
  9420  003D02                     u3010:
  9421  003D02  0012               	return		;funcret
  9422  003D04                     __end_of_I2C_Start:
  9423                           	callstack 0
  9424                           
  9425 ;; *************** function _I2C_ADDRESS_SLAVE *****************
  9426 ;; Defined at:
  9427 ;;		line 48 in file "I2C.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  address         1    wreg     unsigned char 
  9430 ;;  modo            1    5[COMRAM] unsigned char 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  address         1    7[COMRAM] unsigned char 
  9433 ;;  data            1    8[COMRAM] unsigned char 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  1    wreg      void 
  9436 ;; Registers used:
  9437 ;;		wreg, status,2, status,0
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9443 ;;      Params:         1       0       0       0       0       0       0       0       0
  9444 ;;      Locals:         2       0       0       0       0       0       0       0       0
  9445 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9446 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9447 ;;Total ram usage:        4 bytes
  9448 ;; Hardware stack levels used: 1
  9449 ;; Hardware stack levels required when called: 2
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_PCF8574_Write
  9454 ;;		_LCD_I2C_Init
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           	psect	text42
  9459  003BA0                     __ptext42:
  9460                           	callstack 0
  9461  003BA0                     _I2C_ADDRESS_SLAVE:
  9462                           	callstack 24
  9463                           
  9464                           ;incstack = 0
  9465                           ;I2C_ADDRESS_SLAVE@address stored from wreg
  9466  003BA0  6E08               	movwf	I2C_ADDRESS_SLAVE@address^0,c
  9467  003BA2                     
  9468                           ;I2C.c: 51:     data = ((address & 0xFE)) | (modo & 0x01) ;
  9469  003BA2  C006  F007         	movff	I2C_ADDRESS_SLAVE@modo,??_I2C_ADDRESS_SLAVE
  9470  003BA6  0E01               	movlw	1
  9471  003BA8  1607               	andwf	??_I2C_ADDRESS_SLAVE^0,f,c
  9472  003BAA  5008               	movf	I2C_ADDRESS_SLAVE@address^0,w,c
  9473  003BAC  0BFE               	andlw	254
  9474  003BAE  1007               	iorwf	??_I2C_ADDRESS_SLAVE^0,w,c
  9475  003BB0  6E09               	movwf	I2C_ADDRESS_SLAVE@data^0,c
  9476  003BB2                     
  9477                           ;I2C.c: 52:     SSPBUF = data;
  9478  003BB2  C009  FFC9         	movff	I2C_ADDRESS_SLAVE@data,4041	;volatile
  9479  003BB6                     
  9480                           ;I2C.c: 56:     SSPCON2bits.ACKDT = 0;
  9481  003BB6  9AC5               	bcf	197,5,c	;volatile
  9482  003BB8                     
  9483                           ;I2C.c: 58:     SSPCON2bits.ACKEN = 1;
  9484  003BB8  88C5               	bsf	197,4,c	;volatile
  9485  003BBA                     
  9486                           ;I2C.c: 60:     PIR1bits.SSPIF = 0;
  9487  003BBA  969E               	bcf	158,3,c	;volatile
  9488  003BBC                     l99:
  9489  003BBC  A69E               	btfss	158,3,c	;volatile
  9490  003BBE  EFE3  F01D         	goto	u3021
  9491  003BC2  EFE5  F01D         	goto	u3020
  9492  003BC6                     u3021:
  9493  003BC6  EFDE  F01D         	goto	l99
  9494  003BCA                     u3020:
  9495  003BCA  0012               	return		;funcret
  9496  003BCC                     __end_of_I2C_ADDRESS_SLAVE:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function _Interrupt_global *****************
  9500 ;; Defined at:
  9501 ;;		line 46 in file "TIMER0.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;		None
  9504 ;; Auto vars:     Size  Location     Type
  9505 ;;		None
  9506 ;; Return value:  Size  Location     Type
  9507 ;;                  1    wreg      void 
  9508 ;; Registers used:
  9509 ;;		None
  9510 ;; Tracked objects:
  9511 ;;		On entry : 0/0
  9512 ;;		On exit  : 0/0
  9513 ;;		Unchanged: 0/0
  9514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9515 ;;      Params:         0       0       0       0       0       0       0       0       0
  9516 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9518 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9519 ;;Total ram usage:        0 bytes
  9520 ;; Hardware stack levels used: 1
  9521 ;; Hardware stack levels required when called: 2
  9522 ;; This function calls:
  9523 ;;		Nothing
  9524 ;; This function is called by:
  9525 ;;		_main
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           
  9529                           	psect	text43
  9530  003D04                     __ptext43:
  9531                           	callstack 0
  9532  003D04                     _Interrupt_global:
  9533                           	callstack 28
  9534  003D04                     
  9535                           ;TIMER0.c: 48:     INTCONbits.GIE_GIEH = 1;
  9536  003D04  8ED0               	bsf	208,7,c	;volatile
  9537                           
  9538                           ;TIMER0.c: 49: 
  9539  003D06  94F1               	bcf	241,2,c	;volatile
  9540                           
  9541                           ;TIMER0.c: 50:     INTCONbits.PEIE_GIEL = 1;
  9542  003D08  809F               	bsf	159,0,c	;volatile
  9543                           
  9544                           ;TIMER0.c: 54: 
  9545  003D0A  8EF2               	bsf	242,7,c	;volatile
  9546                           
  9547                           ;TIMER0.c: 56: 
  9548  003D0C  8CF2               	bsf	242,6,c	;volatile
  9549  003D0E  0012               	return		;funcret
  9550  003D10                     __end_of_Interrupt_global:
  9551                           	callstack 0
  9552                           
  9553 ;; *************** function _Interrupt_TIMER1 *****************
  9554 ;; Defined at:
  9555 ;;		line 52 in file "TIMER1.c"
  9556 ;; Parameters:    Size  Location     Type
  9557 ;;		None
  9558 ;; Auto vars:     Size  Location     Type
  9559 ;;		None
  9560 ;; Return value:  Size  Location     Type
  9561 ;;                  1    wreg      void 
  9562 ;; Registers used:
  9563 ;;		None
  9564 ;; Tracked objects:
  9565 ;;		On entry : 0/0
  9566 ;;		On exit  : 0/0
  9567 ;;		Unchanged: 0/0
  9568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9569 ;;      Params:         0       0       0       0       0       0       0       0       0
  9570 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9571 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9572 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9573 ;;Total ram usage:        0 bytes
  9574 ;; Hardware stack levels used: 1
  9575 ;; Hardware stack levels required when called: 2
  9576 ;; This function calls:
  9577 ;;		Nothing
  9578 ;; This function is called by:
  9579 ;;		_main
  9580 ;; This function uses a non-reentrant model
  9581 ;;
  9582                           
  9583                           	psect	text44
  9584  003D10                     __ptext44:
  9585                           	callstack 0
  9586  003D10                     _Interrupt_TIMER1:
  9587                           	callstack 28
  9588  003D10                     
  9589                           ;TIMER1.c: 54:     PIE1bits.TMR1IE = 1;
  9590  003D10  809D               	bsf	157,0,c	;volatile
  9591                           
  9592                           ;TIMER1.c: 56:     PIR1bits.TMR1IF = 0;
  9593  003D12  909E               	bcf	158,0,c	;volatile
  9594  003D14  0012               	return		;funcret
  9595  003D16                     __end_of_Interrupt_TIMER1:
  9596                           	callstack 0
  9597                           
  9598 ;; *************** function _Interrupt_TIMER0 *****************
  9599 ;; Defined at:
  9600 ;;		line 59 in file "TIMER0.c"
  9601 ;; Parameters:    Size  Location     Type
  9602 ;;		None
  9603 ;; Auto vars:     Size  Location     Type
  9604 ;;		None
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		None
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9614 ;;      Params:         0       0       0       0       0       0       0       0       0
  9615 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9617 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9618 ;;Total ram usage:        0 bytes
  9619 ;; Hardware stack levels used: 1
  9620 ;; Hardware stack levels required when called: 2
  9621 ;; This function calls:
  9622 ;;		Nothing
  9623 ;; This function is called by:
  9624 ;;		_main
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           	psect	text45
  9629  003D16                     __ptext45:
  9630                           	callstack 0
  9631  003D16                     _Interrupt_TIMER0:
  9632                           	callstack 28
  9633  003D16  8AF2               	bsf	242,5,c	;volatile
  9634  003D18  94F2               	bcf	242,2,c	;volatile
  9635  003D1A  0012               	return		;funcret
  9636  003D1C                     __end_of_Interrupt_TIMER0:
  9637                           	callstack 0
  9638                           
  9639 ;; *************** function _ADC_Read *****************
  9640 ;; Defined at:
  9641 ;;		line 42 in file "ADC.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  CHx             1    wreg     unsigned char 
  9644 ;; Auto vars:     Size  Location     Type
  9645 ;;  CHx             1    9[COMRAM] unsigned char 
  9646 ;; Return value:  Size  Location     Type
  9647 ;;                  2    5[COMRAM] unsigned short 
  9648 ;; Registers used:
  9649 ;;		wreg, status,2, status,0
  9650 ;; Tracked objects:
  9651 ;;		On entry : 0/0
  9652 ;;		On exit  : 0/0
  9653 ;;		Unchanged: 0/0
  9654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9655 ;;      Params:         2       0       0       0       0       0       0       0       0
  9656 ;;      Locals:         1       0       0       0       0       0       0       0       0
  9657 ;;      Temps:          2       0       0       0       0       0       0       0       0
  9658 ;;      Totals:         5       0       0       0       0       0       0       0       0
  9659 ;;Total ram usage:        5 bytes
  9660 ;; Hardware stack levels used: 1
  9661 ;; Hardware stack levels required when called: 2
  9662 ;; This function calls:
  9663 ;;		Nothing
  9664 ;; This function is called by:
  9665 ;;		_main
  9666 ;; This function uses a non-reentrant model
  9667 ;;
  9668                           
  9669                           	psect	text46
  9670  0039A4                     __ptext46:
  9671                           	callstack 0
  9672  0039A4                     _ADC_Read:
  9673                           	callstack 28
  9674                           
  9675                           ;incstack = 0
  9676                           ;ADC_Read@CHx stored from wreg
  9677  0039A4  6E0A               	movwf	ADC_Read@CHx^0,c
  9678  0039A6                     
  9679                           ;ADC.c: 44:     ADCON0 = (ADCON0 & 0x03) | ((CHx<<2) & 0x3C);
  9680  0039A6  C00A  F008         	movff	ADC_Read@CHx,??_ADC_Read
  9681  0039AA  90D8               	bcf	status,0,c
  9682  0039AC  3608               	rlcf	??_ADC_Read^0,f,c
  9683  0039AE  90D8               	bcf	status,0,c
  9684  0039B0  3608               	rlcf	??_ADC_Read^0,f,c
  9685  0039B2  0E3C               	movlw	60
  9686  0039B4  1608               	andwf	??_ADC_Read^0,f,c
  9687  0039B6  50C2               	movf	194,w,c	;volatile
  9688  0039B8  0B03               	andlw	3
  9689  0039BA  1008               	iorwf	??_ADC_Read^0,w,c
  9690  0039BC  6EC2               	movwf	194,c	;volatile
  9691  0039BE                     
  9692                           ;ADC.c: 50:     ADCON0bits.GO_DONE = 1;
  9693  0039BE  82C2               	bsf	194,1,c	;volatile
  9694  0039C0                     l179:
  9695  0039C0  B2C2               	btfsc	194,1,c	;volatile
  9696  0039C2  EFE5  F01C         	goto	u4791
  9697  0039C6  EFE7  F01C         	goto	u4790
  9698  0039CA                     u4791:
  9699  0039CA  EFE0  F01C         	goto	l179
  9700  0039CE                     u4790:
  9701  0039CE                     
  9702                           ;ADC.c: 54:     _delay((unsigned long)((2)*(20000000UL/4000.0)));
  9703  0039CE  0E0D               	movlw	13
  9704  0039D0  6E08               	movwf	??_ADC_Read^0,c
  9705  0039D2  0EFC               	movlw	252
  9706  0039D4                     u7437:
  9707  0039D4  2EE8               	decfsz	wreg,f,c
  9708  0039D6  D7FE               	bra	u7437
  9709  0039D8  2E08               	decfsz	??_ADC_Read^0,f,c
  9710  0039DA  D7FC               	bra	u7437
  9711  0039DC                     
  9712                           ;ADC.c: 56:     return ((ADRESH<<8)+ADRESL);
  9713  0039DC  50C4               	movf	196,w,c	;volatile
  9714  0039DE  6E09               	movwf	(??_ADC_Read+1)^0,c
  9715  0039E0  6A08               	clrf	??_ADC_Read^0,c
  9716  0039E2  50C3               	movf	195,w,c	;volatile
  9717  0039E4  2408               	addwf	??_ADC_Read^0,w,c
  9718  0039E6  6E06               	movwf	?_ADC_Read^0,c
  9719  0039E8  0E00               	movlw	0
  9720  0039EA  2009               	addwfc	(??_ADC_Read+1)^0,w,c
  9721  0039EC  6E07               	movwf	(?_ADC_Read+1)^0,c
  9722  0039EE  0012               	return		;funcret
  9723  0039F0                     __end_of_ADC_Read:
  9724                           	callstack 0
  9725                           
  9726 ;; *************** function _ADC_Conversion *****************
  9727 ;; Defined at:
  9728 ;;		line 11 in file "ADC.c"
  9729 ;; Parameters:    Size  Location     Type
  9730 ;;		None
  9731 ;; Auto vars:     Size  Location     Type
  9732 ;;		None
  9733 ;; Return value:  Size  Location     Type
  9734 ;;                  1    wreg      void 
  9735 ;; Registers used:
  9736 ;;		None
  9737 ;; Tracked objects:
  9738 ;;		On entry : 0/0
  9739 ;;		On exit  : 0/0
  9740 ;;		Unchanged: 0/0
  9741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9742 ;;      Params:         0       0       0       0       0       0       0       0       0
  9743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  9745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  9746 ;;Total ram usage:        0 bytes
  9747 ;; Hardware stack levels used: 1
  9748 ;; Hardware stack levels required when called: 2
  9749 ;; This function calls:
  9750 ;;		Nothing
  9751 ;; This function is called by:
  9752 ;;		_main
  9753 ;; This function uses a non-reentrant model
  9754 ;;
  9755                           
  9756                           	psect	text47
  9757  003C1C                     __ptext47:
  9758                           	callstack 0
  9759  003C1C                     _ADC_Conversion:
  9760                           	callstack 28
  9761  003C1C                     
  9762                           ;ADC.c: 13:     ADCON0bits.GO_DONE = 0;
  9763  003C1C  92C2               	bcf	194,1,c	;volatile
  9764                           
  9765                           ;ADC.c: 15:     ADCON0bits.ADON = 1;
  9766  003C1E  80C2               	bsf	194,0,c	;volatile
  9767                           
  9768                           ;ADC.c: 18:     ADCON1bits.VCFG1 = 0;
  9769  003C20  9AC1               	bcf	193,5,c	;volatile
  9770                           
  9771                           ;ADC.c: 19:     ADCON1bits.VCFG0 = 0;
  9772  003C22  98C1               	bcf	193,4,c	;volatile
  9773                           
  9774                           ;ADC.c: 22:     ADCON1bits.PCFG3 = 1;
  9775  003C24  86C1               	bsf	193,3,c	;volatile
  9776                           
  9777                           ;ADC.c: 23:     ADCON1bits.PCFG2 = 1;
  9778  003C26  84C1               	bsf	193,2,c	;volatile
  9779                           
  9780                           ;ADC.c: 24:     ADCON1bits.PCFG1 = 1;
  9781  003C28  82C1               	bsf	193,1,c	;volatile
  9782                           
  9783                           ;ADC.c: 25:     ADCON1bits.PCFG0 = 0;
  9784  003C2A  90C1               	bcf	193,0,c	;volatile
  9785                           
  9786                           ;ADC.c: 28:     ADCON2bits.ADFM = 1;
  9787  003C2C  8EC0               	bsf	192,7,c	;volatile
  9788                           
  9789                           ;ADC.c: 31:     ADCON2bits.ACQT2 = 0;
  9790  003C2E  9AC0               	bcf	192,5,c	;volatile
  9791                           
  9792                           ;ADC.c: 32:     ADCON2bits.ACQT1 = 1;
  9793  003C30  88C0               	bsf	192,4,c	;volatile
  9794                           
  9795                           ;ADC.c: 33:     ADCON2bits.ACQT0 = 1;
  9796  003C32  86C0               	bsf	192,3,c	;volatile
  9797                           
  9798                           ;ADC.c: 36:     ADCON2bits.ADCS2 = 1;
  9799  003C34  84C0               	bsf	192,2,c	;volatile
  9800                           
  9801                           ;ADC.c: 37:     ADCON2bits.ADCS1 = 1;
  9802  003C36  82C0               	bsf	192,1,c	;volatile
  9803                           
  9804                           ;ADC.c: 38:     ADCON2bits.ADCS0 = 0;
  9805  003C38  90C0               	bcf	192,0,c	;volatile
  9806  003C3A  0012               	return		;funcret
  9807  003C3C                     __end_of_ADC_Conversion:
  9808                           	callstack 0
  9809                           
  9810 ;; *************** function _LowISR *****************
  9811 ;; Defined at:
  9812 ;;		line 5 in file "TIMER0.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;		None
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;		None
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  1    wreg      void 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9826 ;;      Params:         0       0       0       0       0       0       0       0       0
  9827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9828 ;;      Temps:          4       0       0       0       0       0       0       0       0
  9829 ;;      Totals:         4       0       0       0       0       0       0       0       0
  9830 ;;Total ram usage:        4 bytes
  9831 ;; Hardware stack levels used: 1
  9832 ;; Hardware stack levels required when called: 1
  9833 ;; This function calls:
  9834 ;;		Nothing
  9835 ;; This function is called by:
  9836 ;;		Interrupt level 1
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	intcodelo
  9841  000018                     __pintcodelo:
  9842                           	callstack 0
  9843  000018                     _LowISR:
  9844                           	callstack 21
  9845                           
  9846                           ;incstack = 0
  9847  000018  805A               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9848  00001A  CFD8 F003          	movff	status,??_LowISR+1
  9849  00001E  CFE8 F004          	movff	wreg,??_LowISR+2
  9850  000022  CFE0 F005          	movff	bsr,??_LowISR+3
  9851  000026                     
  9852                           ;TIMER0.c: 7: 
  9853  000026  AAF2               	btfss	242,5,c	;volatile
  9854  000028  EF18  F000         	goto	i1u501_21
  9855  00002C  EF1A  F000         	goto	i1u501_20
  9856  000030                     i1u501_21:
  9857  000030  EF39  F000         	goto	i1l206
  9858  000034                     i1u501_20:
  9859  000034  A4F2               	btfss	242,2,c	;volatile
  9860  000036  EF1F  F000         	goto	i1u502_21
  9861  00003A  EF21  F000         	goto	i1u502_20
  9862  00003E                     i1u502_21:
  9863  00003E  EF39  F000         	goto	i1l206
  9864  000042                     i1u502_20:
  9865  000042                     
  9866                           ;TIMER0.c: 9: 
  9867  000042  B08B               	btfsc	139,0,c	;volatile
  9868  000044  EF26  F000         	goto	i1u503_21
  9869  000048  EF29  F000         	goto	i1u503_20
  9870  00004C                     i1u503_21:
  9871  00004C  0E01               	movlw	1
  9872  00004E  EF2A  F000         	goto	i1u503_26
  9873  000052                     i1u503_20:
  9874  000052  0E00               	movlw	0
  9875  000054                     i1u503_26:
  9876  000054  0AFF               	xorlw	255
  9877  000056  6E02               	movwf	??_LowISR^0,c
  9878  000058  508B               	movf	139,w,c	;volatile
  9879  00005A  1802               	xorwf	??_LowISR^0,w,c
  9880  00005C  0BFE               	andlw	-2
  9881  00005E  1802               	xorwf	??_LowISR^0,w,c
  9882  000060  6E8B               	movwf	139,c	;volatile
  9883  000062                     
  9884                           ;TIMER0.c: 11: 
  9885  000062  0E48               	movlw	72
  9886  000064  6ED7               	movwf	215,c	;volatile
  9887  000066                     
  9888                           ;TIMER0.c: 12:      }
  9889  000066  0EE4               	movlw	228
  9890  000068  6ED6               	movwf	214,c	;volatile
  9891  00006A                     
  9892                           ;TIMER0.c: 14: 
  9893  00006A  94F2               	bcf	242,2,c	;volatile
  9894  00006C                     
  9895                           ;TIMER0.c: 16: 
  9896  00006C  0100               	movlb	0	; () banked
  9897  00006E  4BF3               	infsnz	_cont& (0+255),f,b
  9898  000070  2BF4               	incf	(_cont+1)& (0+255),f,b
  9899  000072                     i1l206:
  9900  000072  C005  FFE0         	movff	??_LowISR+3,bsr
  9901  000076  C004  FFE8         	movff	??_LowISR+2,wreg
  9902  00007A  C003  FFD8         	movff	??_LowISR+1,status
  9903  00007E  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9904  000080  0010               	retfie	
  9905  000082                     __end_of_LowISR:
  9906                           	callstack 0
  9907                           
  9908 ;; *************** function _HighISR *****************
  9909 ;; Defined at:
  9910 ;;		line 4 in file "TIMER1.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;		None
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      void 
  9917 ;; Registers used:
  9918 ;;		wreg, status,2, status,0
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  9924 ;;      Params:         0       0       0       0       0       0       0       0       0
  9925 ;;      Locals:         0       0       0       0       0       0       0       0       0
  9926 ;;      Temps:          1       0       0       0       0       0       0       0       0
  9927 ;;      Totals:         1       0       0       0       0       0       0       0       0
  9928 ;;Total ram usage:        1 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; This function calls:
  9931 ;;		Nothing
  9932 ;; This function is called by:
  9933 ;;		Interrupt level 2
  9934 ;; This function uses a non-reentrant model
  9935 ;;
  9936                           
  9937                           	psect	intcode
  9938  000008                     __pintcode:
  9939                           	callstack 0
  9940  000008                     _HighISR:
  9941                           	callstack 21
  9942                           
  9943                           ;incstack = 0
  9944  000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9945  00000A  ED56  F01C         	call	int_func,f	;refresh shadow registers
  9946                           
  9947                           	psect	intcode_body
  9948  0038AC                     __pintcode_body:
  9949                           	callstack 21
  9950  0038AC                     int_func:
  9951                           	callstack 21
  9952  0038AC  0006               	pop		; remove dummy address from shadow register refresh
  9953  0038AE                     
  9954                           ;TIMER1.c: 6:     if(PIE1bits.TMR1IE && PIR1bits.TMR1IF) {
  9955  0038AE  A09D               	btfss	157,0,c	;volatile
  9956  0038B0  EF5C  F01C         	goto	i2u504_41
  9957  0038B4  EF5E  F01C         	goto	i2u504_40
  9958  0038B8                     i2u504_41:
  9959  0038B8  EF7E  F01C         	goto	i2l235
  9960  0038BC                     i2u504_40:
  9961  0038BC  A09E               	btfss	158,0,c	;volatile
  9962  0038BE  EF63  F01C         	goto	i2u505_41
  9963  0038C2  EF65  F01C         	goto	i2u505_40
  9964  0038C6                     i2u505_41:
  9965  0038C6  EF7E  F01C         	goto	i2l235
  9966  0038CA                     i2u505_40:
  9967  0038CA                     
  9968                           ;TIMER1.c: 8:        LATCbits.LATC1 = ~LATCbits.LATC1;
  9969  0038CA  B28B               	btfsc	139,1,c	;volatile
  9970  0038CC  EF6A  F01C         	goto	i2u506_41
  9971  0038D0  EF6D  F01C         	goto	i2u506_40
  9972  0038D4                     i2u506_41:
  9973  0038D4  0E01               	movlw	1
  9974  0038D6  EF6E  F01C         	goto	i2u506_46
  9975  0038DA                     i2u506_40:
  9976  0038DA  0E00               	movlw	0
  9977  0038DC                     i2u506_46:
  9978  0038DC  0AFF               	xorlw	255
  9979  0038DE  6E01               	movwf	??_HighISR^0,c
  9980  0038E0  4601               	rlncf	??_HighISR^0,f,c
  9981  0038E2  508B               	movf	139,w,c	;volatile
  9982  0038E4  1801               	xorwf	??_HighISR^0,w,c
  9983  0038E6  0BFD               	andlw	-3
  9984  0038E8  1801               	xorwf	??_HighISR^0,w,c
  9985  0038EA  6E8B               	movwf	139,c	;volatile
  9986  0038EC                     
  9987                           ;TIMER1.c: 10:        TMR1H = 0x6;
  9988  0038EC  0E06               	movlw	6
  9989  0038EE  6ECF               	movwf	207,c	;volatile
  9990  0038F0                     
  9991                           ;TIMER1.c: 11:        TMR1L = 0xF9;
  9992  0038F0  0EF9               	movlw	249
  9993  0038F2  6ECE               	movwf	206,c	;volatile
  9994  0038F4                     
  9995                           ;TIMER1.c: 13:        PIR1bits.TMR1IF = 0;
  9996  0038F4  909E               	bcf	158,0,c	;volatile
  9997  0038F6                     
  9998                           ;TIMER1.c: 15:        cont1++;
  9999  0038F6  0100               	movlb	0	; () banked
 10000  0038F8  4BF1               	infsnz	_cont1& (0+255),f,b
 10001  0038FA  2BF2               	incf	(_cont1+1)& (0+255),f,b
 10002  0038FC                     i2l235:
 10003  0038FC  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 10004  0038FE  0011               	retfie		f
 10005  003900                     __end_of_HighISR:
 10006                           	callstack 0
 10007                           
 10008                           	psect	rparam
 10009  0000                     
 10010                           	psect	temp
 10011  00005A                     btemp:
 10012                           	callstack 0
 10013  00005A                     	ds	1
 10014  0000                     int$flags	set	btemp
 10015  0000                     wtemp8	set	btemp+1
 10016  0000                     ttemp5	set	btemp+1
 10017  0000                     ttemp6	set	btemp+4
 10018  0000                     ttemp7	set	btemp+8
 10019                           
 10020                           	psect	idloc
 10021                           
 10022                           ;Config register IDLOC0 @ 0x200000
 10023                           ;	unspecified, using default values
 10024  200000                     	org	2097152
 10025  200000  FF                 	db	255
 10026                           
 10027                           ;Config register IDLOC1 @ 0x200001
 10028                           ;	unspecified, using default values
 10029  200001                     	org	2097153
 10030  200001  FF                 	db	255
 10031                           
 10032                           ;Config register IDLOC2 @ 0x200002
 10033                           ;	unspecified, using default values
 10034  200002                     	org	2097154
 10035  200002  FF                 	db	255
 10036                           
 10037                           ;Config register IDLOC3 @ 0x200003
 10038                           ;	unspecified, using default values
 10039  200003                     	org	2097155
 10040  200003  FF                 	db	255
 10041                           
 10042                           ;Config register IDLOC4 @ 0x200004
 10043                           ;	unspecified, using default values
 10044  200004                     	org	2097156
 10045  200004  FF                 	db	255
 10046                           
 10047                           ;Config register IDLOC5 @ 0x200005
 10048                           ;	unspecified, using default values
 10049  200005                     	org	2097157
 10050  200005  FF                 	db	255
 10051                           
 10052                           ;Config register IDLOC6 @ 0x200006
 10053                           ;	unspecified, using default values
 10054  200006                     	org	2097158
 10055  200006  FF                 	db	255
 10056                           
 10057                           ;Config register IDLOC7 @ 0x200007
 10058                           ;	unspecified, using default values
 10059  200007                     	org	2097159
 10060  200007  FF                 	db	255
 10061                           
 10062                           	psect	config
 10063                           
 10064                           ;Config register CONFIG1L @ 0x300000
 10065                           ;	PLL Prescaler Selection bits
 10066                           ;	PLLDIV = 5, Divide by 5 (20 MHz oscillator input)
 10067                           ;	System Clock Postscaler Selection bits
 10068                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
 10069                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
 10070                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
 10071  300000                     	org	3145728
 10072  300000  04                 	db	4
 10073                           
 10074                           ;Config register CONFIG1H @ 0x300001
 10075                           ;	Oscillator Selection bits
 10076                           ;	FOSC = HSPLL_HS, HS oscillator, PLL enabled (HSPLL)
 10077                           ;	Fail-Safe Clock Monitor Enable bit
 10078                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10079                           ;	Internal/External Oscillator Switchover bit
 10080                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10081  300001                     	org	3145729
 10082  300001  0E                 	db	14
 10083                           
 10084                           ;Config register CONFIG2L @ 0x300002
 10085                           ;	Power-up Timer Enable bit
 10086                           ;	PWRT = ON, PWRT enabled
 10087                           ;	Brown-out Reset Enable bits
 10088                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
 10089                           ;	Brown-out Reset Voltage bits
 10090                           ;	BORV = 3, Minimum setting 2.05V
 10091                           ;	USB Voltage Regulator Enable bit
 10092                           ;	VREGEN = OFF, USB voltage regulator disabled
 10093  300002                     	org	3145730
 10094  300002  18                 	db	24
 10095                           
 10096                           ;Config register CONFIG2H @ 0x300003
 10097                           ;	Watchdog Timer Enable bit
 10098                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 10099                           ;	Watchdog Timer Postscale Select bits
 10100                           ;	WDTPS = 32768, 1:32768
 10101  300003                     	org	3145731
 10102  300003  1E                 	db	30
 10103                           
 10104                           ; Padding undefined space
 10105  300004                     	org	3145732
 10106  300004  FF                 	db	255
 10107                           
 10108                           ;Config register CONFIG3H @ 0x300005
 10109                           ;	CCP2 MUX bit
 10110                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
 10111                           ;	PORTB A/D Enable bit
 10112                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10113                           ;	Low-Power Timer 1 Oscillator Enable bit
 10114                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10115                           ;	MCLR Pin Enable bit
 10116                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10117  300005                     	org	3145733
 10118  300005  83                 	db	131
 10119                           
 10120                           ;Config register CONFIG4L @ 0x300006
 10121                           ;	Stack Full/Underflow Reset Enable bit
 10122                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10123                           ;	Single-Supply ICSP Enable bit
 10124                           ;	LVP = OFF, Single-Supply ICSP disabled
 10125                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
 10126                           ;	ICPRT = OFF, ICPORT disabled
 10127                           ;	Extended Instruction Set Enable bit
 10128                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10129                           ;	Background Debugger Enable bit
 10130                           ;	DEBUG = 0x1, unprogrammed default
 10131  300006                     	org	3145734
 10132  300006  81                 	db	129
 10133                           
 10134                           ; Padding undefined space
 10135  300007                     	org	3145735
 10136  300007  FF                 	db	255
 10137                           
 10138                           ;Config register CONFIG5L @ 0x300008
 10139                           ;	Code Protection bit
 10140                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
 10141                           ;	Code Protection bit
 10142                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
 10143                           ;	Code Protection bit
 10144                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
 10145                           ;	Code Protection bit
 10146                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
 10147  300008                     	org	3145736
 10148  300008  0F                 	db	15
 10149                           
 10150                           ;Config register CONFIG5H @ 0x300009
 10151                           ;	Boot Block Code Protection bit
 10152                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
 10153                           ;	Data EEPROM Code Protection bit
 10154                           ;	CPD = OFF, Data EEPROM is not code-protected
 10155  300009                     	org	3145737
 10156  300009  C0                 	db	192
 10157                           
 10158                           ;Config register CONFIG6L @ 0x30000A
 10159                           ;	Write Protection bit
 10160                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
 10161                           ;	Write Protection bit
 10162                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
 10163                           ;	Write Protection bit
 10164                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
 10165                           ;	Write Protection bit
 10166                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
 10167  30000A                     	org	3145738
 10168  30000A  0F                 	db	15
 10169                           
 10170                           ;Config register CONFIG6H @ 0x30000B
 10171                           ;	Configuration Register Write Protection bit
 10172                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
 10173                           ;	Boot Block Write Protection bit
 10174                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
 10175                           ;	Data EEPROM Write Protection bit
 10176                           ;	WRTD = OFF, Data EEPROM is not write-protected
 10177  30000B                     	org	3145739
 10178  30000B  E0                 	db	224
 10179                           
 10180                           ;Config register CONFIG7L @ 0x30000C
 10181                           ;	Table Read Protection bit
 10182                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10183                           ;	Table Read Protection bit
 10184                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10185                           ;	Table Read Protection bit
 10186                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10187                           ;	Table Read Protection bit
 10188                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
 10189  30000C                     	org	3145740
 10190  30000C  0F                 	db	15
 10191                           
 10192                           ;Config register CONFIG7H @ 0x30000D
 10193                           ;	Boot Block Table Read Protection bit
 10194                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
 10195  30000D                     	org	3145741
 10196  30000D  40                 	db	64
 10197                           tosu	equ	0xFFF
 10198                           tosh	equ	0xFFE
 10199                           tosl	equ	0xFFD
 10200                           stkptr	equ	0xFFC
 10201                           pclatu	equ	0xFFB
 10202                           pclath	equ	0xFFA
 10203                           pcl	equ	0xFF9
 10204                           tblptru	equ	0xFF8
 10205                           tblptrh	equ	0xFF7
 10206                           tblptrl	equ	0xFF6
 10207                           tablat	equ	0xFF5
 10208                           prodh	equ	0xFF4
 10209                           prodl	equ	0xFF3
 10210                           indf0	equ	0xFEF
 10211                           postinc0	equ	0xFEE
 10212                           postdec0	equ	0xFED
 10213                           preinc0	equ	0xFEC
 10214                           plusw0	equ	0xFEB
 10215                           fsr0h	equ	0xFEA
 10216                           fsr0l	equ	0xFE9
 10217                           wreg	equ	0xFE8
 10218                           indf1	equ	0xFE7
 10219                           postinc1	equ	0xFE6
 10220                           postdec1	equ	0xFE5
 10221                           preinc1	equ	0xFE4
 10222                           plusw1	equ	0xFE3
 10223                           fsr1h	equ	0xFE2
 10224                           fsr1l	equ	0xFE1
 10225                           bsr	equ	0xFE0
 10226                           indf2	equ	0xFDF
 10227                           postinc2	equ	0xFDE
 10228                           postdec2	equ	0xFDD
 10229                           preinc2	equ	0xFDC
 10230                           plusw2	equ	0xFDB
 10231                           fsr2h	equ	0xFDA
 10232                           fsr2l	equ	0xFD9
 10233                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         136
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     87      89
    BANK0           160    123     157
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_17(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_8(CODE[4]), STR_7(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 20
		 -> bufferTx(BANK1[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1757$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1757$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    LCD_I2C_WriteText@string	PTR unsigned char  size(2) Largest target is 20
		 -> STR_6(CODE[13]), STR_5(CODE[15]), STR_4(CODE[13]), STR_3(CODE[2]), 
		 -> bufferTx(BANK1[20]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _efgtoa->___fladd
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___fldiv
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _atoi->_isspace
    _LCD_I2C_WriteText->_LCD_I2C_nibble
    _LCD_I2C_Init->_LCD_I2C_nibble
    _LCD_I2C_nibble->_LCD_I2C_Databus
    _LCD_I2C_Databus->_PCF8574_Write
    _PCF8574_Write->_I2C_ADDRESS_SLAVE

Critical Paths under _LowISR in COMRAM

    None.

Critical Paths under _HighISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _LowISR in BANK0

    None.

Critical Paths under _HighISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _LowISR in BANK1

    None.

Critical Paths under _HighISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _LowISR in BANK2

    None.

Critical Paths under _HighISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _LowISR in BANK3

    None.

Critical Paths under _HighISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _LowISR in BANK4

    None.

Critical Paths under _HighISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _LowISR in BANK5

    None.

Critical Paths under _HighISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _LowISR in BANK6

    None.

Critical Paths under _HighISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _LowISR in BANK7

    None.

Critical Paths under _HighISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5   58380
                                            117 BANK0      6     1      5
                     _ADC_Conversion
                           _ADC_Read
                   _Interrupt_TIMER0
                   _Interrupt_TIMER1
                   _Interrupt_global
                       _LCD_I2C_Init
                  _LCD_I2C_WriteText
                        _Master_Mode
                      _Timer0_enable
                      _Timer1_enable
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                           ___xxtofl
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    15      8   38990
                                             96 BANK0     21    13      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   38486
                                             85 COMRAM     2     2      0
                                             90 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           44    38      6   37959
                                             72 BANK0     18    12      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              5 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              62    55      7   31372
                                             10 BANK0     62    55      7
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              6     4      2    1105
                                             11 COMRAM     6     4      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             69 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              5 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4367
                                              0 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3802
                                             69 COMRAM    16     8      8
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    3953
                                             19 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8    1706
                                             44 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2903
                                             44 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     8      2    1404
                                             12 COMRAM    10     8      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              5 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              5 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              5 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (1) _Timer1_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Timer0_enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Master_Mode                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_WriteText                                    6     3      3    3232
                                             15 COMRAM     6     3      3
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (1) _LCD_I2C_Init                                         1     1      0    3374
                                             15 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
                    _LCD_I2C_Databus
                     _LCD_I2C_nibble
 ---------------------------------------------------------------------------------
 (2) _LCD_I2C_nibble                                       2     1      1    2028
                                             13 COMRAM     2     1      1
                    _LCD_I2C_Databus
 ---------------------------------------------------------------------------------
 (3) _LCD_I2C_Databus                                      3     2      1    1104
                                             10 COMRAM     3     2      1
                      _PCF8574_Write
 ---------------------------------------------------------------------------------
 (4) _PCF8574_Write                                        1     1      0     264
                                              9 COMRAM     1     1      0
                  _I2C_ADDRESS_SLAVE
                          _I2C_Start
                           _I2C_Stop
                     _I2C_Write_Data
 ---------------------------------------------------------------------------------
 (5) _I2C_Write_Data                                       1     1      0      22
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_ADDRESS_SLAVE                                    4     3      1     220
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _Interrupt_global                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_TIMER1                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt_TIMER0                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Conversion                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _LowISR                                               4     4      0       0
                                              1 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Conversion
   _ADC_Read
   _Interrupt_TIMER0
   _Interrupt_TIMER1
   _Interrupt_global
   _LCD_I2C_Init
     _I2C_ADDRESS_SLAVE
     _I2C_Start
     _I2C_Stop
     _I2C_Write_Data
     _LCD_I2C_Databus
       _PCF8574_Write
         _I2C_ADDRESS_SLAVE
         _I2C_Start
         _I2C_Stop
         _I2C_Write_Data
     _LCD_I2C_nibble
       _LCD_I2C_Databus
   _LCD_I2C_WriteText
     _LCD_I2C_nibble
   _Master_Mode
   _Timer0_enable
   _Timer1_enable
   ___fladd
     ___fldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___fldiv
   ___flge
     ___flmul (ARG)
   ___flmul
   ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _LowISR (ROOT)

 _HighISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      64       7       39.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     7B      9D       5       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     57      59       1       94.7%
BITBIGSFRhhlhl      20      0       0      24        0.0%
BITBIGSFRlll        20      0       0      28        0.0%
BITBIGSFRhhhlh      19      0       0      21        0.0%
BITBIGSFRhhhh        D      0       0      20        0.0%
BITBIGSFRllh         9      0       0      27        0.0%
BITBIGSFRhhll        8      0       0      25        0.0%
BITBIGSFRlh          6      0       0      26        0.0%
BITBIGSFRhhhllh      4      0       0      22        0.0%
BITBIGSFRhhhlll      3      0       0      23        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     15A      29        0.0%
DATA                 0      0     15A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Mar 30 16:39:05 2023

           ??_LCD_I2C_Init 0010               ___fldiv@aexp 0045               ___fldiv@bexp 0044  
             ___fldiv@sign 003D                _SSPSTATbits 000FC7                         _C1 00ED  
                       l90 3CC6                         l93 3CF4                         l96 3D02  
                       l99 3BBC               ___awdiv@sign 000B                         bsr 000FE0  
      ___wmul@multiplicand 0008          ?_Interrupt_global 0001          ??_LCD_I2C_Databus 000C  
                      l102 3BCA                        l111 3CE2                        l105 3C9E  
                      l114 3CF0                        l212 3D0E                        l108 3CAC  
                      l140 3692                        l215 3D1A                        l127 3C58  
                      l143 3C90                        l241 3D14                        l209 3C74  
                      l146 2EA8                        l244 3C1A                        l182 39EE  
                      l238 3CDE                        l159 31B4                        l503 37EC  
                      l176 3C3A                        l514 30B2                        l179 39C0  
                      l509 306C                        l541 2FAE                        l518 3B30  
                      l475 3516                        l902 2C40                        l814 3A36  
                      l831 2338                        l488 3742                        l840 2420  
                      l913 2BD8                        l906 2B7C                        l826 2514  
                      l922 3950                        l828 2374                        l772 1646  
                      l837 23BA                        l781 1916                        l773 1634  
                      l862 217A                        l774 15FA                        l839 2432  
                      l865 200C                        l858 1E16                        l875 213C  
                      l867 2084                        l963 355C                        l868 2072  
                      l789 1760                        l798 1830                        l966 359E  
                      l799 181E                        l968 35D8                        l984 1456  
                      l899 2AE4         ??_Interrupt_global 0006                        _pad 3518  
             ___awmod@sign 000B                        wreg 000FE8           ??_LCD_I2C_nibble 000F  
             ___flmul@aexp 0021               ___flmul@bexp 0026               ___flmul@sign 0020  
             ___flmul@temp 002B               ___flmul@prod 0027               ___fltol@exp1 000F  
                     l1000 0C04                       l1200 3A74                       l1115 2D8E  
                     l1203 3A7C                       l1124 2A8C                       l1028 1044  
                     l1134 3B68                       l1142 39A2                       l1118 2D96  
                     l1070 1D50                       l1127 29D0                       l1081 3846  
                     l1082 384E                       l1163 3452                       l1171 3AC0  
                     l1075 1C96                       l1092 32B2                       l1180 38AA  
                     l1148 3AF8                       l1174 3D1C                       l1190 3388  
                     l1186 3B9E                       l4020 35FA                       l4030 3630  
                     l4022 3608                       l4014 35DC                       l3080 3BB2  
                     l4040 365A                       l4032 3636                       l4024 3612  
                     l4016 35EA                       l4200 2E30                       l5000 34A6  
                     l3082 3BB6                       l3074 3CF2                       l3090 3C98  
                     l4050 368A                       l4042 366A                       l4034 3644  
                     l4026 3618                       l4018 35F4                       l4210 2E74  
                     l4202 2E40                       l5010 34E0                       l5002 34AE  
                     l3084 3BB8                       l3076 3BA2                       l3092 3C9A  
                     l4044 3674                       l4036 364E                       l4028 3626  
                     l4140 3C78                       l4212 2E7E                       l4204 2E4A  
                     l4220 30B6                       l4300 2B72                       l5020 3506  
                     l5012 34E8                       l5004 34B6                       l5100 3AFA  
                     l4150 3D04                       l3086 3BBA                       l3078 3BA2  
                     l3094 3C9C                       l4046 367A                       l4038 3654  
                     l4214 2E8E                       l4206 2E5A                       l4230 30E2  
                     l4222 30BA                       l4310 2BE8                       l4302 2BAE  
                     l5022 350E                       l5014 34EA                       l5006 34C4  
                     l5030 36A6                       l5102 3B10                       l5110 2EC0  
                     l4152 3D16                       l4160 3D10                       l3096 3CE0  
                     l3088 3C94                       l4048 3682                       l4216 2E98  
                     l4208 2E64                       l4240 3110                       l4232 30E8  
                     l4224 30C0                       l4320 2C30                       l4312 2BEC  
                     l4304 2BBA                       l5016 34F0                       l5008 34CA  
                     l5040 36DA                       l5032 36AE                       l5104 3B20  
                     l5120 2F10                       l5200 3A38                       l4218 3C1C  
                     l4234 30F6                       l4226 30CE                       l4250 3184  
                     l4170 3CBE                       l4154 3C5A                       l4162 3CC8  
                     l4314 2C10                       l4306 2BC8                       l5018 34F6  
                     l5050 3716                       l5042 36E2                       l5034 36B2  
                     l5026 3694                       l5130 2F3A                       l5122 2F14  
                     l5114 2ED4                       l5210 2878                       l4260 39CE  
                     l4180 2DB0                       l4172 2D98                       l4236 30FC  
                     l4228 30D4                       l4244 311E                       l4156 3C6A  
                     l4164 3CD4                       l4316 2C20                       l4308 2BE6  
                     l5052 371C                       l5044 36EA                       l5036 36C0  
                     l5028 3698                       l4500 14D6                       l5140 2F62  
                     l5132 2F44                       l5124 2F22                       l5116 2EFE  
                     l5108 2EAA                       l5212 2898                       l5204 3A38  
                     l4262 39DC                       l4190 2DF2                       l4182 2DBE  
                     l4174 2D9C                       l4246 3158                       l4238 310A  
                     l4158 3C72                       l4166 3CDC                       l4318 2C2E  
                     l5046 36F8                       l5054 3722                       l5038 36C8  
                     l5070 37C0                       l5062 3744                       l4510 14FE  
                     l4502 14D8                       l5142 2F6E                       l5134 2F4E  
                     l5118 2F00                       l5230 2A44                       l5222 2984  
                     l5214 28F0                       l5206 3A66                       l5310 0A14  
                     l5302 09C0                       l4256 39A6                       l4192 2DFC  
                     l4184 2DC8                       l4176 2DA6                       l4248 3180  
                     l4168 3CAE                       l4280 2AA0                       l5056 3732  
                     l5048 370E                       l5072 37E4                       l5064 3772  
                     l5080 2FDE                       l4600 16CE                       l4520 1538  
                     l4512 150E                       l4504 14DE                       l5144 2F7E  
                     l5232 2A6C                       l5224 29C0                       l5216 2904  
                     l5160 3554                       l5152 3518                       l5400 0E3E  
                     l5312 0A30                       l5320 0A4C                       l4258 39BE  
                     l3650 3C3E                       l4194 2E0C                       l4186 2DD8  
                     l4178 2DAC                       l4290 2B1E                       l4282 2AAE  
                     l5250 399C                       l5242 3952                       l5058 373A  
                     l5074 37EA                       l5066 3782                       l5090 304C  
                     l5082 2FEE                       l4610 1740                       l4602 16D4  
                     l4530 1564                       l4522 154A                       l4514 151E  
                     l4506 14EC                       l5146 2F8E                       l5234 2A7C  
                     l5218 2912                       l5226 29F4                       l5170 35C0  
                     l5162 3568                       l5154 3526                       l5410 0EDE  
                     l5402 0E44                       l5330 0AD6                       l5322 0A66  
                     l3652 3C42                       l4196 2E16                       l4188 2DE2  
                     l4292 2B26                       l4284 2AF4                       l5244 3956  
                     l5068 37B0                       l5092 305A                       l5084 301C  
                     l4620 179A                       l4604 16FA                       l4612 1750  
                     l4540 1578                       l4532 1568                       l4524 1558  
                     l4516 1520                       l4508 14EE                       l5148 2F9E  
                     l5180 323C                       l5228 2A30                       l5164 357C  
                     l5156 353A                       l5500 12CC                       l5420 0FBA  
                     l5412 0F10                       l5404 0E62                       l5340 0BAE  
                     l5332 0B30                       l5308 09E6                       l5260 0874  
                     l3654 3C4C                       l4198 2E26                       l4294 2B32  
                     l4286 2B0A                       l4278 2A90                       l4702 3BF6  
                     l5238 3B32                       l5246 396A                       l4710 2188  
                     l5094 30AA                       l5086 302C                       l5078 2FB0  
                     l4630 17CA                       l4622 17A4                       l4614 1776  
                     l4606 172E                       l4550 158C                       l4542 157C  
                     l4534 156C                       l4526 155C                       l4518 1528  
                     l5182 3248                       l5174 31B6                       l4470 33B8  
                     l5166 3580                       l5158 3548                       l5510 1302  
                     l5502 12D4                       l5430 101C                       l5422 0FC0  
                     l5414 0F20                       l5406 0E96                       l5350 0BF8  
                     l5342 0BB2                       l5334 0B64                       l5326 0A9C  
                     l5270 08C4                       l5262 087C                       l5254 084C  
                     ?_pad 0016                       l4296 2B64                       l4704 3C12  
                     l5248 3998                       l4800 23B8                       l4720 21C8  
                     l4712 2196                       l5096 30B0                       l5088 303A  
                     l4640 17F2                       l4632 17CE                       l4624 17B2  
                     l4616 1786                       l4608 1730                       l4560 15C6  
                     l4552 1590                       l4544 1580                       l4536 1570  
                     l4528 1560                       l4480 1464                       l5192 32AA  
                     l5176 31D6                       l4472 33D6                       l4464 338A  
                     l5168 35AC                       l5520 135E                       l5512 130A  
                     l5504 12E4                       l5440 10D2                       l5432 1030  
                     l5424 0FF4                       l5416 0F30                       l5408 0EC8  
                     l5360 0C34                       l5344 0BC4                       l5352 0C10  
                     l5336 0B6C                       l5328 0AD0                       l5280 08FC  
                     l5272 08D2                       l5264 08A0                       l5256 0856  
                     l5600 32F8                       l4298 2B66                       l4810 2418  
                     l4802 23CA                       l4730 21EE                       l4722 21CA  
                     l4714 2198                       l4650 184C                       l4642 1800  
                     l4634 17DE                       l4626 17B4                       l4570 1618  
                     l4562 15E2                       l4554 1594                       l4546 1584  
                     l4538 1574                       l4490 14A4                       l4482 1472  
                     l5178 3214                       l5186 3254                       l4474 340C  
                     l4466 339C                       l5530 139E                       l5522 1366  
                     l5514 1316                       l5506 12EC                       l5450 1122  
                     l5442 10E6                       l5434 103C                       l5426 1008  
                     l5418 0F64                       l5370 0C9A                       l5362 0C50  
                     l5346 0BD6                       l5338 0B9E                       l5290 092C  
                     l5282 0900                       l5274 08E4                       l5266 08AA  
                     l5258 0866                       l5602 3310                       l4820 2486  
                     l4804 23D8                       l4740 222E                       l4732 21FC  
                     l4716 21A8                       l4724 21D2                       l4708 217C  
                     l4900 1EB2                       l4660 18B6                       l4652 185A  
                     l4644 1816                       l4628 17C2                       l4636 17E0  
                     l4580 1664                       l4572 1626                       l4564 15F2  
                     l4548 1588                       l4556 1598                       l4492 14A6  
                     l4484 1474                       l5188 3266                       l4468 33AE  
                     l5196 3850                       l5540 13DA                       l5532 13B0  
                     l5516 131C                       l5524 136C                       l5508 12FA  
                     l5460 1156                       l5452 1130                       l5444 10F8  
                     l5436 1060                       l5428 100C                       l5380 0CE2  
                     l5372 0CAC                       l5364 0C86                       l5348 0BDE  
                     l5292 095A                       l5276 08F0                       l5284 0906  
                     l5268 08B2                       l5604 332C                       l5620 1960  
                     l5612 1918                       l5700 37EE                       l4830 24F0  
                     l4814 2442                       l4822 248A                       l4806 23DC  
                     l4750 226E                       l4742 2230                       l4734 21FE  
                     l4726 21E2                       l4718 21B8                       l4910 1EF8  
                     l4902 1EC0                       l4670 18F0                       l4662 18D6  
                     l4654 1894                       l4590 16A4                       l4638 17EE  
                     l4574 1628                       l4566 1608                       l4558 159C  
                     l4486 1484                       l4494 14AE                       l4478 1458  
                     l5198 3860                       l5550 1420                       l5534 13BC  
                     l5526 137E                       l5518 1342                       l5470 1188  
                     l5462 1166                       l5454 1140                       l5446 1106  
                     l5438 10C4                       l5390 0D2A                       l5382 0CF0  
                     l5374 0CBE                       l5366 0C8E                       l5358 0C22  
                     l5294 0976                       l5278 08F8                       l5606 333E  
                     l5630 19F8                       l5622 1984                       l5614 193C  
                     l5702 37F6                       l5710 3912                       l5560 2C42  
                     l4832 24F4                       l4824 24A4                       l4816 244E  
                     l4808 23EA                       l4760 229E                       l4752 2276  
                     l4736 220E                       l4744 2238                       l4728 21E8  
                     l4920 1F66                       l4912 1F12                       l4904 1ECC  
                     l4672 18F6                       l4664 18DA                       l4648 1840  
                     l4656 1896                       l4592 16B0                       l4584 1678  
                     l4576 1632                       l4568 1614                       l4496 14BE  
                     l4488 1494                       l4680 3A7E                       l5552 1430  
                     l5544 13E0                       l5536 13C4                       l5528 1398  
                     l5480 1230                       l5472 119A                       l5464 116A  
                     l5456 1144                       l5448 110E                       l5392 0D3A  
                     l5384 0D08                       l5376 0CCC                       l5368 0C92  
                     l5296 098E                       l5608 3366                       l5640 1A88  
                     l5632 1A18                       l5624 198C                       l5616 194A  
                     l5704 3804                       l5712 391A                       l5720 2516  
                     l5570 2CB0                       l5562 2C56                       l4834 2502  
                     l4826 24BA                       l4818 245C                       l4770 22DC  
                     l4762 229E                       l4754 227A                       l4746 2248  
                     l4738 221E                       l4930 1FFC                       l4922 1F90  
                     l4914 1F22                       l4906 1EDC                       l4850 1D6C  
                     l4674 1904                       l4666 18E8                       l4658 18A6  
                     l4594 16B4                       l4586 1688                       l4578 1654  
                     l4498 14C4                       l4682 3A8A                       l4690 3B76  
                     l5554 1436                       l5546 140C                       l5538 13D4  
                     l5490 1288                       l5482 1238                       l5474 119E  
                     l5466 1170                       l5458 114A                       l5394 0D4E  
                     l5386 0D1A                       l5378 0CD0                       l5298 0998  
                     l5650 1B1E                       l5642 1A98                       l5626 199A  
                     l5618 195C                       l5706 382A                       l5714 3922  
                     l5730 2546                       l5722 252A                       l5572 2CB8  
                     l4836 2508                       l4828 24D4                       l4780 2328  
                     l4772 22EC                       l4748 225E                       l4940 203C  
                     l4932 200A                       l4924 1FC6                       l4916 1F3E  
                     l4908 1EE8                       l4860 1DA4                       l4852 1D6E  
                     l4676 1906                       l4668 18EE                       l4596 16C2  
                     l4588 1696                       l4684 3A9C                       l4692 3B7A  
                     l5548 1418                       l5492 1296                       l5468 1176  
                     l5476 11A4                       l5484 123C                       l5396 0DB2  
                     l5388 0D22                       l5652 1B34                       l5660 1B9E  
                     l5644 1ACA                       l5636 1A26                       l5628 19BE  
                     l5716 393E                       l5708 3900                       l5740 2650  
                     l5732 254A                       l5724 2532                       l5582 2D2A  
                     l5574 2CC0                       l5566 2C5A                       l4838 250A  
                     l4790 2372                       l4782 2336                       l4774 22FC  
                     l4766 22B2                       l4758 228E                       l4950 20AE  
                     l4942 206A                       l4934 201C                       l4926 1FD4  
                     l4918 1F4A                       l4870 1DD0                       l4862 1DB4  
                     l4854 1D7E                       l4846 1D52                       l4598 16C4  
                     l4686 3AA0                       l4694 3B92                       l5494 12A6  
                     l5486 125A                       l5478 11FC                       l5398 0E0A  
                     l5670 1C66                       l5662 1BCC                       l5654 1B42  
                     l5646 1ADA                       l5638 1A66                       l5750 26B0  
                     l5742 2676                       l5734 255C                       l5726 2536  
                     l5584 2D60                       l5576 2CF4                       l5832 2CDE  
                     l5568 2C76                       l4792 2384                       l4784 2342  
                     l4776 2304                       l4768 22CC                       l4960 2124  
                     l4952 20D8                       l4936 202A                       l4928 1FF2  
                     l4880 1E26                       l4872 1DE0                       l4864 1DBA  
                     l4856 1D8E                       l4848 1D5E                       l4688 3B6A  
                     l5496 12AA                       l5488 1276                       l5592 32B4  
                     l5680 1CDC                       l5656 1B72                       l5648 1B0C  
                     l5760 276A                       l5752 26C2                       l5744 2694  
                     l5736 256A                       l5728 2542                       l5834 3132  
                     l5586 2D72                       l4794 239A                       l4786 2360  
                     l4778 2314                       l4962 2140                       l4970 2166  
                     l4946 2094                       l4954 20DC                       l4938 202E  
                     l4890 1E60                       l4882 1E36                       l4874 1DF0  
                     l4866 1DC0                       l4858 1D9E                       l4698 3AC2  
                     l5498 12BA                       l5594 32DE                       l5682 1CF0  
                     l5666 1BF4                       l5770 27DA                       l5762 277C  
                     l5754 26F4                       l5746 2696                       l5738 25F8  
                     l4796 23A0                       l4788 2362                       l4972 216A  
                     l4964 2150                       l4956 20F6                       l4948 20A0  
                     l4892 1E76                       l4876 1E00                       l4868 1DCE  
                     l5668 1C32                       l5676 1CAA                       l5692 1D1A  
                     l5780 2814                       l5772 27EA                       l5764 27AE  
                     l5756 2706                       l5748 269E                       l4990 3472  
                     l4982 3454                       l4798 23AA                       l4966 215E  
                     l4958 210A                       l4894 1E82                       l4886 1E4A  
                     l4878 1E06                       l5598 32EA                       l5694 1D3E  
                     l5678 1CCE                       l5686 1CFE                       l5790 286C  
                     l5782 2826                       l5774 27EC                       l5758 2738  
                     l5766 27C0                       l4992 3480                       l4984 3458  
                     l4968 2160                       l4896 1E9A                       l4888 1E56  
                     l4976 39F0                       l5688 1D0C                       l5784 284C  
                     l5776 27F4                       l5768 27CA                       l4994 3488  
                     l4986 3466                       l4898 1EA6                       l4978 3A02  
                     l5786 2854                       l5778 27F8                       l4996 348C  
                     l4988 346E                       l5788 285C                       l4998 3494  
                     STR_1 082A                       STR_2 0830                       STR_3 0849  
                     STR_4 0810                       STR_5 0801                       STR_6 081D  
                     STR_7 0836                       STR_8 083E                       u3010 3D02  
                     u3011 3CFE                       u3020 3BCA                       u3021 3BC6  
                     u3030 3CAC                       u3031 3CA8                       u3040 3CF0  
                     u3041 3CEC                       u5100 340C                       u5101 3408  
                     u5110 1472                       u5111 146E                       u6000 34E0  
                     u5200 15C6                       u5120 1484                       u6001 34DC  
                     u5201 15C2                       u5121 1480                       u6010 3506  
                     u5210 15DE                       u5130 1494                       u6011 3502  
                     u5211 15D8                       u5131 1490                       u6020 36A6  
                     u6100 37E4                       u5300 16C2                       u5220 15E0  
                     u5140 14D6                       u6021 36A2                       u6101 37E0  
                     u5301 16BE                       u5141 14D2                       u6030 36C0  
                     u6110 2FDE                       u5310 16FA                       u5230 1608  
                     u5150 14EC                       u5070 339C                       u6031 36BC  
                     u6111 2FDA                       u5311 16F6                       u5231 1604  
                     u5151 14E8                       u5071 3398                       u4600 35EA  
                     u7000 2C76                       u6040 36DA                       u6120 301C  
                     u5400 1816                       u5320 1740                       u5240 1626  
                     u5160 14FE                       u6200 2F36                       u5080 33AE  
                     u4601 35E6                       u7001 2C72                       u6041 36D6  
                     u6121 3018                       u5401 1812                       u5321 173C  
                     u5241 1622                       u5161 14FA                       u6201 2F32  
                     u5081 33AA                       u4610 3608                       u7010 2CAC  
                     u6050 36F8                       u6130 303A                       u5410 182C  
                     u5330 1776                       u5250 1646                       u5170 150E  
                     u6210 2F5E                       u5090 33D6                       u4611 3604  
                     u7011 2CA8                       u6051 36F4                       u6131 3036  
                     u5411 1828                       u5331 1772                       u5251 1642  
                     u5171 150A                       u6211 2F5A                       u5091 33D2  
                     u4620 3626                       u7020 2D60                       u6060 370E  
                     u6140 305A                       u5420 1840                       u5340 1786  
                     u5260 1654                       u5180 154A                       u6220 2F7E  
                     u6300 323C                       u5500 3AC0                       u7100 1984  
                     u4621 3622                       u7021 2D5C                       u6061 370A  
                     u6141 3056                       u5421 183C                       u5341 1782  
                     u5261 1650                       u5181 1546                       u6221 2F7A  
                     u6301 3238                       u5501 3ABC                       u7101 1980  
                     u4630 3644                       u7030 2D72                       u6070 3732  
                     u6150 30AA                       u5430 185A                       u5350 17B2  
                     u5270 1664                       u5190 1558                       u6230 2F8E  
                     u6310 3266                       u5510 3B92                       u7110 19BE  
                     u4631 3640                       u7031 2D6E                       u6071 372E  
                     u6151 30A6                       u5431 1856                       u5351 17AE  
                     u5271 1660                       u5191 1554                       u6231 2F8A  
                     u6311 3262                       u5511 3B8E                       u7111 19BA  
                     u4640 366A                       u4800 2AA0                       u5600 225E  
                     u6080 3772                       u6160 3B10                       u5440 1894  
                     u5360 17C2                       u5280 1696                       u6400 2912  
                     u6240 3526                       u5520 3AF2                       u7040 32DE  
                     u7120 1A66                       u7200 2694                       u4641 3666  
                     u4801 2A9C                       u5601 225A                       u6081 376E  
                     u6161 3B0C                       u5441 1890                       u5361 17BE  
                     u5281 1692                       u6401 290E                       u6241 3522  
                     u5521 3AEC                       u7041 32DA                       u7121 1A62  
                     u7201 2690                       u4810 2AAE                       u5610 229E  
                     u6090 37B0                       u5450 18A6                       u5370 17DE  
                     u5290 16A4                       u6170 2EC0                       u6330 32A0  
                     u6250 3548                       u5530 3AF4                       u7050 3310  
                     u7130 1A98                       u7210 26F4                       u4811 2AAA  
                     u5611 229A                       u6091 37AC                       u5451 18A2  
                     u5371 17DA                       u5291 16A0                       u6171 2EBC  
                     u6331 329A                       u6251 3544                       u7051 330C  
                     u7131 1A94                       u7211 26F0                       u4820 2B0A  
                     u6500 396A                       u5700 2418                       u5620 2314  
                     u5540 2196                       u5460 18B6                       u5380 17EE  
                     u6180 2EF4                       u6340 32A2                       u6420 2980  
                     u6260 359E                       u7060 332C                       u7140 1ADA  
                     u7300 286C                       u7220 2738                       u4821 2B06  
                     u6501 3966                       u5701 2414                       u5621 2310  
                     u5541 2192                       u5461 18B2                       u5381 17EA  
                     u6325 3278                       u6421 297C                       u6261 359A  
                     u7061 3328                       u7141 1AD6                       u7301 2868  
                     u7221 2734                       u4830 2B60                       u6510 3998  
                     u5710 242E                       u5630 2336                       u5550 21A8  
                     u5470 18D6                       u5390 1800                       u6190 2F22  
                     u6430 29A4                       u6270 35AC                       u6350 3898  
                     u7070 333E                       u7150 1B1E                       u7230 276A  
                     u4831 2B5C                       u6511 3994                       u5711 242A  
                     u5631 2332                       u5551 21A4                       u5471 18D2  
                     u5391 17FC                       u6191 2F1E                       u6415 2926  
                     u6271 35A8                       u7071 333A                       u7151 1B1A  
                     u7231 2766                       u4760 3178                       u4840 2BAA  
                     u5720 2442                       u5640 2360                       u5560 21B8  
                     u5800 1DCE                       u5480 18E8                       u6280 31F6  
                     u6440 29C0                       u6416 2930                       u6360 38AA  
                     u6600 0A98                       u6520 0874                       u7080 3366  
                     u7160 1BCC                       u7240 27AE                       u4841 2BA6  
                     u5721 243E                       u5641 235C                       u5561 21B4  
                     u5801 1DCA                       u5481 18E4                       u6185 2EEA  
                     u6441 29BC                       u6417 2940                       u6361 38A6  
                     u6601 0A94                       u6521 0870                       u7081 3362  
                     u7161 1BC8                       u7241 27AA                       u4770 31A4  
                     u4850 2BC8                       u5730 245C                       u5650 2384  
                     u5570 21FC                       u5810 1DE0                       u5490 1904  
                     u6290 3214                       u6450 2A14                       u6370 3A66  
                     u6610 0B2C                       u6530 08C4                       u7170 1C32  
                     u7090 193C                       u7250 27DA                       u4851 2BC4  
                     u5731 2458                       u5651 2380                       u5571 21F8  
                     u5811 1DDC                       u5491 1900                       u6291 3210  
                     u6435 299A                       u6371 3A62                       u6611 0B28  
                     u6531 08C0                       u7171 1C2E                       u7091 1938  
                     u7251 27D6                       u4780 31B4                       u4860 2BD8  
                     u5740 24A4                       u5660 239A                       u5580 220E  
                     u5900 2080                       u5820 1DF0                       u6460 2A30  
                     u6380 28C0                       u6700 0CAC                       u6620 0B9E  
                     u6540 08D2                       u7180 1CCE                       u7260 27EA  
                     u7317 2DB6                       u4781 31B0                       u4861 2BD4  
                     u5741 24A0                       u5661 2396                       u5581 220A  
                     u5901 207C                       u5821 1DEC                       u6285 31EC  
                     u6461 2A2C                       u6357 388E                       u6701 0CA8  
                     u6621 0B9A                       u6541 08CE                       u7181 1CCA  
                     u7261 27E6                       u4790 39CE                       u4870 2BE6  
                     u5750 24D4                       u5670 23B8                       u5590 221E  
                     u5910 2094                       u5830 1E26                       u6470 2A6C  
                     u6390 28F0                       u6710 0CBE                       u6630 0BC4  
                     u6550 08E4                       u7190 3846                       u7270 2814  
                     u4791 39CA                       u7407 2E9E                       u7327 2DCE  
                     u4767 316E                       u4871 2BE2                       u5751 24D0  
                     u5671 23B4                       u5591 221A                       u5911 2090  
                     u5831 1E22                       u6471 2A68                       u6455 2A0A  
                     u6391 28EC                       u6711 0CBA                       u6631 0BC0  
                     u6551 08E0                       u7191 3842                       u7271 2810  
                     u4880 2C20                       u6480 3B62                       u5760 2502  
                     u5680 23D8                       u5920 20AE                       u5840 1E36  
                     u6800 0FBA                       u6720 0CCC                       u6640 0BD6  
                     u6560 092C                       u7280 2826                       u7417 3656  
                     u7337 2DE8                       u4777 319A                       u4881 2C1C  
                     u6481 3B5C                       u5761 24FE                       u5681 23D4  
                     u5921 20AA                       u5841 1E32                       u6385 28B6  
                     u6801 0FB6                       u6721 0CC8                       u6641 0BD2  
                     u6561 0928                       u7281 2822                       u4890 2C2E  
                     u6490 3B64                       u5690 23EA                       u5930 20F6  
                     u5850 1FB0                       u5770 1D6C                       u6810 1008  
                     u6730 0CE2                       u6650 0BF8                       u6570 095A  
                     u7290 2836                       u7427 3684                       u7347 2E02  
                     u4891 2C2A                       u5691 23E6                       u5931 20F2  
                     u5771 1D68                       u6811 1004                       u6731 0CDE  
                     u6651 0BF4                       u6571 0956                       u7291 2830  
                     u5940 2124                       u5860 200A                       u5780 1D7E  
                     u6900 125A                       u6820 1030                       u6740 0CF0  
                     u6660 0C1E                       u6580 09E6                       u7437 39D4  
                     u7357 2E1C                       u5941 2120                       u5861 2006  
                     u5781 1D7A                       u6901 1256                       u6821 102C  
                     u6741 0CEC                       u6661 0C1A                       u6581 09E2  
                     u5950 215E                       u5870 202A                       u5790 1D8E  
                     u6910 1276                       u6830 10D2                       u6750 0D1A  
                     u6670 0C34                       u6590 0A14                       u7367 2E36  
                     u5951 215A                       u5871 2026                       u5855 1FA6  
                     u5791 1D8A                       u6911 1272                       u6831 10CE  
                     u6751 0D16                       u6671 0C30                       u6591 0A10  
                     u5960 3466                       u5880 203C                       u6920 1288  
                     u6840 10E6                       u6760 0E62                       u6680 0C50  
                     u7296 2838                       u7377 2E50                       u5961 3462  
                     u5881 2038                       u6921 1284                       u6841 10E2  
                     u6761 0E5E                       u6681 0C4C                       u5970 3480  
                     u5890 206A                       u6930 1296                       u6850 10F8  
                     u6770 0EC8                       u6690 0C86                       u7387 2E6A  
                     u5971 347C                       u5891 2066                       u6931 1292  
                     u6851 10F4                       u6771 0EC4                       u6691 0C82  
                     u5980 34A6                       u6940 12CC                       u6860 1106  
                     u6780 0F10                       u7397 2E84                       u5981 34A2  
                     u6941 12C8                       u6861 1102                       u6781 0F0C  
                     u5990 34C4                       u6950 12FA                       u6870 1122  
                     u6790 0F20                       u5991 34C0                       u6951 12F6  
                     u6871 111E                       u6791 0F1C                       u6960 137E  
                     u6880 1130                       u6961 137A                       u6881 112C  
                     u6970 1398                       u6890 1188                       u6971 1394  
                     u6891 1184                       u6980 13B0                       u6981 13AC  
                     u6990 140C                       u6991 1408                       _dbuf 0100  
                     _atoi 2C42                       _cont 00F3                       _main 2516  
                     _prec 00EB                       _nout 00E7                       pad@i 001D  
                     pad@p 001A                       fsr1h 000FE2                       fsr2h 000FDA  
                     indf1 000FE7                       indf2 000FDF                       fsr1l 000FE1  
                     pad@w 001F                       fsr2l 000FD9                       btemp 005A  
         __end_of_I2C_Stop 3CF2           __end_of_ADC_Read 39F0              ___fpclassifyf 31B6  
                     prodh 000FF4                       prodl 000FF3                       start 0082  
    I2C_ADDRESS_SLAVE@data 0009      I2C_ADDRESS_SLAVE@modo 0006            ___fldiv@new_exp 003E  
          __end_of_HighISR 3900               ___param_bank 000000                      ??_pad 001C  
            ___fltol@sign1 000E                      ?_atoi 000D            __end_of___fladd 1918  
                    ?_main 00D5              ??_Master_Mode 0006            __end_of___fldiv 2516  
          __end_of___awdiv 3518            __end_of___flneg 3B32                      STR_11 083A  
                    STR_12 0842                      STR_15 0846                      STR_17 0846  
          __end_of___awmod 3744            __end_of___flmul 217C            __end_of___flsub 3A38  
          __end_of___fltol 2FB0            ___awdiv@divisor 0008       LCD_I2C_WriteText@col 0010  
     LCD_I2C_WriteText@row 0015                      i1l206 0072                      i2l235 38FC  
          ___awdiv@counter 000A               vfpfcnvrt@fmt 00AA                      _TMR0H 000FD7  
                    _TMR1H 000FCF                      _TMR0L 000FD6                      _TMR1L 000FCE  
                    _cont1 00F1                      _flags 0058                      _fputc 338A  
                    _fputs 3A7E            __end_of_isdigit 3B6A                      atoi@n 0015  
                    pad@fp 0016                      atoi@s 000D                      _width 00E9  
                    _putch 3D1C            __end_of_isspace 39A4          __end_of_I2C_Start 3D04  
          __end_of_isupper 3AFA                      tablat 000FF5                      ttemp5 005B  
                    ttemp6 005E                      ttemp7 0062                      status 000FD8  
                    wtemp8 005B            __end_of_sprintf 3952             ?___fpclassifyf 0006  
          __end_of_tolower 3A7E            __end_of_strncmp 338A      __end_of_Timer0_enable 3C76  
    __end_of_Timer1_enable 3CE0            __initialization 3BCC               __end_of_atoi 2D98  
             __end_of_main 2878                     ??_atoi 000F                     ??_main 00DA  
            __activetblptr 000002          _LCD_I2C_WriteText 30B4         ?_LCD_I2C_WriteText 0010  
               _Referencia 00F9        __end_of_Master_Mode 3CC8                     _ADCON0 000FC2  
                   ?_fputc 0006       __end_of_LCD_I2C_Init 2EAA                     ?_fputs 000F  
                   _ADRESH 000FC4                     _ADRESL 000FC3           ___awdiv@dividend 0006  
                   ?_putch 0001                     i1l4400 0042                     i1l4402 0062  
                   i1l4404 0066                     i1l4406 006A                     i1l4408 006C  
                   i1l4396 0026                     i1l4398 0034                     i2l4410 38AE  
                   i2l4420 38F4                     i2l4412 38BC                     i2l4422 38F6  
                   i2l4414 38CA                     i2l4416 38EC                     i2l4418 38F0  
      ??_LCD_I2C_WriteText 0013                  ??_HighISR 0001                     _SSPADD 000FC8  
                   _SSPBUF 000FC9           __end_of___xxtofl 2C42                     _LowISR 0018  
             vfprintf@cfmt 0056                     ___flge 2FB0                     ___fleq 3744  
               _Saturacion 00E3                  ??___fladd 004E                     ___wmul 3BF6  
                ??___fldiv 0035                  ??___awdiv 000A                  ??___flneg 000A  
                ??___awmod 000A                  ??___flmul 001C                  ??___flsub 0056  
                ??___fltol 000A                     _efgtoa 084C                     _floorf 2878  
                   clear_0 3BD2                     clear_1 3BDE           ___awdiv@quotient 000C  
          ___awmod@divisor 0008  __end_of_LCD_I2C_WriteText 31B6          _I2C_ADDRESS_SLAVE 3BA0  
                   isa$std 000001                     _sensor 00EF            ___awmod@counter 000A  
                   pad@buf 0018                     _strcpy 3850                     _strlen 3B6A  
       ?_I2C_ADDRESS_SLAVE 0006                     fputc@c 0006                     fputs@c 0013  
                   fputs@i 0014                     fputs@s 000F                  ??_isdigit 0008  
                ?_I2C_Stop 0001            ___fpclassifyf@e 000E            ___fpclassifyf@u 0010  
                ?_ADC_Read 0006            ___fpclassifyf@x 0006               __mediumconst 0000  
                ??_isspace 0008                     tblptrh 000FF7                  ??_isupper 0008  
                   tblptrl 000FF6                     tblptru 000FF8      __end_of_PCF8574_Write 3C5A  
                   putch@c 0001           __end_of_vfprintf 3850                  ??_sprintf 0058  
                ??_tolower 000E        ??_I2C_ADDRESS_SLAVE 0007                  ??_strncmp 000C  
               ___flge@ff1 002D                 ___flge@ff2 0031            ??___fpclassifyf 000A  
             ___xxtofl@arg 0010               ___xxtofl@exp 000F               ___xxtofl@val 0006  
               ___fleq@ff1 0006                 ___fleq@ff2 000A                 __accesstop 0060  
  __end_of__initialization 3BE8                 ___flneg@f1 0006              ___rparam_used 000001  
               ___fltol@f1 0006            _LCD_I2C_Databus 35DA             __pcstackCOMRAM 0001  
__end_of_I2C_ADDRESS_SLAVE 3BCC              __end_of_fputc 3454              __end_of_fputs 3AC2  
            __end_of_putch 3D1E                _Master_Mode 3CAE                 ??_I2C_Stop 0006  
               ??_ADC_Read 0008                    ??_fputc 000A                    ??_fputs 0013  
                  ??_putch 0006                 __pbssBANK0 00DB                 __pbssBANK1 0100  
                  ?_LowISR 0001                    ?___flge 002D                    ?___fleq 0006  
                  ?___wmul 0006                    ?_efgtoa 006A                    ?_floorf 0046  
              _s1_Anterior 00F8                    ?_strcpy 0006                    ?_strlen 0006  
              _s2_Anterior 00F6                  ?___xxtofl 0006                    _SSPCON2 000FC5  
  __end_of_LCD_I2C_Databus 3694                    _HighISR 0008                  _I2C_Start 3CF2  
                  __Hparam 0000                    __Lparam 0000                    ___fladd 1458  
                  ___fldiv 217C                    ___awdiv 3454                    ___flneg 3AFA  
                  ___awmod 3694                    ___flmul 1D52                    ___flsub 39F0  
                  ___fltol 2EAA               _LCD_I2C_Init 2D98                  ?_vfprintf 00BA  
             __psmallconst 0800                    __pcinit 3BCC                    __ramtop 0800  
                  __ptext0 2516                    __ptext1 3900                    __ptext2 37EE  
                  __ptext3 1918                    __ptext4 32B4                    __ptext5 084C  
                  __ptext6 3A38                    __ptext7 3AC2                    __ptext8 3850  
                  __ptext9 3518                  _T0CONbits 000FD5                  _T1CONbits 000FCD  
                  _isdigit 3B32                 ??___xxtofl 000A           ___awmod@dividend 0006  
                  _isspace 3952                    _isupper 3AC2                    efgtoa@c 0070  
                  efgtoa@d 0088                    efgtoa@e 00A0                    efgtoa@f 006C  
                  efgtoa@g 009C                    efgtoa@h 0092                    efgtoa@i 009A  
                  efgtoa@l 0096                    efgtoa@m 0082                    efgtoa@n 00A2  
                  efgtoa@p 008C                    efgtoa@t 007C                    efgtoa@u 00A4  
                  efgtoa@w 008E                    atoi@neg 0013                    _sprintf 3900  
                  _tolower 3A38                    _strncmp 32B4             __pintcode_body 38AC  
     end_of_initialization 3BE8                    floorf@e 0064                    floorf@m 0060  
                  floorf@u 0066                    floorf@x 0046                    fputc@fp 0008  
            __Lmediumconst 0000                    int_func 38AC                    fputs@fp 0011  
               ?_I2C_Start 0001          __end_of_vfpfcnvrt 1D52                 efgtoa@mode 0091  
               efgtoa@sign 008A                    postdec2 000FDD                    postinc0 000FEE  
                  postinc1 000FE6                    postinc2 000FDE   I2C_ADDRESS_SLAVE@address 0008  
               ??_vfprintf 0056                    strcpy@d 000E                    strlen@a 0008  
                  strcpy@s 000C                    strlen@s 0006                  _PORTAbits 000F80  
         _Interrupt_TIMER0 3D16           _Interrupt_TIMER1 3D10                ___fladd@grs 0055  
            ___xxtofl@sign 000E                  _TRISAbits 000F92                  _TRISBbits 000F93  
                _TRISCbits 000F94                ___fldiv@grs 0040                ___fldiv@rem 0039  
         _Interrupt_global 3D04           ?_LCD_I2C_Databus 000B                ___flmul@grs 0022  
           _ADC_Conversion 3C1C         LCD_I2C_nibble@ctrl 000F             __end_of_LowISR 0082  
           _I2C_Write_Data 3C92             __end_of___flge 30B4             __end_of___fleq 37EE  
              vfpfcnvrt@ap 00AC                vfpfcnvrt@ct 00B6                vfpfcnvrt@fp 00A8  
           __end_of___wmul 3C1C             __end_of_efgtoa 1458             __end_of_floorf 2A8E  
               floorf@F526 00DB               ?_Master_Mode 0001             __end_of_strcpy 38AC  
           __end_of_strlen 3BA0        start_initialization 3BCC                __end_of_pad 35DA  
   __end_of_ADC_Conversion 3C3C                  _s1_Actual 00F7      __end_of___fpclassifyf 32B4  
                _s2_Actual 00F5                ??_I2C_Start 0006                   ??_LowISR 0002  
            _Timer0_enable 3C5A     __end_of_I2C_Write_Data 3CAE                vfprintf@fmt 00BC  
            _Timer1_enable 3CC8                   ??___flge 0035                   ??___fleq 000E  
                 ??___wmul 000A                   ??_efgtoa 0071                   ??_floorf 004A  
                 ??_strcpy 000A                   ??_strlen 0008                  ___fladd@a 004A  
                ___fladd@b 0046                  ___fldiv@a 0031                  ___fldiv@b 002D  
                ___flmul@a 0018                  ___flmul@b 0014                __pbssCOMRAM 0058  
                ___flsub@a 0064                  ___flsub@b 0060              __pcstackBANK0 0060  
          ?_ADC_Conversion 0001        LCD_I2C_Databus@data 000D        LCD_I2C_Databus@ctrl 000C  
                 ?_HighISR 0001             _LCD_I2C_nibble 3C76                _efgtoa$1900 007A  
              _efgtoa$1891 0076                _efgtoa$1899 0078             ?_Timer0_enable 0001  
           ?_Timer1_enable 0001            ?_I2C_Write_Data 0001                  __pintcode 0008  
                 ?___fladd 0046                   ?___fldiv 002D                   ?___awdiv 0006  
                 ?___flneg 0006                   ?___awmod 0006                   ?___flmul 0014  
                 ?___flsub 0060                   ?___fltol 0006                __pintcodelo 0018  
              __smallconst 0800                   ?_isdigit 0006                   _I2C_Stop 3CE0  
                 _ADC_Read 39A4                   ?_isspace 0006                ADC_Read@CHx 000A  
                 ?_isupper 0006                   ?_sprintf 00C0                   ?_tolower 000C  
            _PCF8574_Write 3C3C                   ?_strncmp 0006     __end_of_LCD_I2C_nibble 3C92  
 __end_of_Interrupt_TIMER0 3D1C   __end_of_Interrupt_TIMER1 3D16             ___wmul@product 000A  
                 _LATBbits 000F8A                   _LATCbits 000F8B    LCD_I2C_WriteText@string 0011  
                 _IPR1bits 000F9F                   _PIE1bits 000F9D                   i1u501_20 0034  
                 i1u501_21 0030                   i1u502_20 0042                   i1u502_21 003E  
                 i1u503_20 0052                   i1u503_21 004C                   i1u503_26 0054  
                 i2u504_40 38BC                   i2u504_41 38B8                   i2u505_40 38CA  
                 i2u505_41 38C6                   _PIR1bits 000F9E                   i2u506_40 38DA  
                 i2u506_41 38D4                   i2u506_46 38DC                   _RCONbits 000FD0  
 __end_of_Interrupt_global 3D10                  _vfpfcnvrt 1918                 _ADCON0bits 000FC2  
               _ADCON1bits 000FC1                 _ADCON2bits 000FC0          ___wmul@multiplier 0006  
        LCD_I2C_nibble@cmd 000E               _isspace$1978 000C             ?_PCF8574_Write 0001  
               vfpfcnvrt@c 00B9                 vfpfcnvrt@f 00B2                _INTCON2bits 000FF1  
          ?_LCD_I2C_nibble 000E            ??_Timer0_enable 0006            ??_Timer1_enable 0006  
                 __Hrparam 0000                 vfprintf@ap 00BE                   __Lrparam 0000  
               vfprintf@fp 00BA                 ?_vfpfcnvrt 00A8         ___fpclassifyf@F465 00DF  
       LCD_I2C_Databus@cmd 000B                 sprintf@fmt 00C2                   ___xxtofl 2A8E  
                 __ptext10 3B6A                   __ptext11 3A7E                   __ptext20 1D52  
                 __ptext12 338A                   __ptext21 2FB0                   __ptext13 3D1C  
                 __ptext30 2A8E                   __ptext22 3744                   __ptext14 2878  
                 __ptext31 3CC8                   __ptext23 217C                   __ptext15 31B6  
                 __ptext40 3CE0                   __ptext32 3C5A                   __ptext24 3694  
                 __ptext16 2EAA                   __ptext41 3CF2                   __ptext33 3CAE  
                 __ptext25 3454                   __ptext17 39F0                   __ptext42 3BA0  
                 __ptext34 30B4                   __ptext26 2C42                   __ptext18 1458  
                 __ptext43 3D04                   __ptext35 2D98                   __ptext27 3952  
                 __ptext19 3AFA                   __ptext44 3D10                   __ptext36 3C76  
                 __ptext28 3B32                   __ptext45 3D16                   __ptext37 35DA  
                 __ptext29 3BF6                   __ptext46 39A4                   __ptext38 3C3C  
                 __ptext47 3C1C                   __ptext39 3C92                   _bufferTx 0150  
               strcpy@dest 0006                   efgtoa@fp 006A                   efgtoa@ne 0080  
                 efgtoa@pp 007E                   efgtoa@ou 0084                   isa$xinst 000000  
                 int$flags 005A                   _vfprintf 37EE                   main@argc 00D5  
                 main@argv 00D7                 _INTCONbits 000FF2            ??_PCF8574_Write 000A  
         ??_ADC_Conversion 0006                   isdigit@c 0006                   intlevel1 0000  
                 intlevel2 0000                  sprintf@ap 00C8                   isspace@c 0006  
         ??_I2C_Write_Data 0006                  strcpy@src 0008                   isupper@c 0006  
                strncmp@_l 0006                  strncmp@_r 0008                efgtoa@nmode 0090  
            ?_LCD_I2C_Init 0001          PCF8574_Write@byte 000A                ??_vfpfcnvrt 00AE  
                 sprintf@f 00CA                   tolower@c 000C                   sprintf@s 00C0  
                 strncmp@l 000D                   strncmp@n 000A                   strncmp@r 000F  
              _SSPCON1bits 000FC6                _SSPCON2bits 000FC5              ___fladd@signs 0052  
             ___fladd@aexp 0053               ___fladd@bexp 0054         I2C_Write_Data@data 0006  
        ?_Interrupt_TIMER0 0001          ?_Interrupt_TIMER1 0001         ??_Interrupt_TIMER0 0006  
       ??_Interrupt_TIMER1 0006  
